<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LRS&#39;s Blog</title>
  
  <subtitle>且随代码前行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-28T10:08:02.571Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>LRSand52M</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>创建动态通讯录</title>
    <link href="http://yoursite.com/2018/05/28/%E5%88%9B%E5%BB%BA%E5%8A%A8%E6%80%81%E9%80%9A%E8%AE%AF%E5%BD%95/"/>
    <id>http://yoursite.com/2018/05/28/创建动态通讯录/</id>
    <published>2018-05-28T09:56:35.000Z</published>
    <updated>2018-05-28T10:08:02.571Z</updated>
    
    <content type="html"><![CDATA[<p>今天我们用自定义类型和动态内存管理实现一个通讯录程序，能够实现以下要求:</p><ol><li>添加联系人信息</li><li>删除指定联系人信息</li><li>查找指定联系人信息</li><li>修改指定联系人信息</li><li>显示所有联系人信息</li><li>清空所有联系人</li><li>以名字排序所有联系人<a id="more"></a>  </li></ol><h1 id="头文件-Contact-h"><a href="#头文件-Contact-h" class="headerlink" title="头文件 Contact.h"></a>头文件 Contact.h</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __CONTACT_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __CONTACT_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;assert.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PERSON</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> Sex[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> Age;</span><br><span class="line"><span class="keyword">char</span> Tel[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> Address[<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line">&#125;Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BOOK</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> max;      <span class="comment">//当前上限</span></span><br><span class="line"><span class="keyword">int</span> count;    <span class="comment">//当前已存储人数</span></span><br><span class="line">Person* Data;</span><br><span class="line">&#125;Book;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initbook</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_person</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_person</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_person</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_person</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Change_person</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_person</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Req_mem</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Desbook</span><span class="params">(Book*people)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//__CONTACT_H__</span></span></span><br></pre></td></tr></table></figure><h1 id="源文件-Test-c"><a href="#源文件-Test-c" class="headerlink" title="源文件 Test.c"></a>源文件 Test.c</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Contact.h"</span></span></span><br><span class="line"><span class="comment">//仅查找</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     输入姓名："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, name);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(people-&gt;Data[i].Name, name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf("没有找到该联系人！\n");</span></span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initbook</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">(people)-&gt;Data = (Person*)<span class="built_in">malloc</span>(<span class="number">2</span>*<span class="keyword">sizeof</span>(Person));</span><br><span class="line">(people)-&gt;count = <span class="number">0</span>;</span><br><span class="line">(people)-&gt;max = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Desbook</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">free</span>(people-&gt;Data);</span><br><span class="line">people-&gt;Data = <span class="literal">NULL</span>;</span><br><span class="line">people-&gt;max = <span class="number">0</span>;</span><br><span class="line">people-&gt;count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (people == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     |%-15s\t|%-5s\t|%-5s\t|%-15s\t|%-20s\n"</span>, <span class="string">"姓名"</span>, <span class="string">"性别"</span>, <span class="string">"年龄"</span>, <span class="string">"电话"</span>, <span class="string">"地址"</span>);</span><br><span class="line"><span class="keyword">for</span> (; i&lt;=people-&gt;count<span class="number">-1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     |%-15s\t"</span>, people-&gt;Data[i].Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-5s\t"</span>, people-&gt;Data[i].Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-5d\t"</span>, people-&gt;Data[i].Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-15s\t"</span>, people-&gt;Data[i].Tel);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-20s\n"</span>, people-&gt;Data[i].Address);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请内存</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Req_mem</span><span class="params">(Book *people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person* p = (Person*)<span class="built_in">realloc</span>((people)-&gt;Data,((people)-&gt;max+=<span class="number">5</span>)*<span class="keyword">sizeof</span>(Person));</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">(people)-&gt;Data = p;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"realloc"</span>);</span><br><span class="line"><span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//增加成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_person</span><span class="params">(Book *people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="keyword">if</span> ((people)-&gt;count == <span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     通讯录已满！\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((people)-&gt;max<span class="number">-1</span> == (people)-&gt;count)</span><br><span class="line">&#123;</span><br><span class="line">Req_mem(people);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入姓名:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入性别:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入年龄:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;((people)-&gt;Data[(people)-&gt;count]).Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入联系方式:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Tel);</span><br><span class="line"><span class="keyword">for</span> (; i&lt;(people)-&gt;count; ++i)</span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((people)-&gt;Data[i].Tel, (people)-&gt;Data[(people)-&gt;count].Tel) == <span class="number">0</span>)</span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\t\t     联系人已存在！\n\t\t     "</span>);  </span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入住址:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Address);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     增加成功！\n"</span>);</span><br><span class="line">(people)-&gt;count++;</span><br><span class="line"><span class="comment">//printf("count = %d\n", (*people)-&gt;count);</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ret = find_person(people);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = ret;</span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count<span class="number">-1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">people-&gt;Data[i] = people-&gt;Data[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">people-&gt;count--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     没有该成员！\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     输入姓名："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(people-&gt;Data[i].Name, name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Name:%s\n\t\t     Sex:%s\n\t\t     Age:%d\n\t\t     Tel:%s\n\t\t     Add:%s\n\t\t     "</span>,</span><br><span class="line">people-&gt;Data[i].Name,</span><br><span class="line">people-&gt;Data[i].Sex,</span><br><span class="line">people-&gt;Data[i].Age,</span><br><span class="line">people-&gt;Data[i].Tel,</span><br><span class="line">people-&gt;Data[i].Address);</span><br><span class="line"><span class="comment">//printf("编号为 %d\n", i);</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     没有找到该联系人！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Change_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="keyword">int</span> ret = find_person(people);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Name-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Sex-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Age-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;(people-&gt;Data[ret]).Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Tel-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Tel);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Add-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Address);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     没有该成员！\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (people == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count - <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; j&lt;people-&gt;count - <span class="number">1</span> - i; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(people-&gt;Data[j].Name, people-&gt;Data[j + <span class="number">1</span>].Name) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Person tmp = people-&gt;Data[j];</span><br><span class="line">people-&gt;Data[j] = people-&gt;Data[j + <span class="number">1</span>];</span><br><span class="line">people-&gt;Data[j+<span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">show_person(people);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     ******************************通讯录管理系统*****************************\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************1.添加联系人**********************2.删除联系人*************\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************3.查找联系人**********************4.修改联系人*************\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************5.显示联系人**********************6.清空联系人*************\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************7.排序联系人**********************0.退出程序***************\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     *************************************************************************\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change_color</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> *str[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="keyword">char</span>*)str, <span class="string">"color %x%x"</span>,<span class="number">0</span>,<span class="number">15</span> - i);</span><br><span class="line">system((<span class="keyword">const</span> <span class="keyword">char</span>*)str);</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">15</span> == i)</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Book people;</span><br><span class="line">Initbook(&amp;people);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">change_color();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请选择:&gt; "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">switch</span> (n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">Add_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Del_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">Find_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">Change_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">show_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">Initbook(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">BubbleSort_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">free</span>((&amp;people)-&gt;Data);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\t\t     input error!\n\t\t     "</span>);</span><br><span class="line">   system(<span class="string">"pause"</span>);</span><br><span class="line">   <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个通讯录我加入了一点花里胡哨的元素：每次操作完毕都会使背景变色，你可以试试哦~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我们用自定义类型和动态内存管理实现一个通讯录程序，能够实现以下要求:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加联系人信息&lt;/li&gt;
&lt;li&gt;删除指定联系人信息&lt;/li&gt;
&lt;li&gt;查找指定联系人信息&lt;/li&gt;
&lt;li&gt;修改指定联系人信息&lt;/li&gt;
&lt;li&gt;显示所有联系人信息&lt;/li&gt;
&lt;li&gt;清空所有联系人&lt;/li&gt;
&lt;li&gt;以名字排序所有联系人
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="结构体" scheme="http://yoursite.com/tags/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>关于自定义类型</title>
    <link href="http://yoursite.com/2018/05/28/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2018/05/28/关于自定义类型/</id>
    <published>2018-05-28T07:52:01.000Z</published>
    <updated>2018-05-28T10:49:56.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、结构体类型的创建"><a href="#一、结构体类型的创建" class="headerlink" title="一、结构体类型的创建"></a>一、结构体类型的创建</h1><ul><li><p>1.结构体是一些值的集合，这些值称为成员变量。</p></li><li><p>2.结构体内的成员可以是不同类型的变量，也可以是标量，数组，指针甚至是其他的结构体。</p><a id="more"></a></li><li><p>3.结构体的创建：</p></li><li><p>例图：</p></li></ul><p><img src="/img/jiegouti.png" alt=""></p><ul><li><p>4.结构体内部成员的访问：（1）.结构体变量访问成员(结构变量的成员是通过点操作符(.)访问的.点操作符接受两个操作数.如果s是结构体的具体名称，age是其内部成员，则s.age就可以访问)。（2）结构体访问指向变量的成员（定义一个指向该结构体的结构体类型的指针ps，如果age是该结构体的内部成员，则(*s).age或者ps-&gt;age就可以访问）。</p></li><li><p>5.结构的自引用：在结构体中可以包含该结构体本身的成员，具体的自引用如下例：<br><img src="/img/yinyong.png" alt=""></p></li></ul><h1 id="二、结构体的初始化"><a href="#二、结构体的初始化" class="headerlink" title="二、结构体的初始化"></a>二、结构体的初始化</h1><ul><li><p>1.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">  <span class="keyword">char</span> name[<span class="number">10</span>];  </span><br><span class="line">  <span class="keyword">int</span> age;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s</span>=&#123;</span><span class="string">"lisi"</span>,<span class="number">22</span>&#125;;<span class="comment">//初始化</span></span><br></pre></td></tr></table></figure></li><li><p>2.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">  <span class="keyword">int</span> data;  </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">p</span>;</span>  </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span>  </span><br><span class="line">&#125;n=&#123;<span class="number">10</span>,&#123;<span class="string">"wangwu"</span>,<span class="number">21</span>&#125;,<span class="literal">NULL</span>&#125;;<span class="comment">//结构体嵌套初始化  </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">w</span>=&#123;</span><span class="number">20</span>,&#123;<span class="string">"liwu"</span>,<span class="number">23</span>&#125;,<span class="literal">NULL</span>&#125;;<span class="comment">//结构体嵌套初始化</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="三、结构体内存对齐"><a href="#三、结构体内存对齐" class="headerlink" title="三、结构体内存对齐"></a>三、结构体内存对齐</h1><ul><li>1.结构体的对齐原则：</li></ul><p>（1）第一个成员在与结构体变量偏移量为0的地址处。</p><p>（2）其他成员变量要对齐到某个数字（对齐数）的整数倍的地址处。对齐数=编译器默认的一个对齐数与该成员的大小的较小值。VS中默认的值为8， Linux中默认的值为4</p><p>（3）结构体总大小为最大对齐数（每个成员变量除了第一个成员都有一个对齐数）的整数倍。</p><p>（4）如果嵌套了结构体的情况，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体的整体大小就是所有最大对齐数的整数倍。</p><p>总体来说：结构体的内存对齐是拿空间换时间的做法，除此，对于结构体传参的问题，要传结构体的地址（函数传参的时候，参数是需要压栈的，如果传递一个结构体对象时候，结构体过大，参数压栈的系统开销比较大，所以会导致性能的下降）。</p><h1 id="四、位段"><a href="#四、位段" class="headerlink" title="四、位段"></a>四、位段</h1><ul><li><p>1.位段的声明和结构是相似的，有两个不同（一、位段的成员必须是int ,unsigned int，char.二，位段的成员名后边有一个冒号和一个数字）<br>如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      <span class="keyword">int</span> _a:<span class="number">2</span>;</span><br><span class="line">      <span class="keyword">int</span> _b:<span class="number">5</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>2.位段的内存分配</p></li></ul><p>（1）位段的空间上是按照需要以4个字节（int）或者1个字节（char）的方式来开辟的。</p><p>（2）位段涉及很多不确定因素，位段是不跨平台的，注重可移植的程序应该避免使用位段。</p><p>总体来说，跟结构相比，位段可以达到同样的效果，但是可以很好的节约空间，但是有跨平台的问题存在。</p><h1 id="五、枚举"><a href="#五、枚举" class="headerlink" title="五、枚举"></a>五、枚举</h1><p>枚举顾名思义就是一一列举。</p><ul><li>1.枚举类型的定义</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> Day  </span><br><span class="line">&#123;  </span><br><span class="line">  Mon,  </span><br><span class="line">  Tues,  </span><br><span class="line">Wed,  </span><br><span class="line">Thur,  </span><br><span class="line">Fri,  </span><br><span class="line">Sat,  </span><br><span class="line">Sun  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p> {}中的内容是枚举类型的可能取值，也叫枚举常量。这些可能取值都是有值的，默认从0开始，一次递增1，当然在定义的时候也可以赋初值的。如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">enum color  </span><br><span class="line">&#123;  </span><br><span class="line">  RED=1,  </span><br><span class="line">  GREEN=2,  </span><br><span class="line">  BLUE=4  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="六、联合"><a href="#六、联合" class="headerlink" title="六、联合"></a>六、联合</h1><ul><li>1.联合类型的定义</li></ul><p>联合类型定义的变量包含一系列的成员，特征是这些成员公用同一块空间（联合也称为共用体）。比如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//联合类型的声明  </span></span><br><span class="line"><span class="keyword">union</span> Un  </span><br><span class="line">&#123;  </span><br><span class="line">  <span class="keyword">char</span> c;  </span><br><span class="line">  <span class="keyword">int</span> i;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="comment">//联合变量的定义  </span></span><br><span class="line"><span class="keyword">union</span> Un un;</span><br></pre></td></tr></table></figure><ul><li><p>2.联合的特点<br>联合的成员是共用同一块内存空间的，这样一个联合变量的大小至少是最大成员的大小。</p></li><li><p>3.联合大小的计算</p></li></ul><p>（1）联合的大小至少是最大成员的大小。</p><p>（2）当最大成员大小不是最大对齐数的整数倍时，就要对齐到最大对齐数的整数倍。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、结构体类型的创建&quot;&gt;&lt;a href=&quot;#一、结构体类型的创建&quot; class=&quot;headerlink&quot; title=&quot;一、结构体类型的创建&quot;&gt;&lt;/a&gt;一、结构体类型的创建&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.结构体是一些值的集合，这些值称为成员变量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.结构体内的成员可以是不同类型的变量，也可以是标量，数组，指针甚至是其他的结构体。&lt;/p&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="自定义类型" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>hexo+next博客进阶攻略</title>
    <link href="http://yoursite.com/2018/05/22/hexo-next%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%E6%94%BB%E7%95%A5/"/>
    <id>http://yoursite.com/2018/05/22/hexo-next博客进阶攻略/</id>
    <published>2018-05-22T06:38:46.000Z</published>
    <updated>2018-05-22T09:29:36.173Z</updated>
    
    <content type="html"><![CDATA[<p>今天我将在Tim讲解完使用<strong>Github+hexo+next初步搭建自己的博客</strong>后继续讲解如何美化我们的博客，或者增加实用的（或者花里胡哨的）功能：</p><p>什么？你没看Tim的搭建攻略？没事，传送门在此：<strong><a href="https://zouchanglin.github.io/2018/05/08/2018050801/" target="_blank" rel="noopener">https://zouchanglin.github.io/2018/05/08/2018050801/</a></strong></p><a id="more"></a><h1 id="搭建前先说两句"><a href="#搭建前先说两句" class="headerlink" title="搭建前先说两句"></a>搭建前先说两句</h1><ul><li><p>再看这篇攻略之前确保你搭建好了自己的博客并且能正常使用</p></li><li><p>最好使用<strong>next</strong>主题，否则部分功能可能不能正常使用</p></li><li><p>不要作出改动后忘了保存</p></li><li><p>不要保存改动之后立即<strong>hexo d</strong>查看效果，Github服务器离我们远得很，会有延迟，建议使用<strong>hexo s</strong>在本地预览效果</p></li><li><p><strong>在进行攻略前最好备份自己的博客，因为代码中少一个符号都可能导致你的博客界面变成空白</strong>！！！！</p></li><li><h4 id="一定要看上面几句话！！！！"><a href="#一定要看上面几句话！！！！" class="headerlink" title="一定要看上面几句话！！！！"></a><strong>一定要看上面几句话！！！！</strong></h4></li></ul><h1 id="功能列表"><a href="#功能列表" class="headerlink" title="功能列表"></a>功能列表</h1><ul><li>增加用户<strong>头像</strong></li><li>增加文章<strong>字数统计</strong>与估计<strong>阅读时长</strong>和<strong>统计站点总字数</strong></li><li>实现<strong>分享功能</strong></li><li>实现博客内<strong>点击事件</strong></li><li>实现<strong>显示访客数量</strong></li><li>实现<strong>单篇文章统计访问数</strong></li><li>实现<strong>评论功能</strong></li><li>添加<strong>Github导航条</strong></li><li>实现<strong>统计站点运行时间</strong></li><li>预览前面所有的效果：<a href="http://lrsand52m.top" target="_blank" rel="noopener">http://lrsand52m.top</a></li></ul><h2 id="增加用户头像"><a href="#增加用户头像" class="headerlink" title="增加用户头像"></a>增加用户头像</h2><ul><li><p>在站点根目录下载配置文件中新增avatar，值设置为头像的链接地址。地址可以是网络地址，也可以是本地地址（放置在source/img/ 目录下）</p></li><li><p>比如我的头像图片文件名是：LRS.png      那么我把这个文件放进/img文件夹</p></li><li><p>然后在博客根目录下_config.yml里加上下面的代码：</p></li><li><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar: /img/LRS.png</span><br><span class="line">#上面是头像代码，把LRS.png改成你自己的头像文件名即可</span><br></pre></td></tr></table></figure></li><li><p>最后打开git bash，输入hexo g，然后hexo s在本地服务器查看效果吧~~~</p></li></ul><h2 id="增加文章字数统计与估计阅读时长和统计站点总字数"><a href="#增加文章字数统计与估计阅读时长和统计站点总字数" class="headerlink" title="增加文章字数统计与估计阅读时长和统计站点总字数"></a>增加文章<strong>字数统计</strong>与估计<strong>阅读时长和</strong>统计站点总字数</h2><ul><li><p>我们在实现这个功能前需要安装wordcount插件:</p></li><li><p>在git bash输入下面的代码即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure></li><li><p><strong>Node 版本 7.6.0 之前,请安装 2.x 版本 (Node.js v7.6.0 and previous) ，安装命令如下：</strong></p><p>（查看node版本：node -v）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure></li><li><p>NexT 主题默认已经集成了文章【字数统计】、【阅读时长】，【站点总字数】统计功能，如果我们需要使用，只需要在主题配置文件/next目录下的 _config.yml 中打开 wordcount 统计功能即可。如下所示：</p></li><li><p>你可以开启你自己想要开启的，下面表示全开 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true         # 单篇 字数统计，如不需要此功能就把前面的true改为false，下同理</span><br><span class="line">  min2read: true          # 单篇 阅读时长</span><br><span class="line">  totalcount: true        # 网站 字数统计</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure></li><li><p>改动之后我们还要加上说明否则站点的显示只有数字没有单位，所以我们要打开这个文件：/next/layout/_macro/post.swig ,找到下面的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>将它改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>同理，我们修改【阅读时长】，修改后如下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>总字数统计也同理—  —</p></li><li><p>修改完成后，重新执行启动服务预览就可以了。修改后，效果如下图所示：   </p></li><li><p><img src="/img/countzi.png" alt=""></p></li><li><p>感觉如何？</p></li></ul><p>​           </p><p><strong>增加分享功能</strong></p><ul><li><p>关于分享我首先是找到了使用shareSDK的分享功能，最后在实践的过程中发现它添加时步骤比较多，添加完成后效果比较丑（就是一个长条的浅蓝色按钮），而且点击后想要退出分享比较麻烦（它的取消按钮实在太难找了，它在页面最下方的位置，呈现浅灰色，这个设计太反人类了，决定放弃它了）。</p></li><li><p>在next主题的官方的文档中发现它自身集成了百度分享的功能，所以决定采用百度了。  </p></li><li><p>打开/next目录下的 _config.yml找到下面的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">#baidushare:</span><br><span class="line">  #type: button</span><br><span class="line">baidushare: true</span><br></pre></td></tr></table></figure><p>如果没找到也别慌，自己写这么一段就好</p></li><li><p>把它改成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#Share</span><br><span class="line">sharesdk: true</span><br><span class="line">shareSDKappkey: 25ec71ed74ff0</span><br><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">baidushare:</span><br><span class="line">  type: slide</span><br><span class="line">  baidushare: true</span><br></pre></td></tr></table></figure></li><li><p><strong>保存后</strong>再<strong>hexo g</strong>加<strong>hexo s</strong>在本地看看效果吧~~大概长这样：</p><p><img src="/img/baidushare.png" alt=""></p></li></ul><h2 id="实现博客内点击事件"><a href="#实现博客内点击事件" class="headerlink" title="实现博客内点击事件"></a>实现博客内<strong>点击事件</strong></h2><ul><li><p>这个功能很花里胡哨，具体看图：</p><p><img src="/img/dianjishijian.png" alt=""></p></li><li><p>实现之后在你的博客里每点击一次就会生成颜色各异的爱心</p></li><li><p>要实现点击出现桃心效果，需要在/themes/next/source/js/src里面新建一个love.js文件，在里面粘贴下面的代码：(代码有点乱，但是不影响)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></li><li><p>然后打开\themes\next\layout_layout.swig文件,在末尾（在前面引用会出现找不到的bug），引用love.js ，就是在文档末尾输入一行代码：（就是<strong>/body&gt;</strong>和<strong>/html&gt;</strong>的下面）</p><p><img src="/img/dianjidaima.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>大功告成！<strong>保存后</strong>再<strong>hexo g</strong>加<strong>hexo s</strong>在本地看看效果吧~~</p></li></ul><h2 id="实现显示访客数量"><a href="#实现显示访客数量" class="headerlink" title="实现显示访客数量"></a>实现<strong>显示访客数量</strong></h2><ul><li><p>打开\themes\next\layout_partials\footer.swig文件,在类copyright前加上红箭头指向的这句代码： </p><p><img src="/img/benzhanfangke.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="实现单篇文章统计访问数"><a href="#实现单篇文章统计访问数" class="headerlink" title="实现单篇文章统计访问数"></a>实现<strong>单篇文章统计访问数</strong></h2><ul><li><p>本段介绍如何实现通过leanCloud统计您网站的文章阅读量，并介绍一些基本实现方法。 值得庆幸的是Next主题默认就支持leanCloud的相关设置，你只需要进行几部操作就可以实现 ：</p></li><li><p><strong>注册LeanCloud</strong></p><ul><li><p>注册<a href="https://leancloud.cn/" target="_blank" rel="noopener">leanCloud</a>,操作过程略</p></li><li><p>创建应用：</p><p><img src="/img/chuangjianyingyong.png" alt=""></p><p>应用名称可随意</p></li></ul></li><li><p>点击应用名字进入应用</p><ul><li><p>创建一个叫Counter的class：</p><p><img src="/img/Counter.png" alt=""></p></li></ul></li><li><p>操作完成，在左边你会看到Counter的表 </p></li><li><h3 id="获取AppID和AppKey"><a href="#获取AppID和AppKey" class="headerlink" title="获取AppID和AppKey"></a>获取AppID和AppKey</h3></li><li><p>点击左边的设置    找到应用key选项</p><p><img src="/img/shezhi.png" alt=""></p><p>获取其中的你的AppID和你的AppKey</p></li><li><h3 id="设置主题配置文件"><a href="#设置主题配置文件" class="headerlink" title="设置主题配置文件"></a>设置主题配置文件</h3><p>设置主题配置文件<code>_config.yml</code>相关字段，实现阅读数量的统计<br>添加以下字段</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: #此处填你的app_id</span><br><span class="line">  app_key: #此处填你的的app_key</span><br></pre></td></tr></table></figure><p>完成配置并重新编译。到此已经成功设置了阅读量的统计。</p><p><strong>注意！！！！！！</strong></p></li><li><p>如果完成上述操作<strong>你已经正常显示</strong>了文章阅读统计那么下面的额外操作就不需要看了，你可以直接跳过。</p></li><li><p>但是<strong>如果你没有实现该功能</strong>，那么请仔细阅读下面的额外操作，尽量别把代码抄错了！</p></li><li><p><strong>额外操作部分</strong></p></li><li><p>按照next的代码组成和位置(当然你可以自定你的相关代码位置，本例将以next的位置方式存放对应的代码文件)</p></li><li><p>要实现leanCloud的相关功能你需要编辑或者新建以下部分代码:</p></li><li><p>_layout.swig -<code>themes\next\layout\_layout.swig</code>:主要是引用leanCloud的代码文件(此文件也是主题全局初始化引用接口)</p></li><li><p>post.swig -<code>themes\next\layout\_macro\post.swig</code>:主要是文章主题的代码文件(包含主题显示阅读数量的代码)</p></li><li><p>lean-analytics.swig -<code>themes\next\layout\_scripts\third-party\lean-analytics.swig</code>:包含leanCloud功能代码文件<br>以上为next的文件解析和位置介绍。你可以不需要按照以上位置设置，但相关文件的代码引用需要您自行修改。如果<br>文件存在请新建。以下贴出相关代码</p></li><li><p><strong>实现代码</strong></p></li><li><p><strong>_layout.swig代码</strong></p></li><li><p>你需要添加以下部分代码：通常如果next集成了leanCloud,你会发现以下代码</p><p>代码的作用是<code>引用leanCloud的功能代码</code>。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;_scripts/third-party/lean-analytics.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>post.swig代码</strong></p></li><li><p>你需要在合适的位置添加如下代码，同理如果你的NEXT集成了LeanCloud功能，你会发现以下代码</p><p>代码主要是在<code>文章显示阅读次数</code>等</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;# LeanCould PageView #&#125;</span><br><span class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</span><br><span class="line">   &lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</span><br><span class="line">     &amp;nbsp; | &amp;nbsp;</span><br><span class="line">     &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">       &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">     &lt;/span&gt;</span><br><span class="line">     &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125; &lt;/span&gt;</span><br><span class="line">     &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>lean-analytic.swig代码</strong></p></li><li><p>如果你的NEXT集成了leanCloud功能，你会在本文提到的位置看到此文件，若果没有请新建并填入</p><p>以下代码</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;# custom analytics part create by xiamo #&#125;</span><br><span class="line">  &lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    function showTime(Counter) &#123;</span><br><span class="line">      var query = new AV.Query(Counter);</span><br><span class="line">      var entries = [];</span><br><span class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</span><br><span class="line"></span><br><span class="line">      $visitors.each(function () &#123;</span><br><span class="line">        entries.push( $(this).attr(&quot;id&quot;).trim() );</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      query.containedIn(&apos;url&apos;, entries);</span><br><span class="line">      query.find()</span><br><span class="line">        .done(function (results) &#123;</span><br><span class="line">          var COUNT_CONTAINER_REF = &apos;.leancloud-visitors-count&apos;;</span><br><span class="line"></span><br><span class="line">          if (results.length === 0) &#123;</span><br><span class="line">            $visitors.find(COUNT_CONTAINER_REF).text(0);</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          for (var i = 0; i &lt; results.length; i++) &#123;</span><br><span class="line">            var item = results[i];</span><br><span class="line">            var url = item.get(&apos;url&apos;);</span><br><span class="line">            var time = item.get(&apos;time&apos;);</span><br><span class="line">            var element = document.getElementById(url);</span><br><span class="line"></span><br><span class="line">            $(element).find(COUNT_CONTAINER_REF).text(time);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(function (object, error) &#123;</span><br><span class="line">          console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function addCount(Counter) &#123;</span><br><span class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</span><br><span class="line">      var url = $visitors.attr(&apos;id&apos;).trim();</span><br><span class="line">      var title = $visitors.attr(&apos;data-flag-title&apos;).trim();</span><br><span class="line">      var query = new AV.Query(Counter);</span><br><span class="line"></span><br><span class="line">      query.equalTo(&quot;url&quot;, url);</span><br><span class="line">      query.find(&#123;</span><br><span class="line">        success: function(results) &#123;</span><br><span class="line">          if (results.length &gt; 0) &#123;</span><br><span class="line">            var counter = results[0];</span><br><span class="line">            counter.fetchWhenSave(true);</span><br><span class="line">            counter.increment(&quot;time&quot;);</span><br><span class="line">            counter.save(null, &#123;</span><br><span class="line">              success: function(counter) &#123;</span><br><span class="line">                var $element = $(document.getElementById(url));</span><br><span class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.get(&apos;time&apos;));</span><br><span class="line">              &#125;,</span><br><span class="line">              error: function(counter, error) &#123;</span><br><span class="line">                console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            var newcounter = new Counter();</span><br><span class="line">            /* Set ACL */</span><br><span class="line">            var acl = new AV.ACL();</span><br><span class="line">            acl.setPublicReadAccess(true);</span><br><span class="line">            acl.setPublicWriteAccess(true);</span><br><span class="line">            newcounter.setACL(acl);</span><br><span class="line">            /* End Set ACL */</span><br><span class="line">            newcounter.set(&quot;title&quot;, title);</span><br><span class="line">            newcounter.set(&quot;url&quot;, url);</span><br><span class="line">            newcounter.set(&quot;time&quot;, 1);</span><br><span class="line">            newcounter.save(null, &#123;</span><br><span class="line">              success: function(newcounter) &#123;</span><br><span class="line">                var $element = $(document.getElementById(url));</span><br><span class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(newcounter.get(&apos;time&apos;));</span><br><span class="line">              &#125;,</span><br><span class="line">              error: function(newcounter, error) &#123;</span><br><span class="line">                console.log(&apos;Failed to create&apos;);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function(error) &#123;</span><br><span class="line">          console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $(function() &#123;</span><br><span class="line">      var Counter = AV.Object.extend(&quot;Counter&quot;);</span><br><span class="line">      if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123;</span><br><span class="line">        addCount(Counter);</span><br><span class="line">      &#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123;</span><br><span class="line">        showTime(Counter);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="修改语言配置文件"><a href="#修改语言配置文件" class="headerlink" title="修改语言配置文件"></a>修改语言配置文件</h4></li><li><p>主要是添加<code>visitors</code>字段<br><strong>英文网站：</strong>修改<code>themes\next\languages\en.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">  sticky: Sticky</span><br><span class="line">  posted: Posted on</span><br><span class="line">  visitors: Views // 增加的字段</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><strong>中文网站：</strong>修改<code>themes\next\languages\zh-Hans.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">  posted: 发表于</span><br><span class="line">  visitors: 阅读次数</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure></li><li><p><strong>WEB安全</strong></p></li><li><p>为了保证应用的统计计数功能仅应用于自己的博客系统，你可以在应用-&gt;<code>设置</code>-&gt;<code>安全中心的Web安全域名</code></p><p>中加入自己的博客域名，以保证数据的调用安全。</p><p><img src="/img/anquanyuming.png" alt=""></p></li><li><h3 id="设置完成"><a href="#设置完成" class="headerlink" title="设置完成"></a>设置完成</h3></li><li><p>以上部分设置完成，就可以正常使用leanCloudS实现文章阅读统计。</p></li></ul><h2 id="实现评论功能"><a href="#实现评论功能" class="headerlink" title="实现评论功能"></a>实现<strong>评论功能</strong></h2><ul><li><h3 id="评论功能概述"><a href="#评论功能概述" class="headerlink" title="评论功能概述"></a>评论功能概述</h3><ul><li>目前博客站点使用的评论功能，多说，网易云跟贴都已经下线。Disqus也被挡在墙外，友言貌似也不行。</li></ul><p>可用的评论系统大概有：</p><ul><li>HyperComments：<a href="https://link.zhihu.com/?target=https%3A//www.hypercomments.com" target="_blank" rel="noopener">https://www.hypercomments.com</a> （来自俄罗斯的评论系统，使用谷歌账号注册。可以访问，不会用，好气。）</li><li>来必力：<a href="https://link.zhihu.com/?target=https%3A//livere.com" target="_blank" rel="noopener">https://livere.com</a> （来自韩国，使用邮箱注册。）</li><li>畅言： <a href="https://link.zhihu.com/?target=http%3A//changyan.kuaizhan.com" target="_blank" rel="noopener">http://changyan.kuaizhan.com</a> （安装需要备案号。不太好用。）</li><li>Gitment： <a href="https://link.zhihu.com/?target=https%3A//github.com/imsun/gitment" target="_blank" rel="noopener">https://github.com/imsun/gitment</a> （有点小bug，比如说每次需要手动初始化，登录时会跳到主页。。）</li><li>Valine:  <a href="https://link.zhihu.com/?target=https%3A//github.com/xCss/Valine" target="_blank" rel="noopener">https://github.com/xCss/Valine</a> (基于Leancloud的极简风评论系统，用了下，没效果，是我Next主题的原因还是？）</li><li>综上，最终采用了来必力。</li></ul></li><li><p><strong>注册账号</strong></p><ul><li>打开来必力官网注册：<a href="https://link.zhihu.com/?target=https%3A//livere.com" target="_blank" rel="noopener">https://livere.com</a></li><li>（如注册不来请自行科学上网）</li></ul></li><li><p><strong>安装</strong></p><ul><li><p>点击上方的安装，选择免费的city版本。</p></li><li><p>并点击现在安装，出现如下界面。 </p><p><img src="/img/laibili.png" alt=""></p></li></ul></li><li><ul><li><p>复制其中的uid字段。</p><p>打开主题目录下的<code>blog/themes/next/_config.yml</code>配置文件，定位到<code>livere_uid</code>字段，粘贴上刚刚复制的UID。</p><p>至此，大功告成。</p></li></ul></li></ul><h2 id="添加Github导航条"><a href="#添加Github导航条" class="headerlink" title="添加Github导航条"></a>添加<strong>Github导航条</strong></h2><ul><li>在首页添加github导航条，点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>选择需要的样式，然后将代码复制到themes/next/layout/_layout.swig  </li></ul><p><img src="/img/daohangtiao.png" alt=""></p><ul><li><p>并将href后面的网址改为你的github地址，最终界面如图 ：</p><p><img src="/img/daohangtiao2.png" alt=""></p></li></ul><h2 id="实现统计站点运行时间"><a href="#实现统计站点运行时间" class="headerlink" title="实现统计站点运行时间"></a>实现<strong>统计站点运行时间</strong></h2><ul><li><p>实时展示你的博客已经运行了多长时间了，我还是蛮喜欢这个功能的，随着时间的增长，和你的博客访问量形成照样，成就感也会增添不少。 </p></li><li><p>在 <code>hexo/themes/[your theme]/layout</code> 文件夹下找到你的 <code>footer</code> 文件，即脚布局文件，在对应的位置添加一下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date(); </span><br><span class="line">    function createtime() &#123; </span><br><span class="line">        var grt= new Date(&quot;02/14/2018 12:49:00&quot;);//此处修改你的建站时间或者网站上线时间 </span><br><span class="line">        now.setTime(now.getTime()+250); </span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125; </span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125; </span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; </span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>下面是效果图：</li></ul><p><img src="/img/tongjishijian.png" alt=""></p></li></ul><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><ul><li>功能暂时只添加这么多，后面应该会持续更新些新奇的玩意，想查看所有效果的预览，请直接进：<a href="http://lrsand52m.top" target="_blank" rel="noopener">http://lrsand52m.top</a></li><li>感谢你的观看！</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我将在Tim讲解完使用&lt;strong&gt;Github+hexo+next初步搭建自己的博客&lt;/strong&gt;后继续讲解如何美化我们的博客，或者增加实用的（或者花里胡哨的）功能：&lt;/p&gt;
&lt;p&gt;什么？你没看Tim的搭建攻略？没事，传送门在此：&lt;strong&gt;&lt;a href=&quot;https://zouchanglin.github.io/2018/05/08/2018050801/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zouchanglin.github.io/2018/05/08/2018050801/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>主要元素求法及优化</title>
    <link href="http://yoursite.com/2018/05/21/%E4%B8%BB%E8%A6%81%E5%85%83%E7%B4%A0%E6%B1%82%E6%B3%95%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/05/21/主要元素求法及优化/</id>
    <published>2018-05-21T11:15:25.000Z</published>
    <updated>2018-05-21T11:36:01.597Z</updated>
    
    <content type="html"><![CDATA[<p>在一本书中，我看到这样一道题：<strong>已知一个数组中有一个元素的出现次数占所有元素个数一半以上，找出这个元素。</strong></p><a id="more"></a><p>我想：真简单！</p><p>是的，两个for循环能解决的问题，的确不能说难。</p><p>但是，两个for循环的确有些浪费，效率也奇低，有点儿“拿不出手”，所以我开始思索如何简化算法（日常思索）：</p><p>突然我心生一计：既然出现的频率这么高，那我对这个数组排完序，出现在中间的数不就是这个主要元素吗？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 假设数组为：5 4 3 3 3 2 3 1 3  </span><br><span class="line">2. 排完序后为：1 2 3 3 3 3 3 4 5</span><br></pre></td></tr></table></figure><p>这样这个算法的时间复杂度就完全取决于我排序算法的时间复杂度了</p><p>真是令人振奋呢：排序有三种不同时间复杂度的：</p><table><thead><tr><th style="text-align:center">排序方法</th><th style="text-align:center">复杂度</th><th style="text-align:center">推荐程度</th></tr></thead><tbody><tr><td style="text-align:center">冒泡排序</td><td style="text-align:center">O(N^2)</td><td style="text-align:center">**</td></tr><tr><td style="text-align:center">桶排序</td><td style="text-align:center">O(N)</td><td style="text-align:center">**</td></tr><tr><td style="text-align:center">快速排序</td><td style="text-align:center">O(NlogN)</td><td style="text-align:center">***</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">…</td></tr></tbody></table><p>当然这里只推荐快排，因为我们给出的数值范围不确定，这样桶排序极其容易浪费掉大量内存，也是“拿不出手”的。</p><p>但是快排的时间复杂度也不能说是很低，能不能更加简化呢？比如说O(N)或者O(logN)？</p><p>好吧，我们是理智人，O(logN)就有点逆天，毕竟读入数组就不止这个复杂度了。</p><p>所以我们重点讨论O(N)的情形：</p><p>消除法：因为占的”份额”实在是多，所以主要元素就是与其他元素一一消除，最终剩下的数也绝对是主元素，所以我们可以考虑用这个方法来“消”出这个主要元素。</p><p>这样我们就创造一个计数器k，当遇到相同元素+1，不同减一，很容易知道最终结果必为正数。不过中间过程中会遇到为0的情况，这样我们就初始化k的值，并且把他的指向保存到下一位就行了。</p><p>在指完整个数组后，最近保存的指向肯定就是主要元素啦！（想想为什么）</p><p>代码附上：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="keyword">int</span> book = <span class="number">1</span>;<span class="comment">//提供消除依据  </span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//记录当前比较的数  </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);  </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    i = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> == n);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">while</span>(i&lt;n)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">if</span>(a[i] == a[num])  </span><br><span class="line">            &#123;  </span><br><span class="line">                book++;<span class="comment">//相等book+1，数组元素向后寻找  </span></span><br><span class="line">                i++;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span>   </span><br><span class="line">            &#123;  </span><br><span class="line">                book--;<span class="comment">//不等-1  </span></span><br><span class="line">                <span class="keyword">if</span>(!book)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    i++;<span class="comment">//book=0时，标记数也之移动  </span></span><br><span class="line">                    num = i;  </span><br><span class="line">                &#125;  </span><br><span class="line">                <span class="keyword">else</span> i++;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"主元素为：%d\n"</span>,a[num]);<span class="comment">//主要元素肯定是标记的数，输出就行  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在一本书中，我看到这样一道题：&lt;strong&gt;已知一个数组中有一个元素的出现次数占所有元素个数一半以上，找出这个元素。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数组运算" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
</feed>
