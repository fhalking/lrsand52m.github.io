<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LRS&#39;s Blog</title>
  
  <subtitle>且随代码前行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-29T08:02:16.683Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>LRSand52M</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>类和对象</title>
    <link href="http://yoursite.com/2018/10/29/"/>
    <id>http://yoursite.com/2018/10/29/</id>
    <published>2018-10-29T05:09:58.000Z</published>
    <updated>2018-10-29T08:02:16.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a><strong>类和对象</strong></h1><p><strong>学到C++，最基础也是最重要的自然就是类和对象了。</strong><br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li><p><strong>类和结构体</strong><br>为了<strong>兼容C语言</strong>，我们可以用struct来定义类，但是结构体里面是不能出现函数的，类却可以，我们可以理解为，结构体是一种数据的类型，而类是对象的类型，类能完成结构体的所有功能。   </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span>    </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">SetStudentInfo</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* name, <span class="keyword">const</span> <span class="keyword">char</span>* gender, <span class="keyword">int</span> age)</span>    </span></span><br><span class="line"><span class="function">        </span>&#123;       </span><br><span class="line">          <span class="built_in">strcpy</span>( _name, name);</span><br><span class="line">          <span class="built_in">strcpy</span>( _gender, gender);</span><br><span class="line">          _age = age;</span><br><span class="line">        &#125;        </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">PrintStudentInfo</span><span class="params">()</span>   </span></span><br><span class="line"><span class="function">       </span>&#123;        </span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;_name&lt;&lt;<span class="string">" "</span>&lt;&lt;_gender&lt;&lt;<span class="string">" "</span>&lt;&lt;_age&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">       &#125;        </span><br><span class="line">       <span class="keyword">char</span> _name[<span class="number">20</span>];    </span><br><span class="line">       <span class="keyword">char</span> _gender[<span class="number">3</span>];    </span><br><span class="line">       <span class="keyword">int</span> _age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    Student s;    </span><br><span class="line">    s.SetStudentInfo(<span class="string">"Peter"</span>, <span class="string">"男"</span>, <span class="number">18</span>);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>类和对象</strong><br>类可以当成是对象的抽象，而对象是类的具体化实现。举个例子，我们可以说人类是一个类，而我们每个人就是一个对象，是人类这个概念的具体化。<br>类不占用内存，但是对象占用。</p></li><li><strong>类的函数</strong><br>类的函数可以在类里直接实现，也可以在类里写声明，在类外定义。如果一个函数代码量少并且经常用到建议直接放在类里实现，因为在类里实现的函数，编译器可能会将其当成内联函数处理，会在一些地方提高运行效率。<br>在类外实现的函数必须带上类域限定符来表示该函数属于哪个类。<br>类的成员函数是指那些把定义和原型写在类定义内部的函数，就像类定义中的其他变量一样。类成员函数是类的一个成员，它可以操作类的任意对象，可以访问对象中的所有成员。（静态成员函数除外）</li><li><strong>类的访问限定符</strong><br>类有三个访问限定符：public private protected<br>一个类可以有多个 public、protected 或 private 标记区域。每个标记区域在下一个标记区域开始之前或者在遇到类主体结束右括号之前都是有效的。成员和类的默认访问修饰符是 private。(struct定义的类默认是public)<br>public修饰的成员可以在类外直接访问，另外两个不行。</li><li><strong>类与成员变量</strong><br>尽量避免成员函数的参数与成员变量同名，因为成员变量在类中具有全局作用域属性，会造成一些地方可读性差的问题。</li><li><strong>类对象的大小</strong><br>基本与结构体计算大小一致，但是成员函数不占用对象大小，并且用空类或者只含函数的类实例化的对象的大小不为零而唯一（为了能够唯一标识该对象）。</li><li><strong>类的this指针</strong><br>C++编译器给每个“成员函数“增加了一个隐藏的指针参数，让该指 针指向当前对象(函数运行时调用该函数的对象)，在函数体中所有成员变量的操作，都是通过该指针去访 问。只不过所有的操作对用户是透明的，即用户不需要来传递，编译器自动完成。</li><li><strong>this指针的特性</strong><ol><li>this指针的类型：类类型* const</li><li>只能在“成员函数”的内部使用</li><li>时时刻刻指向当前对象，不属于对象的一部分，不会影响sizeof的结果</li><li>this指针是成员函数第一个隐含的指针形参，一般情况由编译器通过ecx寄存器自动传递，不需要用户传递  <h2 id="类的六个默认成员函数"><a href="#类的六个默认成员函数" class="headerlink" title="类的六个默认成员函数"></a><strong>类的六个默认成员函数</strong></h2></li></ol></li></ul><ol><li><strong>构造函数</strong></li><li><strong>析构函数</strong></li><li><strong>拷贝构造函数</strong></li><li><strong>赋值操作符重载</strong></li><li><strong>取地址操作符重载</strong></li><li><strong>const修饰的取地址操作符重载</strong></li></ol><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数  "></a><strong>构造函数  </strong></h3><p>对于一个类，可以通过成员函数等公有的方法给对象设置内容，但是如果每次创建对象都调用该方法设置信息，未免有点麻烦，那能否在<strong>对象创建</strong>时，就将信息设置进去呢？<br>构造函数是一个特殊的成员函数，名字与类名相同,创建类类型对象时由<strong>编译器自动调用</strong>，保证每个数据成员 都有一个合适的初始值，并且在对象的生命周期内<strong>只调用一次</strong>。<br>构造函数是特殊的成员函数，其特征如下：  </p><ol><li><strong>函数名与类名相同</strong>。</li><li>无返回值。</li><li>对象构造（对象实例化）时编译器自动调用对应的构造函数。</li><li>构造函数<strong>可以重载</strong>  </li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Date</span></span></span><br><span class="line"><span class="class">&#123;</span> <span class="keyword">public</span> :   </span><br><span class="line">   <span class="comment">// 1.无参构造函数    </span></span><br><span class="line">   Date ()    &#123;&#125;        </span><br><span class="line">   <span class="comment">// 2.带参构造函数    </span></span><br><span class="line">   Date (<span class="keyword">int</span> year, <span class="keyword">int</span> month , <span class="keyword">int</span> day )    </span><br><span class="line">   &#123;       </span><br><span class="line">      _year = year ;</span><br><span class="line">      _month = month ;</span><br><span class="line">      _day = day ;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> :    </span><br><span class="line">    <span class="keyword">int</span> _year ;    </span><br><span class="line">    <span class="keyword">int</span> _month ;    </span><br><span class="line">    <span class="keyword">int</span> _day ; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestDate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    Date d1;</span><br><span class="line">  <span class="comment">// 调用无参构造函数    </span></span><br><span class="line">  <span class="function">Date <span class="title">d2</span> <span class="params">(<span class="number">2015</span>, <span class="number">1</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">  <span class="comment">// 调用带参的构造函数        </span></span><br><span class="line">  <span class="comment">// 注意：如果通过无参构造函数创建对象时，对象后面不用跟括号，否则就成了函数声明    </span></span><br><span class="line">  <span class="comment">// 以下代码的函数：声明了d3函数，该函数无参，返回一个日期类型的对象    Date d3();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>构造函数可以在类中定义，也可以在类外定义。</li><li>如果类中没有显式定义构造函数，则C++编译器会<strong>自动生成一个无参的默认构造函数</strong>，一旦用户显式定 义编译器将<strong>不再生成</strong>  </li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Date</span></span></span><br><span class="line"><span class="class">&#123;</span> <span class="keyword">public</span>:    </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">SetDate</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span>    </span></span><br><span class="line"><span class="function">  </span>&#123;       </span><br><span class="line">     _year = year;        </span><br><span class="line">     _month = month;        </span><br><span class="line">     _day = day;    </span><br><span class="line">   &#125;        </span><br><span class="line">   <span class="comment">/*    </span></span><br><span class="line"><span class="comment">   // 如果用户显式定义了构造函数，编译器将不再生成    </span></span><br><span class="line"><span class="comment">   Date (int year, int month, int day)    </span></span><br><span class="line"><span class="comment">   &#123;        </span></span><br><span class="line"><span class="comment">      _year = year;       </span></span><br><span class="line"><span class="comment">      _month = month;</span></span><br><span class="line"><span class="comment">      _day = day;    </span></span><br><span class="line"><span class="comment">    &#125;    */</span></span><br><span class="line">  <span class="keyword">private</span>:    </span><br><span class="line">    <span class="keyword">int</span> _year;    </span><br><span class="line">    <span class="keyword">int</span> _month;    </span><br><span class="line">    <span class="keyword">int</span> _day;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">  <span class="comment">// 没有定义构造函数，对象也可以创建成功，因此此处调用的是编译器生成的默认构造函数    </span></span><br><span class="line">  Date d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>无参的构造函数和全缺省的构造函数都称为缺省构造函数，并且缺省构造函数<strong>只能有一个</strong>   </li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缺省构造函数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">public</span>:    </span><br><span class="line">    Date()    </span><br><span class="line">    &#123;        </span><br><span class="line">      _year = <span class="number">1900</span> ;        </span><br><span class="line">      _month = <span class="number">1</span> ;        </span><br><span class="line">      _day = <span class="number">1</span>;    </span><br><span class="line">    &#125;        </span><br><span class="line">    Date (<span class="keyword">int</span> year = <span class="number">1900</span>, <span class="keyword">int</span> month = <span class="number">1</span>, <span class="keyword">int</span> day = <span class="number">1</span>)    </span><br><span class="line">    &#123;        </span><br><span class="line">      _year = year;        </span><br><span class="line">      _month = month;        </span><br><span class="line">      _day = day;    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> :    </span><br><span class="line">  <span class="keyword">int</span> _year ;    </span><br><span class="line">  <span class="keyword">int</span> _month ;    </span><br><span class="line">  <span class="keyword">int</span> _day ;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下测试函数无法通过编译</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">   Date d1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>对于含有其他类的类执行默认构造函数时，会对其他类的默认构造函数进行调用。</li></ol><h3 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h3><p>析构函数：与构造函数功能相反，在对象被销毁时，由编译器自动调用，完成类的一些资源清理和汕尾工作。(而不是删除对象，析构函数是在对象销毁前自动调用的)  </p><ol><li>析构函数名是在类名前加上字符 ~。</li><li>无参数无返回值。</li><li><strong>一个类有且只有一个析构函数</strong>。若未显式定义，系统会自动生成默认的析构函数。</li><li>对象生命周期结束时，<strong>C++编译系统系统自动调用析构函数</strong>。</li></ol><h3 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h3><p>构造函数：只有单个形参，该形参是对本类类型对象的引用(一般常用const修饰)，在用已存在的类类型对象 创建新对象时由<strong>编译器自动调用 </strong>   </p><ol><li>拷贝构造函数<strong>是构造函数的一个重载形式</strong>。</li><li>拷贝构造函数的参数只有一个且<strong>必须使用引用传参</strong>，使用传值方式会引发无穷递归调用（形参也会调用拷贝构造函数引发无穷递归）。</li><li>若未显示定义，系统会默认生成默认的拷贝构造函数。 默认的拷贝构造函数会按照成员的声明顺序依次 拷贝类成员进行初始化    </li></ol><h3 id="赋值操作符重载"><a href="#赋值操作符重载" class="headerlink" title="赋值操作符重载"></a>赋值操作符重载</h3><p>类似于拷贝构造函数，为了使代码可读性变强，可以方便的对对象用另一个对象赋值。</p><h4 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h4><p>对于系统默认的拷贝构造与赋值函数，都只是将变量值一一拷贝的浅拷贝，对于动态开辟的空间，必须使用深拷贝，否则在对象销毁时会使程序崩溃。</p><h3 id="取地址与const修饰的取地址操作符重载"><a href="#取地址与const修饰的取地址操作符重载" class="headerlink" title="取地址与const修饰的取地址操作符重载"></a>取地址与const修饰的取地址操作符重载</h3><p>这两个默认成员函数一般不用重新定义 ，编译器默认会生成。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Date</span></span></span><br><span class="line"><span class="class">&#123;</span> <span class="keyword">public</span> :    </span><br><span class="line">  Date* <span class="keyword">operator</span>&amp;()    </span><br><span class="line">  &#123;        </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span> ;    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> Date* <span class="keyword">operator</span>&amp;()<span class="keyword">const</span>    </span><br><span class="line">  &#123;        </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span> ;    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> :    </span><br><span class="line">  <span class="keyword">int</span> _year ; <span class="comment">// 年    </span></span><br><span class="line">  <span class="keyword">int</span> _month ; <span class="comment">// 月    </span></span><br><span class="line">  <span class="keyword">int</span> _day ; <span class="comment">// 日</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>这两个运算符一般不需要重载，使用编译器生成的默认取地址的重载即可，只有特殊情况，才需要重载，比 如想让别人获取到指定的内容.</p><h2 id="初始化列表"><a href="#初始化列表" class="headerlink" title="初始化列表"></a><strong>初始化列表</strong></h2><p><em>构造函数调用之后，对象中已经有了一个初始值，但是我们不能将其称作为类对象成员的初始化，构造函数体中的语句只能将其称作为赋初值，而不能称作初始化。因为初始化只能初始化一次，而构造函数体内 可以多次赋值。</em><br>初始化列表：以一个冒号开始，接着是一个以逗号分隔的数据成员列表，每个”成员变量”后面跟一个放在括 号中的初始值或表达式。  </p><ol><li>每个成员变量在初始化列表中<strong>只能出现一次</strong>(初始化只能初始化一次)</li><li>成员变量在类中<strong>声明次序就是其在初始化列表中的初始化顺序</strong>，与其在<strong>初始化列表中的先后次序无关</strong></li><li><strong>尽量避免使用成员初始化成员</strong></li><li>类中包含以下成员，一定要放在初始化列表位置进行初始化:<br>1.引用成员变量<br>2.const成员变量<br>3.类类型成员(该类有非缺省的构造函数)  </li></ol><p>构造函数不仅可以构造与初始化对象，对于单个参数的构造函数，还具有类型转换的作用。(用关键字explicit可以禁止这样的隐式转换)</p><h2 id="友元"><a href="#友元" class="headerlink" title="友元"></a><strong>友元</strong></h2><p><code>友元分为：友元函数和友元类</code></p><h3 id="友元函数"><a href="#友元函数" class="headerlink" title="友元函数"></a><strong>友元函数</strong></h3><p>友元函数可以直接访问类的私有成员，它是定义在类外部的普通函数，不属于任何类，但需要在类的内部声 明，声明时需要加friend关键字。<br>说明:  </p><ol><li>友元函数可访问类的私有成员，但不是类的成员函数   </li><li>友元函数不能用const修饰   </li><li>友元函数可以在类定义的任何地方声明，不受类访问限定符限制   </li><li>一个函数可以是多个类的友元函数   </li><li>友元函数的调用与普通函数的调用和原理相同<h3 id="友元类"><a href="#友元类" class="headerlink" title="友元类"></a><strong>友元类</strong></h3>友元类的所有成员函数都可以是另一个类的友元函数，都可以访问另一个类中的非公有成员<br>友元的优缺点<br>优点：提高了程序运行效率<br>缺点：破坏了类的封装性和隐藏性<br>注意：<br>友元关系是单向的，不具有交换性。<br>友元关系不能传递 如果B是A的友元，C是B的友元，则不能说明C时A的友元。<h4 id="特殊友元类：内部类"><a href="#特殊友元类：内部类" class="headerlink" title="特殊友元类：内部类"></a><strong>特殊友元类：内部类</strong></h4>直接定义在其他类里面的类是该类的内部类  </li><li>内部类是外部类的友元类，反之不然.<br>2 .内部类可以直接访问外部类的静态成员，枚举成员并且不需要外部类的名字。  </li><li>sizeof(外部类) = 外部类大小，与内部类无关。<h2 id="类的静态成员"><a href="#类的静态成员" class="headerlink" title="类的静态成员"></a><strong>类的静态成员</strong></h2>声明为static的类成员称为类的静态成员，用static修饰的成员变量，称之为静态成员变量；<br>用static修饰的 成员函数，称之为静态成员函数。静态的成员变量一定要在类外进行初始化  </li><li>静态成员为所有类对象所共享，不属于某个具体的实例   </li><li>静态成员变量必须在类外定义，定义时不添加static关键字   </li><li>类静态成员即可用类名::静态成员或者对象.静态成员来访问   </li><li>静态成员函数没有隐藏的this指针，不能访问任何非静态成员   </li><li>静态成员和类的普通成员一样，也有public、protected、private3种访问级别，也可以具有返回值， const修饰符等参数</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;类和对象&quot;&gt;&lt;a href=&quot;#类和对象&quot; class=&quot;headerlink&quot; title=&quot;类和对象&quot;&gt;&lt;/a&gt;&lt;strong&gt;类和对象&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;学到C++，最基础也是最重要的自然就是类和对象了。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>简述Linux开发工具</title>
    <link href="http://yoursite.com/2018/09/20/"/>
    <id>http://yoursite.com/2018/09/20/</id>
    <published>2018-09-20T09:11:17.000Z</published>
    <updated>2018-09-21T04:14:11.301Z</updated>
    
    <content type="html"><![CDATA[<h4 id="linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。"><a href="#linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。" class="headerlink" title="linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。"></a>linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。</h4><a id="more"></a><h2 id="Vim的简单配置"><a href="#Vim的简单配置" class="headerlink" title="Vim的简单配置"></a>Vim的简单配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">set nocompatible &quot; 关闭 vi 兼容模式</span><br><span class="line">syntax on &quot; 自动语法高亮</span><br><span class="line">set number &quot; 显示行号</span><br><span class="line">set cursorline &quot; 突出显示当前行</span><br><span class="line">set ruler &quot; 打开状态栏标尺</span><br><span class="line">set shiftwidth=4 &quot; 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4</span><br><span class="line">set softtabstop=4 &quot; 使得按退格键时可以一次删掉 4 个空格</span><br><span class="line">set tabstop=4 &quot; 设定 tab 长度为 4</span><br><span class="line">set nobackup &quot; 覆盖文件时不备份</span><br><span class="line">set autochdir &quot; 自动切换当前目录为当前文件所在的目录</span><br><span class="line">filetype plugin indent on &quot; 开启插件</span><br><span class="line">set backupcopy=yes &quot; 设置备份时的行为为覆盖</span><br><span class="line">set ignorecase smartcase &quot; 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感</span><br><span class="line">set nowrapscan &quot; 禁止在搜索到文件两端时重新搜索</span><br><span class="line">set incsearch &quot; 输入搜索内容时就显示搜索结果</span><br><span class="line">set hlsearch &quot; 搜索时高亮显示被找到的文本</span><br><span class="line">set noerrorbells &quot; 关闭错误信息响铃</span><br><span class="line">set novisualbell &quot; 关闭使用可视响铃代替呼叫</span><br><span class="line">set t_vb= &quot; 置空错误铃声的终端代码</span><br><span class="line">set showmatch &quot; 插入括号时，短暂地跳转到匹配的对应括号</span><br><span class="line">set matchtime=2 &quot; 短暂跳转到匹配括号的时间</span><br><span class="line">set magic &quot; 设置魔术</span><br><span class="line">set hidden &quot; 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存</span><br><span class="line">set guioptions-=T &quot; 隐藏工具栏</span><br><span class="line">set guioptions-=m &quot; 隐藏菜单栏</span><br><span class="line">set smartindent &quot; 开启新行时使用智能自动缩进</span><br><span class="line">set backspace=indent,eol,start &quot; 不设定在插入状态无法用退格键和 Delete 键删除回车符</span><br><span class="line">set cmdheight=1 &quot; 设定命令行的行数为 1</span><br><span class="line">set laststatus=2 &quot; 显示状态栏 (默认值为 1, 无法显示状态栏)</span><br><span class="line">set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\ &quot; 设置在状态行显示的信息</span><br><span class="line">set foldenable &quot; 开始折叠</span><br><span class="line">set foldmethod=syntax &quot; 设置语法折叠</span><br><span class="line">set foldcolumn=0 &quot; 设置折叠区域的宽度0</span><br><span class="line">setlocal foldlevel=1 &quot; 设置折叠层数为1</span><br></pre></td></tr></table></figure><p>上面的配置让我写起C程序舒服了一些，当然还可以有更加强大的功能，不过这些要看你自己想要什么功能，去网上搜索一下就能轻松找到。  </p><h2 id="除了Vim还有哪些强大的编辑器"><a href="#除了Vim还有哪些强大的编辑器" class="headerlink" title="除了Vim还有哪些强大的编辑器"></a>除了Vim还有哪些强大的编辑器</h2><h3 id="Emacs"><a href="#Emacs" class="headerlink" title="Emacs"></a>Emacs</h3><p>Emacs，著名的集成开发环境和文本编辑器。Emacs被公认为是最受专业程序员喜爱的代码编辑器之一，另外一个vim。<br>EMACS，即Editor MACroS（编辑器宏）的缩写，最初由Richard Stallman(理查德·马修·斯托曼)于1975年在MIT协同Guy Steele共同完成。这一创意的灵感来源于TECMAC和TMACS，它们是由Guy Steele、Dave Moon、Richard Greenblatt、Charles Frankston等人编写的宏文本编辑器。<br>自诞生以来，Emacs演化出了众多分支，其中使用最广泛的两种是：1984年由Richard Stallman发起并由他维护至今的GNU Emacs，以及1991年发起的XEmacs。XEmacs是GNU Emacs的分支，至今仍保持着相当的兼容性。<br>Emac使用Emacs Lisp，这种有着极强扩展性的编程语言，从而实现了包括编程、编译乃至网络浏览等等功能的扩展。  </p><h3 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h3><p>Eclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。虽然大多数用户很乐于将 Eclipse 当作 Java 集成开发环境（IDE）来使用，但 Eclipse 的目标却不仅限于此。Eclipse 还包括插件开发环境（Plug-in Development Environment，PDE），这个组件主要针对希望扩展 Eclipse 的软件开发人员，因为它允许他们构建与 Eclipse 环境无缝集成的工具。由于 Eclipse 中的每样东西都是插件，对于给 Eclipse 提供插件，以及给用户提供一致和统一的集成开发环境而言，所有工具开发人员都具有同等的发挥场所。<br>这种平等和一致性并不仅限于 Java 开发工具。尽管 Eclipse 是使用Java语言开发的，但它的用途并不限于 Java 语言；例如，支持诸如C/C++、COBOL、PHP、Android等编程语言的插件已经可用，或预计将会推出。Eclipse 框架还可用来作为与软件开发无关的其他应用程序类型的基础，比如内容管理系统。<br>基于 Eclipse 的应用程序的一个突出例子是 IBM Rational Software Architect，它构成了 IBM Java 开发工具系列的基础。  </p><h3 id="Brackets"><a href="#Brackets" class="headerlink" title="Brackets"></a>Brackets</h3><p>Brackets也是一款为Linux开发者设计的开源代码编辑器，使用Brackets写代码，你不会被任何事情所打断。比如在写HTML代码时，即便你没有保存代码也可以及时预览你的Web页面效果。你也可以使用Theseus来检查变量，Brackets默认提供一种主题，当然你也可以在扩展中心获取更多的主题。  </p><h3 id="Lighttable"><a href="#Lighttable" class="headerlink" title="Lighttable"></a>Lighttable</h3><p>LightTable是一个应用ClojureScript写的可扩展的集成编辑环境（IDE）。由ChrisGranger和RobertAttorri开发。具有实时运行反馈，调试和搜索文档的功能。及时反馈功能提供了一个不同寻常的运行环境来让程序员构建抽象。<br>　　开发团队试图创造一个能够让程序员及时获知程序运行状态的软件。该软件一开始只支持Clojure语言，但是现在通过众多扩展，也能够支持Python和JavaScript语言。  </p><h3 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h3><p>Sublime Text 是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。<br>Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。  </p><ul><li>注*：以上内容来自网络搜索。</li></ul><h2 id="除了gcc-还有哪些常用的编译器"><a href="#除了gcc-还有哪些常用的编译器" class="headerlink" title="除了gcc, 还有哪些常用的编译器"></a>除了gcc, 还有哪些常用的编译器</h2><p>EGCS(Experimental/Enhanced GNU Compiler System) 一个编译系统，包括了C/C++/Obj-C/Fortran等编译器<br>eclipse 也同样支持很多语言的开发，最厉害的当然还是对Java的开发。</p><h2 id="为什么调试的时候需要编译选项中添加-g"><a href="#为什么调试的时候需要编译选项中添加-g" class="headerlink" title="为什么调试的时候需要编译选项中添加 -g."></a>为什么调试的时候需要编译选项中添加 -g.</h2><p>调试的时候需要编译选项中添加 -g. 加选项-g是为了能够调试。不加可以运行，但不能调试</p><p>readelf用来显示一个或者多个elf格式的目标文件的信息，可以通过它的选项来控制显示哪些信息。这里的elf-file(s)就表示那些被检查的文件。可以支持32位，64位的elf格式文件，也支持包含elf文件的文档（这里一般指的是使用ar命令将一些elf文件打包之后生成的例如lib*.a之类的“静态库”文件）。</p><p>这个程序和objdump提供的功能类似，但是它显示的信息更为具体，并且它不依赖BFD库(BFD库是一个GNU项目，它的目标就是希望通过一种统一的接口来处理不同的目标文件)，所以即使BFD库有什么bug存在的话也不会影响到readelf程序。</p><p>运行readelf的时候，除了-v和-H之外，其它的选项必须有一个被指定。</p><p>ELF文件类型：</p><p>a)可重定位文件:用户和其他目标文件一起创建可执行文件或者共享目标文件,例如lib*.a文件。</p><p>b)可执行文件：用于生成进程映像，载入内存执行,例如编译好的可执行文件a.out。</p><p>c)共享目标文件：用于和其他共享目标文件或者可重定位文件一起生成elf目标文件或者和执行文件一起创建进程映像，例如lib*.so文件。</p><h2 id="在Linux下完成一个彩色的进度条"><a href="#在Linux下完成一个彩色的进度条" class="headerlink" title="在Linux下完成一个彩色的进度条."></a>在Linux下完成一个彩色的进度条.</h2><p>首先我们编写Makefile：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bar:bar.c</span><br><span class="line">    gcc bar.c -o bar</span><br><span class="line">.PHONY:clean</span><br><span class="line">clean:</span><br><span class="line">    rm bar</span><br></pre></td></tr></table></figure></p><p>写好之后我们就要开始编写进度条程序bar.c了，但是在开始之前，我们需要了解一下怎么在Linux里打印出彩色字体<br>格式如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\<span class="number">033</span>[显示方式;前景色;背景色m</span><br><span class="line">\<span class="number">033</span>[<span class="number">0</span>m 默认</span><br><span class="line">\<span class="number">033</span>[<span class="number">1</span>;<span class="number">32</span>;<span class="number">40</span>m 绿色</span><br><span class="line">\<span class="number">033</span>[<span class="number">1</span>;<span class="number">31</span>;<span class="number">40</span>m 红色</span><br></pre></td></tr></table></figure><p>显示方式：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>（默认值）、<span class="number">1</span>（高亮）、<span class="number">22</span>（非粗体）、<span class="number">4</span>（下划线）、<span class="number">24</span>（非下划线）、<span class="number">5</span>（闪烁）、<span class="number">25</span>（非闪烁）、<span class="number">7</span>（反显）、<span class="number">27</span>（非反显）</span><br></pre></td></tr></table></figure></p><p>前景色:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">30</span>（黑色）、<span class="number">31</span>（红色）、<span class="number">32</span>（绿色）、 <span class="number">33</span>（黄色）、<span class="number">34</span>（蓝色）、<span class="number">35</span>（洋红）、<span class="number">36</span>（青色）、<span class="number">37</span>（白色）</span><br></pre></td></tr></table></figure></p><p>背景色:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">40</span>（黑色）、<span class="number">41</span>（红色）、<span class="number">42</span>（绿色）、 <span class="number">43</span>（黄色）、<span class="number">44</span>（蓝色）、<span class="number">45</span>（洋红）、<span class="number">46</span>（青色）、<span class="number">47</span>（白色）</span><br></pre></td></tr></table></figure></p><p>示例代码：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>( <span class="string">"\033[1;31;40m 红色 \033[0m"</span> );<span class="comment">//后面带上\033[0m恢复默认不然之后的所有字符都会变红色</span></span><br></pre></td></tr></table></figure></p><p>在了解了怎么弄好颜色之后写出彩色进度条就简单多了：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>*label = <span class="string">"-\\/|"</span>;<span class="comment">//模拟转圈</span></span><br><span class="line">    <span class="keyword">size_t</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= <span class="number">50</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">      buf[i] = <span class="string">'*'</span>;</span><br><span class="line">      <span class="keyword">if</span> (i &lt;= <span class="number">20</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\e[32m[%lu%%]\e[0m\e[33m[%c]\e[0m\e[34m[%-50s]\e[0m\r"</span>, i * <span class="number">2</span>, label[i % <span class="number">4</span>], buf);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\e[32m[%lu%%]\e[0m\e[33m[%c]\e[0m\e[35m[%-50s]\e[0m\r"</span>, i * <span class="number">2</span>, label[i % <span class="number">4</span>], buf);</span><br><span class="line">     fflush(<span class="built_in">stdout</span>);</span><br><span class="line">     usleep(<span class="number">100000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是这个的彩色看起来还是太单调了，我们不禁想到Linux开机时的那个彩色渐变的进度条，这个能不能简单实现呢？答案是可以：<br>bar.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Black 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> White 47</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Blue 44</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Green 42</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printbp</span><span class="params">(<span class="keyword">int</span> color,<span class="keyword">size_t</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> p[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">sprintf</span>(p,<span class="string">"\e[0;30;%dm \e[0m"</span>,color);</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line"><span class="built_in">printf</span>(p);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>*label = <span class="string">"-\\|/"</span>;</span><br><span class="line"><span class="keyword">size_t</span> i = <span class="number">1</span>,j = <span class="number">0</span>,k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; i &lt;= <span class="number">100</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> G,B,W;</span><br><span class="line">G = i*i/<span class="number">100</span>;</span><br><span class="line">B = i-G;</span><br><span class="line">W = <span class="number">10</span>*<span class="built_in">sqrt</span>(i)-B-G;</span><br><span class="line">printbp(Green,G);</span><br><span class="line">printbp(Blue,B);</span><br><span class="line">printbp(White,W);</span><br><span class="line">printbp(Black,<span class="number">100</span>-G-B-W);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"[%d%%][%c]\r"</span>,i,label[i%<span class="number">4</span>]);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line">usleep(<span class="number">100000</span>);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是注意这个彩色的进度条对应的Makefile有些差异，主要是因为sqrt函数的特殊性，所以这个Makefile我们这样写：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bar:bar.c</span><br><span class="line">    gcc -o bar bar.c -lm</span><br><span class="line">.PHONY:clean</span><br><span class="line">clean:</span><br><span class="line">    rm bar</span><br></pre></td></tr></table></figure></p><ul><li>-lm是为了表示使用了Math库的函数<h2 id="rpm安装和yum安装的区别"><a href="#rpm安装和yum安装的区别" class="headerlink" title="rpm安装和yum安装的区别."></a>rpm安装和yum安装的区别.</h2></li></ul><p>rpm安装和yum安装的区别</p><ul><li>安装包都是以rpm结尾的。   </li><li>yum是从网络安装源（例如网易镜像，可以自己配置）上下载rpm，如果存在依赖关系会把依赖的rpm同时下载安装。   </li><li>rpm是安装本地存在的rpm包，如果存在依赖也需要安装上,如果某个rpm是自己修改编译的，那么只能用rpm安装了</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。&quot;&gt;&lt;a href=&quot;#linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。&quot; class=&quot;headerlink&quot; title=&quot;linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。&quot;&gt;&lt;/a&gt;linux中vim是一款强大的编辑器，我最近从网上看到了不少如何把它变成一个更加强大的编辑器的文章，所以我也试着配置一下。&lt;/h4&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>数组里的重复数字</title>
    <link href="http://yoursite.com/2018/09/01/"/>
    <id>http://yoursite.com/2018/09/01/</id>
    <published>2018-09-01T11:33:27.000Z</published>
    <updated>2018-09-01T13:45:09.512Z</updated>
    
    <content type="html"><![CDATA[<h4 id="我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法"><a href="#我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法" class="headerlink" title="我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法"></a>我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法</h4><a id="more"></a><h1 id="求数组中只出现一次的元素"><a href="#求数组中只出现一次的元素" class="headerlink" title="求数组中只出现一次的元素"></a>求数组中只出现一次的元素</h1><ul><li>1.一个数组中有一个数字只出现了一次，其余数字都出现了两次，找出这个数字<br>这道题没有学过异或相关知识的话，大概第一反应就是用暴力法(把每个数字都与后面的数字相比较)<br>毫无疑问这个方法非常直观，但是缺点也很明显：时间复杂度：O(N*N) 这不是一个让人满意的复杂度。<br>如果你了解异或的知识的话就不难发现以下两点事实：<br>对任意一个整数N，都有:N^N = 0；N^0 = N。其中^是异或运算符，了解了这么两点,事情就会变得简单：把数组里的所有元素都异或一遍，最后得出的结果刚好就是那个只出现一次的数字。  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int FindTheOne(int *a,int lenth)//a是数组，len为数组长度</span><br><span class="line">&#123;</span><br><span class="line">    int ret = 0;</span><br><span class="line">    int i = 0;</span><br><span class="line">    for(i = 0;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      ret^=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    return ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>2.一个数组中只有两个数字出现一次，其他所有数字都出现了两次，找出这两个数字<br>了解了上面的异或知识后，我们知道再像第一题那样操作的话，最得出的结果是这两个只出现一次的数字的异或值。<br>假设这两个数为a和b，最后的结果就是a^b，而且我们知道这个值绝对不为零（为什么？）<br>对于a^b，从低位到高位开始，找到第一个bit位为1的位置设定为第m位，这个第m位的1肯定来自a或者来自b，不可能同时a,b的第m位（从低到高位）都为1。这样，就可以根据这个第m位就可以把数组分为两个部分，一组为第m位为0，一组为第m位为1.这样，就把问题分解成了求两个数组中只出现一次的数字了。     </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">int GetOnePos(int num) //从低位开始找到第一个位1的bit位</span><br><span class="line">&#123;  </span><br><span class="line">    int index=1;  </span><br><span class="line">    int i=0;  </span><br><span class="line">    while(i&lt;32)  </span><br><span class="line">    &#123;  </span><br><span class="line">        if((num&amp;(1&lt;&lt;i))==(1&lt;&lt;i))  </span><br><span class="line">            break;  </span><br><span class="line">        else  </span><br><span class="line">        &#123;  </span><br><span class="line">            index++;  </span><br><span class="line">            i++;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    return index;  </span><br><span class="line">&#125;  </span><br><span class="line">int IsBitOne(int num,int index) //判断给定位置的bit位是否为1</span><br><span class="line">&#123;  </span><br><span class="line">    num=(num&gt;&gt;index);  </span><br><span class="line">    return num&amp;1;  </span><br><span class="line">&#125;  </span><br><span class="line">void FindTheTwo(int *a,int len,int *num1,int *num2)</span><br><span class="line">&#123;//没法返回两个数，所以传地址进来直接赋值</span><br><span class="line">    int result=0;</span><br><span class="line">    assert(a&amp;&amp;num1&amp;&amp;num2);</span><br><span class="line">    *num1=0;</span><br><span class="line">    *num2=0;</span><br><span class="line">    for(int i=0;i&lt;len;i++)</span><br><span class="line">        result^=a[i];</span><br><span class="line">    int index=GetOnePos(result);</span><br><span class="line">    for(i=0;i&lt;len;i++)</span><br><span class="line">        if(IsBitOne(a[i],index))</span><br><span class="line">            (*num1)^=a[i];</span><br><span class="line">    for(i=0;i&lt;len;i++)</span><br><span class="line">        if(!IsBitOne(a[i],index))</span><br><span class="line">            (*num2)^=a[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>3.一个数组中只有三个数字出现一次，其他所有数字都出现了两次，找出这三个数字<br>额  看到这个问题我不知该说什么，因为这已经有点刁难人的意味在里面了，<br>但是我们还是按部就班的来，首先还是全部异或一遍，最后得到的结果是a^b^c,我们令x = a^b^c 不难知道x与a,b,c任何一个都不相等（为什么？）<br>证明：x^a,x^b,x^c中只有一个第m-bit位为1.<br>假设他们的第m位都为1，那么x的第m位为0，但是x=a^b^c其第m位肯定为1，所以假设不成立。<br>那么相反，假设x的第m位为1，a,b,c的第m位都为0，也不成立，因为x=a^b^c。<br>所以根据上面的反证法我们知道了x^a,x^b,x^c中只有一个第m位为1。那么这个问题就好办了。根据这个第m位找到第一个只出现一次的数字。然后剩下两个就是问题2所描述的问题。  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">int GetFirstBit(int num)  </span><br><span class="line">&#123;  </span><br><span class="line">    return num&amp;~(num-1);  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">void FindTheThree(int *a,int len,int *num1,int *num2,int *num3)  </span><br><span class="line">&#123;  </span><br><span class="line">    int result_code=0;  </span><br><span class="line">    assert(a&amp;&amp;num1&amp;&amp;num2&amp;&amp;num3);</span><br><span class="line">    for(int i=0;i&lt;n;i++)  </span><br><span class="line">        result_code^=a[i];  </span><br><span class="line">    int flag=0;  </span><br><span class="line">    for(i=0;i&lt;len;i++)  </span><br><span class="line">        flag^=GetFirstBit(result_code^a[i]);  </span><br><span class="line">    flag=GetFirstBit(flag);  </span><br><span class="line">    *num1=0;  </span><br><span class="line">    for(i=0;i&lt;len;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        if(GetFirstBit(result_code^a[i])==flag)  </span><br><span class="line">        &#123;  </span><br><span class="line">            (*num1)^=a[i];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    for(i=0;i&lt;len;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        if(a[i]==(*num1))  </span><br><span class="line">        &#123;  </span><br><span class="line">            int temp=a[i];  </span><br><span class="line">            a[i]=a[len-1];  </span><br><span class="line">            a[len-1]=temp;  </span><br><span class="line">            break;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    FindTheTwo(a,len-1,num2,num3);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="求数组主元素"><a href="#求数组主元素" class="headerlink" title="求数组主元素"></a>求数组主元素</h1><p>什么是主元素呢，就是指数组中出现次数超过数组长度一半的元素，这个问题之前我专门讨论过：<br>传送门：<a href="http://lrsand52m.top/2018/05/21/#more" target="_blank" rel="noopener">http://lrsand52m.top/2018/05/21/#more</a>  </p><h1 id="求数组里的重复数字"><a href="#求数组里的重复数字" class="headerlink" title="求数组里的重复数字"></a>求数组里的重复数字</h1><ul><li>1.求一个字符数组中的第一个重复的字符<br>最直接方法：暴力…不用多想，妥妥的O(N*N)<br>那么有木有O（N）的解法呢，当然有啦~（没有我就不写这个问题了 哈哈）<br>首先我们知道字符型只占据8个比特位一个字节，最多能表示256种可能，所以我们利用哈希方法，建立一个表，存储对应字符的出现次数（遍历了一遍），再从头开始检索每个字符的次数（又遍历了一遍），第一个次数大于一的就是我们要找的啦（真简单）这个算法使用了常数级别的额外空间让算法实现了O(N)的时间复杂度，可以说相当强大了（有没有感觉这种方法与桶排序有异曲同工之妙？）。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">char FindFirstDup(char *a,int len)</span><br><span class="line">&#123;</span><br><span class="line">    int index[256] = &#123;0&#125;;</span><br><span class="line">    int i = 0;</span><br><span class="line">    assert(a);</span><br><span class="line">    for(i = 0;i&lt;len;i++)</span><br><span class="line">        index[a[i]+128]++;</span><br><span class="line">    for(i = 0;i&lt;len;i++)</span><br><span class="line">        if(index[a[i]+128]&gt;1)</span><br><span class="line">            return a[i];</span><br><span class="line">    perror(&quot;Dup not found&quot;);</span><br><span class="line">    return a[0];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>2.一个长度为N的数组，里面存有0 ~ N-2这些值，很明显，数组里必定存在重复元素，现在可以向你保证只有一个重复的元素，但是我们不保证其只出现两次，它可能出现很多次。例如int a[5] = {1,2,2,2,3};请找出这个重复的数字。<br>最直接方法：暴力…不用多想，妥妥的O(N*N)  (嗯 暴力还是能解决相当多的问题的- -！)<br>我觉得大家第一反应应该是想到了上面的哈希方法，建立一个长度N的哈希表，然后再…就解决了，这个方法时间复杂度O(N),空间复杂度O(N)，因为这里我们使用额外空间的长度不再是常数了。<br>那么···有木有空间复杂度O(LogN)或者O(1)的算法呢？<br>答案是有的，但是首先我们要了解一下抽屉原理：<br>有N本书要放进N-1个抽屉里，那么无论你怎么放，你都会发现至少有一个抽屉里装了不只一本书。这个原理非常简单，简单到什么程度呢？额   就是我这么一说你就明白的程度，够简单吧？<br>然而就是这么简单的抽屉原理，这个题目都给我们出了简化版：题目相当于告诉我们只有一个抽屉里放了多本书，而其他抽屉要么只有一本，要么没放书。<br>如果现实中有人扔给了你这样一个问题你会怎么做呢？<br>很简单，你只需要打开每个抽屉，查看里面有几本书就行了。<br>但是在这里书和抽屉并不是对应着放的，我们又该怎么办呢？<br>额  那么把书放进对应的抽屉不就好了吗？ 围观群众说道；<br>是的，就是这么简单！<br>我们对数组中的数字进行遍历并且这样操作：<br>1.数字等于下标值，代表书的位置正确，我们查看下一个；<br>2.数字不等于下标值，代表书的位置不对，我们需要调整：查看对应下标值位置上的数字，如果也对不上，那么交换。如果人家的位置是正确的…那么这个值显然就是你要找的重复值了！</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int FindDupNum(int *a,int len)</span><br><span class="line">&#123;</span><br><span class="line">    int i = 0;</span><br><span class="line">    for(i = 0;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[i] != i)</span><br><span class="line">        &#123;</span><br><span class="line">          if(a[a[i]] == a[i])</span><br><span class="line">              return a[i];</span><br><span class="line">          else</span><br><span class="line">          &#123;</span><br><span class="line">              int t = a[i];</span><br><span class="line">              a[i] = a[a[i]];</span><br><span class="line">              a[t] = t;</span><br><span class="line">              i--;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    perror(&quot;The Dup Not found&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样每一次交换都会使一个抽屉里装的书是对的，那么我们最多遍历一遍就可以找到这个重复的数字了，并且我们实现了空间复杂度O(1),时间复杂度O(N)。<br>由于我打字打的手有点累，这次就先写到这里吧，我说的并不是很系统请见谅~~</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法&quot;&gt;&lt;a href=&quot;#我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法&quot; class=&quot;headerlink&quot; title=&quot;我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法&quot;&gt;&lt;/a&gt;我总结了一下我目前遇到过的数组里有重复数字的各种问题以及对应的求法&lt;/h4&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>用两个栈实现队列</title>
    <link href="http://yoursite.com/2018/08/14/"/>
    <id>http://yoursite.com/2018/08/14/</id>
    <published>2018-08-14T02:19:15.000Z</published>
    <updated>2018-08-14T02:34:37.073Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能"><a href="#实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能" class="headerlink" title="实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能"></a>实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能</h4><a id="more"></a><p>用两个栈实现队列说起来也不是很困难，我们根据栈的特性：后进先出，也就是先进后出，相当于把数据倒过来了，这样我们用两个栈颠倒了两次，也就是实现了队列的功能：先进先出。<br>对这个用两个栈S1和S2形成的队列进行操作时，我们该怎么样操作呢？<br>数据入队列：数据录入相当简单，直接把数据录入栈S1即可。<br>数据出队列：数据出队相对麻烦，我们把栈S1的数据依次录入栈S2,弹出栈S1，这样S2的内容就符合出队要求了。<br>只需要对S2进行出栈操作就行。<br>思路：入栈进S1，出栈由S2完成，如果S2无数据，把S1的数据压入S2。<br>工具：VS2013<br>语言：C<br>代码如下：<br>头文件QueueByTwoStack.h<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#pragma once</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;malloc.h&gt;</span><br><span class="line">#include &lt;assert.h&gt;</span><br><span class="line"></span><br><span class="line">typedef int DataType;</span><br><span class="line"></span><br><span class="line">typedef struct Stack</span><br><span class="line">&#123;</span><br><span class="line">DataType* data;</span><br><span class="line">int top;// 栈顶</span><br><span class="line">int capacity;  // 容量</span><br><span class="line">&#125;Stack;</span><br><span class="line"></span><br><span class="line">// 两个栈实现一个队列</span><br><span class="line">typedef struct QueueByTwoStack</span><br><span class="line">&#123;</span><br><span class="line">Stack s1;</span><br><span class="line">Stack s2;</span><br><span class="line">&#125;QueueByTwoStack;</span><br><span class="line"></span><br><span class="line">void QueueInit(QueueByTwoStack* pq);</span><br><span class="line">void QueueDestory(QueueByTwoStack* pq);</span><br><span class="line">void QueuePush(QueueByTwoStack* pq, DataType x);</span><br><span class="line">void QueuePop(QueueByTwoStack* pq);</span><br><span class="line">DataType QueueFront(QueueByTwoStack* pq);</span><br><span class="line">int QueueEmpty(QueueByTwoStack* pq);</span><br><span class="line">int QueueSize(QueueByTwoStack* pq);</span><br><span class="line">void TestQueue();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void StackInit(Stack* ps);</span><br><span class="line">void StackDestory(Stack* ps);</span><br><span class="line"></span><br><span class="line">void StackPush(Stack* ps, DataType x);</span><br><span class="line">void StackPop(Stack* ps);</span><br><span class="line">DataType StackTop(Stack* ps);</span><br><span class="line">int StackEmpty(Stack* ps);</span><br><span class="line">int StackSize(Stack* ps);</span><br></pre></td></tr></table></figure></p><p>源文件Stack.c<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;QueueByTwoStack.h&quot;</span><br><span class="line">void StackInit(Stack* ps)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps);</span><br><span class="line">ps-&gt;data = (DataType*)malloc(sizeof(Stack)* 3);</span><br><span class="line">ps-&gt;capacity = 3;</span><br><span class="line">ps-&gt;top = 0;</span><br><span class="line">&#125;</span><br><span class="line">void StackDestory(Stack* ps)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps);</span><br><span class="line">if (ps-&gt;data)</span><br><span class="line">free(ps-&gt;data);</span><br><span class="line">ps-&gt;capacity = 0;</span><br><span class="line">ps-&gt;top = 0;</span><br><span class="line">&#125;</span><br><span class="line">void StackPush(Stack* ps, DataType x)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps);</span><br><span class="line">if (ps-&gt;top == ps-&gt;capacity)</span><br><span class="line">&#123;</span><br><span class="line">ps-&gt;data = (DataType*)realloc(ps-&gt;data, sizeof(Stack)*(ps-&gt;capacity * 2));</span><br><span class="line">if (ps-&gt;data)</span><br><span class="line">ps-&gt;capacity *= 2;</span><br><span class="line">else perror(&quot;capacity realloc&quot;);</span><br><span class="line">&#125;</span><br><span class="line">*(ps-&gt;data + ps-&gt;top++) = x;</span><br><span class="line">&#125;</span><br><span class="line">void StackPop(Stack* ps)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps&amp;&amp;ps-&gt;data);</span><br><span class="line">if (ps-&gt;top)</span><br><span class="line">ps-&gt;top--;</span><br><span class="line">&#125;</span><br><span class="line">DataType StackTop(Stack* ps)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps&amp;&amp;ps-&gt;data&amp;&amp;ps-&gt;top);</span><br><span class="line">return *(ps-&gt;data + ps-&gt;top - 1);</span><br><span class="line">&#125;</span><br><span class="line">int StackEmpty(Stack* ps)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps);</span><br><span class="line">return ps-&gt;top != 0;</span><br><span class="line">&#125;</span><br><span class="line">int StackSize(Stack* ps)</span><br><span class="line">&#123;</span><br><span class="line">assert(ps&amp;&amp;ps-&gt;data);</span><br><span class="line">return ps-&gt;top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>QueueByTwoStack.c<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include&quot;QueueByTwoStack.h&quot;</span><br><span class="line">void QueueInit(QueueByTwoStack* pq)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">StackInit(&amp;pq-&gt;s1);</span><br><span class="line">StackInit(&amp;pq-&gt;s2);</span><br><span class="line">&#125;</span><br><span class="line">void QueueDestory(QueueByTwoStack* pq)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">StackDestory(&amp;pq-&gt;s1);</span><br><span class="line">StackDestory(&amp;pq-&gt;s2);</span><br><span class="line">&#125;</span><br><span class="line">void QueuePush(QueueByTwoStack* pq, DataType x)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">StackPush(&amp;pq-&gt;s1, x);</span><br><span class="line">&#125;</span><br><span class="line">void QueuePop(QueueByTwoStack* pq)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">if (StackEmpty(&amp;pq-&gt;s2))</span><br><span class="line">StackPop((&amp;pq-&gt;s2));</span><br><span class="line">else if (StackEmpty(&amp;pq-&gt;s1))</span><br><span class="line">&#123;</span><br><span class="line">while (StackEmpty(&amp;pq-&gt;s1))</span><br><span class="line">&#123;</span><br><span class="line">StackPush(&amp;pq-&gt;s2, StackTop(&amp;pq-&gt;s1));</span><br><span class="line">StackPop(&amp;pq-&gt;s1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">DataType QueueFront(QueueByTwoStack* pq)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">if (StackEmpty(&amp;pq-&gt;s2) == 0)</span><br><span class="line">&#123;</span><br><span class="line">while (StackEmpty(&amp;pq-&gt;s1))</span><br><span class="line">&#123;</span><br><span class="line">StackPush(&amp;pq-&gt;s2, StackTop(&amp;pq-&gt;s1));</span><br><span class="line">StackPop(&amp;pq-&gt;s1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return StackTop(&amp;pq-&gt;s2);</span><br><span class="line">&#125;</span><br><span class="line">int QueueEmpty(QueueByTwoStack* pq)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">return StackEmpty(&amp;pq-&gt;s1) || StackEmpty(&amp;pq-&gt;s1);</span><br><span class="line">&#125;</span><br><span class="line">int QueueSize(QueueByTwoStack* pq)</span><br><span class="line">&#123;</span><br><span class="line">assert(pq);</span><br><span class="line">return StackSize(&amp;pq-&gt;s1) + StackSize(&amp;pq-&gt;s2);</span><br><span class="line">&#125;</span><br><span class="line">void TestQueue()</span><br><span class="line">&#123;</span><br><span class="line">QueueByTwoStack q;</span><br><span class="line">int i;</span><br><span class="line">QueueInit(&amp;q);</span><br><span class="line">QueuePush(&amp;q, 1);</span><br><span class="line">QueuePush(&amp;q, 2);</span><br><span class="line">QueuePush(&amp;q, 3);</span><br><span class="line">QueuePush(&amp;q, 4);</span><br><span class="line">QueuePush(&amp;q, 5);</span><br><span class="line">QueuePush(&amp;q, 6);</span><br><span class="line">printf(&quot;Size:%d\n&quot;, QueueSize(&amp;q));</span><br><span class="line">printf(&quot;empty:%d\n&quot;, QueueEmpty(&amp;q));</span><br><span class="line">for (i = 0; i &lt; 6; i++)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%d &quot;, QueueFront(&amp;q));</span><br><span class="line">QueuePop(&amp;q);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\nSize:%d&quot;, QueueSize(&amp;q));</span><br><span class="line">printf(&quot;\nempty:%d&quot;, QueueEmpty(&amp;q));</span><br><span class="line">QueueDestory(&amp;q);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Test.c<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include&quot;QueueByTwoStack.h&quot;</span><br><span class="line">#include&lt;windows.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">TestQueue();</span><br><span class="line">system(&quot;pause&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能&quot;&gt;&lt;a href=&quot;#实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能&quot; class=&quot;headerlink&quot; title=&quot;实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能&quot;&gt;&lt;/a&gt;实现了简单的栈和队列之后，我们可以考虑玩点花样：怎么用两个栈实现一个队列的功能&lt;/h4&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>30行代码写出贪吃蛇</title>
    <link href="http://yoursite.com/2018/07/03/"/>
    <id>http://yoursite.com/2018/07/03/</id>
    <published>2018-07-03T10:44:58.000Z</published>
    <updated>2018-07-03T11:24:00.570Z</updated>
    
    <content type="html"><![CDATA[<h3 id="之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4-1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。"><a href="#之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4-1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。" class="headerlink" title="之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4.1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。"></a>之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4.1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。</h3><a id="more"></a><p>预览：<img src="/img/TCS.png" alt=""><br><img src="/img/TCS2.png" alt=""><br>工具：VS2013(由于有些函数移植性较差，不保证其他编译器能够运行)<br>语言：C<br>源代码：<br>TCS.c<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">S</span>&#123;</span> <span class="keyword">int</span> x, y; <span class="class"><span class="keyword">struct</span> <span class="title">S</span>  <span class="title">n</span>, *<span class="title">l</span>;</span> &#125;*h, *e;</span><br><span class="line"><span class="keyword">int</span> _v[<span class="number">40</span>][<span class="number">25</span>] = &#123; &#123; <span class="number">1</span> &#125; &#125;, d[] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;, o = <span class="number">0</span>, g, l = <span class="number">1</span>, L = <span class="number">3</span>, x = <span class="number">1</span>, r; HANDLE u;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> v(_w) (_v[((struct S*)_w)-&gt;x][((struct S*)_w)-&gt;y])</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> p(_w,_x,_y,_z) WriteConsoleOutputCharacter(u,_z,2,(COORD)&#123;(_x==-1?((struct S*)_w)-&gt;x:_x)*2,_y==-1?((struct S*)_w)-&gt;y:_y&#125;,(LPDWORD)&amp;r)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (i = k % <span class="number">40</span>, j = k % <span class="number">25</span>, k = <span class="number">1200</span>; ((i &gt;= <span class="number">40</span> ? i = <span class="number">0</span>, j &gt;= <span class="number">25</span> ? j = <span class="number">0</span> : j++ : <span class="number">1</span>), _v[i][j]) &amp;&amp; k; i++, k--);</span><br><span class="line"><span class="keyword">return</span> k ? p(<span class="number">0</span>, i, j, <span class="string">"★"</span>), _v[i][j] = <span class="number">1</span> : (o = <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">m</span><span class="params">(<span class="keyword">int</span> dir)</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">S</span> *<span class="title">k</span> = (<span class="title">struct</span> <span class="title">S</span>*)<span class="title">malloc</span>(<span class="title">sizeof</span>(<span class="title">struct</span> <span class="title">S</span>));</span></span><br><span class="line">k-&gt;x = h-&gt;x + d[dir], k-&gt;y = h-&gt;y + d[(dir + <span class="number">3</span>) % <span class="number">4</span>], k-&gt;n = h, h-&gt;l = k, h = k, v(e) = <span class="number">0</span>, p(e, <span class="number">-1</span>, <span class="number">-1</span>, <span class="string">"  "</span>);</span><br><span class="line"><span class="keyword">if</span> (k-&gt;x&lt;<span class="number">0</span> || k-&gt;x&gt;<span class="number">39</span> || k-&gt;y&lt;<span class="number">0</span> || k-&gt;y&gt;<span class="number">24</span> || v(h) == <span class="number">2</span>)<span class="keyword">return</span> p(e, <span class="number">-1</span>, <span class="number">-1</span>, <span class="string">"□"</span>), o = <span class="number">2</span>, <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> ((p(h, <span class="number">-1</span>, <span class="number">-1</span>, <span class="string">"■"</span>), p(h-&gt;n, <span class="number">-1</span>, <span class="number">-1</span>, <span class="string">"□"</span>), v(h) == <span class="number">1</span>) &amp;&amp; f(<span class="number">0</span>, <span class="number">0</span>, rand() % <span class="number">10000</span>) || x)<span class="keyword">return</span> v(h) = v(e) = <span class="number">2</span>, p(e, <span class="number">-1</span>, <span class="number">-1</span>, <span class="string">"□"</span>), <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> v(h) = <span class="number">2</span>, <span class="built_in">free</span>((e = e-&gt;l)-&gt;n), (<span class="keyword">int</span>)(e-&gt;n = <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">system(<span class="string">"color 3e"</span>), SetConsoleScreenBufferSize(u = GetStdHandle(STD_OUTPUT_HANDLE), (COORD)&#123; <span class="number">80</span>, <span class="number">25</span> &#125;), SetConsoleCursorInfo(u, &amp;(CONSOLE_CURSOR_INFO)&#123;<span class="number">30</span>, <span class="number">0</span>&#125;);</span><br><span class="line">system(<span class="string">"mode con cols=80 lines=25"</span>),h = (struct S*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct S)), h-&gt;x = h-&gt;y = <span class="number">0</span>, h-&gt;n = <span class="number">0</span>, e = h, srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>)), m(<span class="number">1</span>), m(<span class="number">1</span>), f(<span class="number">0</span>, <span class="number">0</span>, rand() % <span class="number">10000</span>);</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; !o; Sleep(<span class="number">100</span>))<span class="keyword">switch</span> (_kbhit() ? (g = _getch()) == <span class="number">224</span> ? _getch() : g : <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">119</span>:<span class="keyword">case</span> <span class="number">87</span>:<span class="keyword">case</span> <span class="number">72</span>:L += m(l != <span class="number">2</span> ? l = <span class="number">0</span> : l); <span class="keyword">break</span>; <span class="keyword">case</span> <span class="number">100</span>:<span class="keyword">case</span> <span class="number">68</span>:<span class="keyword">case</span> <span class="number">77</span>:L += m(l != <span class="number">3</span> ? l = <span class="number">1</span> : l); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">115</span>:<span class="keyword">case</span> <span class="number">83</span>:<span class="keyword">case</span> <span class="number">80</span>:L += m(l != <span class="number">0</span> ? l = <span class="number">2</span> : l); <span class="keyword">break</span>; <span class="keyword">case</span>  <span class="number">97</span>:<span class="keyword">case</span> <span class="number">65</span>:<span class="keyword">case</span> <span class="number">75</span>:L += m(l != <span class="number">1</span> ? l = <span class="number">3</span> : l); <span class="keyword">break</span>; <span class="keyword">default</span>:L += m(l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="keyword">char</span>*)_v, <span class="string">"%s，总长 %d 个单位"</span>, o - <span class="number">1</span> ? <span class="string">"你输了"</span> : <span class="string">"你赢了"</span>, L), MessageBox(<span class="literal">NULL</span>, TEXT((<span class="keyword">char</span>*)_v), <span class="string">"游戏结束"</span>, <span class="number">0x1040</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4-1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。&quot;&gt;&lt;a href=&quot;#之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4-1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。&quot; class=&quot;headerlink&quot; title=&quot;之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4.1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。&quot;&gt;&lt;/a&gt;之前写过一个变色贪吃蛇，虽说功能多得很（都已经更新至4.1版本了），但是我后来经过学习意识到这样的一个贪吃蛇实际上并不需要几千行代码，奈何我很懒，懒得在原先的基础上大动刀子。所以我就另起炉灶，用三十行代码写出了一个能玩的，有颜色的贪吃蛇出来。&lt;/h3&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="小游戏" scheme="http://yoursite.com/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>如何用C语言写一个简易的截屏程序</title>
    <link href="http://yoursite.com/2018/06/13/"/>
    <id>http://yoursite.com/2018/06/13/</id>
    <published>2018-06-13T11:06:38.000Z</published>
    <updated>2018-11-01T08:34:30.956Z</updated>
    
    <content type="html"><![CDATA[<h4 id="某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来"><a href="#某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来" class="headerlink" title="某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来"></a>某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来</h4><a id="more"></a><h4 id="然而事情没这么简单，随后鹏哥向我展示了他声称找了很久的截屏小工具：当时我的表情：-gt-lt-这-我可不包UI设计啊，还有我只是个刚学会一点C皮毛的纯新手…只好回去百度我需要的相关接口了"><a href="#然而事情没这么简单，随后鹏哥向我展示了他声称找了很久的截屏小工具：当时我的表情：-gt-lt-这-我可不包UI设计啊，还有我只是个刚学会一点C皮毛的纯新手…只好回去百度我需要的相关接口了" class="headerlink" title="然而事情没这么简单，随后鹏哥向我展示了他声称找了很久的截屏小工具：当时我的表情： &gt; _ &lt;  这..我可不包UI设计啊，还有我只是个刚学会一点C皮毛的纯新手…只好回去百度我需要的相关接口了"></a>然而事情没这么简单，随后鹏哥向我展示了他声称找了很久的截屏小工具：当时我的表情： &gt; _ &lt;  这..我可不包UI设计啊，还有我只是个刚学会一点C皮毛的纯新手…只好回去百度我需要的相关接口了</h4><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>截取屏幕，怎么截，截哪里，怎么存，存哪里，都是问题<br>于是一脸纠结的我理所当然的选择了最好存的图片格式：Bitmap位图，就是.bmp格式的图片，它的特征特别明显：容易存容易读，就是占用空间大。<br>然后就是怎么截，不管怎么截，我产生一个全屏幕窗口设备描述表的兼容位图总是没错的，你要截全屏我就都存到文件，你要截一部分我就在上面划那个一部分给你再存也就完事了<br>至于截哪里的问题，我本来想模仿qq截图来着，但是人家是按下快捷键后已经截取了全屏，然后让你用鼠标操作…（你懂得，我这菜鸟哪懂这样要怎么实现嘛），那我想，那我就退而求其次。利用鼠标的实时位置以及按键触发来确定你的截图起始位置，这样也算是能够以相对简单的方式实现了（我想你应该不会想用直接输入你想从哪个像素开始到哪个像素结束的方式来截一个图吧）。<br>存到哪里这个问题倒是好解决，我在c盘下创建一个专门存放截屏的目录，然后对每个截屏都取一个独一无二的名字<br>这样就解决了存哪里的问题</p><h1 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wtypes.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;afx.h&gt;</span></span><br><span class="line"><span class="comment">//默认储存路径</span></span><br><span class="line"><span class="keyword">char</span> path[<span class="number">260</span>] = <span class="string">"c:/shots/"</span>;</span><br><span class="line"><span class="comment">//设置文件名称</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">setname</span><span class="params">(<span class="keyword">char</span>* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//strcat(p, "-");</span></span><br><span class="line"><span class="comment">//strcat(p, __DATE__);</span></span><br><span class="line"><span class="keyword">char</span> * ret = p;</span><br><span class="line"><span class="keyword">while</span> (*p)</span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">if</span> (*p == <span class="string">':'</span> || *p == <span class="string">' '</span>||*p == <span class="string">'\n'</span>)*p = <span class="string">'-'</span>;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line">*(p - <span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">strcat</span>(ret, <span class="string">".bmp"</span>);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置打印位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CaptureScreen</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">time_t</span> lt = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">char</span> p[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(p, ctime(&amp;lt));</span><br><span class="line">setname(p);</span><br><span class="line"><span class="built_in">sprintf</span>(name, <span class="string">"%s%s"</span>,path,p);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"保存至:\n%s"</span>,name);</span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line"><span class="keyword">if</span> (x2 &lt; x1)</span><br><span class="line">&#123;</span><br><span class="line">t = x2; x2 = x1; x1 = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y2 &lt; y1)</span><br><span class="line">&#123;</span><br><span class="line">t = y2; y2 = y1; y1 = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获得桌面窗口句柄</span></span><br><span class="line">HWND hDesktopWnd = GetDesktopWindow();</span><br><span class="line"><span class="comment">//获得桌面窗口设备环境</span></span><br><span class="line">HDC hDesktopDC = GetDC(hDesktopWnd);</span><br><span class="line"><span class="comment">//产生全屏幕窗口设备描述表的兼容设备环境</span></span><br><span class="line">HDC hCaptureDC = CreateCompatibleDC(hDesktopDC);</span><br><span class="line"><span class="comment">//产生全屏幕窗口设备描述表的兼容位图</span></span><br><span class="line">HBITMAP hCaptureBitmap = CreateCompatibleBitmap(hDesktopDC, x2, y2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n宽度:%d\n高度:%d\n"</span>, x2 - x1, y2 - y1);</span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line"><span class="comment">//将兼容位图选入兼容设备环境</span></span><br><span class="line">SelectObject(hCaptureDC, hCaptureBitmap);</span><br><span class="line"><span class="comment">//将全屏幕窗口位图的象素数据拷贝到兼容设备描述表</span></span><br><span class="line">BitBlt(hCaptureDC,  <span class="number">0</span>, <span class="number">0</span>, x2-x1, y2-y1, hDesktopDC, x1, y1, SRCCOPY);</span><br><span class="line">BITMAPINFO    bi;</span><br><span class="line"><span class="keyword">void</span> *pBits = <span class="literal">NULL</span>;</span><br><span class="line">ZeroMemory(&amp;bi, <span class="keyword">sizeof</span>(bi));</span><br><span class="line">bi.bmiHeader.biSize = <span class="keyword">sizeof</span>(bi.bmiHeader);</span><br><span class="line">bi.bmiHeader.biHeight = (y2 - y1);</span><br><span class="line">bi.bmiHeader.biWidth = (x2 - x1);</span><br><span class="line">bi.bmiHeader.biPlanes = <span class="number">1</span>;</span><br><span class="line">bi.bmiHeader.biBitCount = <span class="number">24</span>;</span><br><span class="line">bi.bmiHeader.biCompression = BI_RGB;</span><br><span class="line">bi.bmiHeader.biSizeImage = <span class="number">3</span> * (y2 - y1)*(x2 - x1);</span><br><span class="line"><span class="comment">//产生位图兼容设备描述表</span></span><br><span class="line"><span class="comment">//DECLARE_HANDLE(HDC);</span></span><br><span class="line">HDC        hBmpFileDC = CreateCompatibleDC(hDesktopDC);</span><br><span class="line"><span class="comment">//产生位图兼容位图  </span></span><br><span class="line">HBITMAP    hBmpFileBitmap = CreateDIBSection(hDesktopDC, &amp;bi, DIB_RGB_COLORS, &amp;pBits, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//将兼容位图选入兼设备描述表容设备描述表</span></span><br><span class="line">SelectObject(hBmpFileDC, hBmpFileBitmap);</span><br><span class="line"><span class="comment">//将捕获的位图的象素拷贝到位图设备环境</span></span><br><span class="line">BitBlt(hBmpFileDC, <span class="number">0</span>, <span class="number">0</span>, x2 - x1, y2 - y1, hCaptureDC, <span class="number">0</span>, <span class="number">0</span>, SRCCOPY);</span><br><span class="line"><span class="comment">//创建文件    typedef void * HANDLE;</span></span><br><span class="line">HANDLE    hFile = CreateFile(name, GENERIC_WRITE, FILE_SHARE_WRITE, <span class="literal">NULL</span>, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//保存位图文件</span></span><br><span class="line"><span class="keyword">if</span> (hFile != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwRet = <span class="number">0</span>;</span><br><span class="line">BITMAPFILEHEADER bmfHeader;</span><br><span class="line">ZeroMemory(&amp;bmfHeader, <span class="keyword">sizeof</span>(bmfHeader));</span><br><span class="line">bmfHeader.bfOffBits = <span class="keyword">sizeof</span>(BITMAPFILEHEADER)+<span class="keyword">sizeof</span>(BITMAPINFOHEADER);</span><br><span class="line">bmfHeader.bfSize = bi.bmiHeader.biSizeImage + bmfHeader.bfOffBits;</span><br><span class="line">bmfHeader.bfType = 'MB';</span><br><span class="line"><span class="comment">//写入位图信息头</span></span><br><span class="line">WriteFile(hFile, &amp;bmfHeader, <span class="keyword">sizeof</span>(bmfHeader), &amp;dwRet, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//写入位图尺寸颜色表等信息</span></span><br><span class="line">WriteFile(hFile, &amp;bi.bmiHeader, <span class="keyword">sizeof</span>(bi.bmiHeader), &amp;dwRet, <span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//写入位图数据块</span></span><br><span class="line">WriteFile(hFile, pBits, bi.bmiHeader.biSizeImage, &amp;dwRet, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">//剪切板操作，当前有兼容性问题，故注释，正在解决</span></span><br><span class="line"><span class="comment">////写入剪切板</span></span><br><span class="line"><span class="comment">//if (OpenClipboard(NULL) &amp;&amp; EmptyClipboard())</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//SetClipboardData(CF_BITMAP, hFile);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//CloseClipboard();</span></span><br><span class="line">CloseHandle(hFile);</span><br><span class="line">&#125;</span><br><span class="line">DeleteDC(hBmpFileDC);</span><br><span class="line">DeleteObject(hBmpFileBitmap);</span><br><span class="line">ReleaseDC(hDesktopWnd, hDesktopDC);</span><br><span class="line">DeleteDC(hCaptureDC);</span><br><span class="line">DeleteObject(hCaptureBitmap);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pos</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">COORD pos;</span><br><span class="line">HANDLE hOutput;</span><br><span class="line">pos.X = x;</span><br><span class="line">pos.Y = y;</span><br><span class="line">hOutput = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">SetConsoleCursorPosition(hOutput, pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpos</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span>* y,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> zx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">long</span> zy = <span class="number">-1</span>;</span><br><span class="line">POINT ptB = &#123; <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//typedef struct tagPOINT</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//LONG  x;</span></span><br><span class="line"><span class="comment">//LONG  y;</span></span><br><span class="line"><span class="comment">//&#125; POINT, * PPOINT, NEAR * NPPOINT, FAR * LPPOINT;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LPPOINT xy = &amp;ptB;  <span class="comment">//位置变量</span></span><br><span class="line">GetCursorPos(xy);   <span class="comment">//获取鼠标当前位置</span></span><br><span class="line"><span class="comment">//如果鼠标移动，（即当前的坐标改变则打印出坐标）打印出做坐标。</span></span><br><span class="line"><span class="keyword">if</span> ((zx != xy-&gt;x) || (zy != xy-&gt;y))</span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>, z);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"x=%4d,y=%4d\n"</span>, xy-&gt;x*<span class="number">1920</span>/<span class="number">1536</span>, xy-&gt;y*<span class="number">1080</span>/<span class="number">864</span>);</span><br><span class="line">zx = xy-&gt;x;</span><br><span class="line">zy = xy-&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(<span class="string">'Q'</span>)&amp;&amp;GetAsyncKeyState( VK_CONTROL))</span><br><span class="line">&#123;</span><br><span class="line">ShowWindow(FindWindow(<span class="literal">NULL</span>, _T(<span class="string">"shot"</span>)), SW_MINIMIZE);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line">CaptureScreen(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1920</span>, <span class="number">1080</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">//若打印出来的坐标超过1920  1080请将下面的乘除操作去掉</span></span><br><span class="line">*x = xy-&gt;x*<span class="number">1920</span>/<span class="number">1536</span>;</span><br><span class="line">*y = xy-&gt;y*<span class="number">1080</span>/<span class="number">864</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">change</span><span class="params">(<span class="keyword">char</span>*p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>*ret = p;</span><br><span class="line"><span class="keyword">while</span> (*p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*p == <span class="string">'/'</span>)</span><br><span class="line">*p = <span class="string">'\\'</span>;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (*(p - <span class="number">1</span>) != <span class="string">'\\'</span>)<span class="built_in">strcat</span>(p<span class="number">-1</span>, <span class="string">"\\"</span>);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x1, x2, y1, y2;</span><br><span class="line"><span class="keyword">char</span> c = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> cpath[<span class="number">270</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="comment">//改变窗口名称，方便进行最小化</span></span><br><span class="line">system(<span class="string">"title shot"</span>);</span><br><span class="line">  <span class="comment">//修改窗口大小</span></span><br><span class="line">system(<span class="string">"mode con cols=40 lines=10"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"是否改变储存路径？(y/n)"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c);</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">'y'</span>)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入新路径:\n$ "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, path);</span><br><span class="line">change(path);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sprintf</span>(cpath, <span class="string">"md %s"</span>, path);</span><br><span class="line">  <span class="comment">//创建相应路径，如果已经存在也没事</span></span><br><span class="line">system(cpath);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">Pos(<span class="number">0</span>, <span class="number">9</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下Ctrl+Q截取全屏\n按下Ctrl+W进入截屏"</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(<span class="string">'Q'</span>) &amp;&amp; GetAsyncKeyState(VK_CONTROL))</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>, i++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"                                        "</span>);</span><br><span class="line">&#125;</span><br><span class="line">Pos(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">ShowWindow(FindWindow(<span class="literal">NULL</span>, _T(<span class="string">"shot"</span>)), SW_MINIMIZE);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line">CaptureScreen(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1920</span>, <span class="number">1080</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_CONTROL) &amp;&amp; GetAsyncKeyState(<span class="string">'W'</span>))</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>, i++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"                                        "</span>);</span><br><span class="line">&#125;</span><br><span class="line">Pos(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下空格选取截图起点\n"</span>);</span><br><span class="line">printpos(&amp;x1, &amp;y1, <span class="number">1</span>);</span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下空格选取截图终点\n"</span>);</span><br><span class="line">printpos(&amp;x2, &amp;y2, <span class="number">3</span>);</span><br><span class="line">CaptureScreen(x1, y1, x2, y2);</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//if (GetAsyncKeyState(VK_ESCAPE))</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们的截屏工具就做好了，它在前台运行时使用截全屏会自动隐藏，这样不会截到自己（就不会挡住一些东西）当然也可以后台运行，你只要记住快捷键就好了！<br>刚进入程序时不想改变默认路径可以直接回车，想改变的话就按提示操作吧~</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来&quot;&gt;&lt;a href=&quot;#某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来&quot; class=&quot;headerlink&quot; title=&quot;某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来&quot;&gt;&lt;/a&gt;某天当我写完了鼠标连点器之后，鹏哥问我能不能写个截屏工具出来&lt;/h4&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="小工具" scheme="http://yoursite.com/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现鼠标连点器</title>
    <link href="http://yoursite.com/2018/06/07/"/>
    <id>http://yoursite.com/2018/06/07/</id>
    <published>2018-06-07T04:36:50.000Z</published>
    <updated>2018-06-07T05:14:22.010Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义"><a href="#今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义" class="headerlink" title="今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义"></a>今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义</h3><h4 id="工具：VS2013"><a href="#工具：VS2013" class="headerlink" title="工具：VS2013"></a>工具：VS2013</h4><h4 id="语言：C"><a href="#语言：C" class="headerlink" title="语言：C"></a>语言：C</h4><a id="more"></a><p>有天看见同学在淘宝上抢购一款智能手表，原价169元才卖1.69元，可惜数量有限，没想到他们等了很久开始抢，一秒钟不到就被抢光了，我在旁边看着都能感受到他们的心碎。回到宿舍，我想：无非就是拼手速，为何我不做一个鼠标快速连点器呢？这样一秒钟点一百下，我就不信抢不到！<br>于是，我回去开始写起了代码：</p><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h1><h2 id="click-h"><a href="#click-h" class="headerlink" title="click.h"></a>click.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;windows.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;afxwin.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clt CLK_TCK</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pos</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prints</span><span class="params">(<span class="keyword">char</span>*, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMapArray</span><span class="params">(<span class="keyword">char</span> *mapname, <span class="keyword">unsigned</span> <span class="keyword">char</span> *maparray, <span class="keyword">int</span>* mapwidth, <span class="keyword">int</span>* mapheight)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">printimg</span><span class="params">(<span class="keyword">char</span>* argv)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">click</span><span class="params">(<span class="keyword">int</span> type, <span class="keyword">int</span> double_click)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clicks</span><span class="params">(<span class="keyword">int</span> type, <span class="keyword">int</span> double_click, <span class="keyword">int</span> time, <span class="keyword">int</span> count, <span class="keyword">int</span> px, <span class="keyword">int</span> py)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpos</span><span class="params">(<span class="keyword">int</span> *x,<span class="keyword">int</span> *y)</span></span>;</span><br></pre></td></tr></table></figure><h1 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h1><h2 id="mouse-cpp"><a href="#mouse-cpp" class="headerlink" title="mouse.cpp"></a>mouse.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"click.h"</span></span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_MOVE = 0x0001;      //移动鼠标</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_LEFTDOWN = 0x0002;  //模拟鼠标左键按下</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_LEFTUP = 0x0004;    //模拟鼠标左键抬起</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_RIGHTDOWN = 0x0008; //模拟鼠标右键按下</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_RIGHTUP = 0x0010;   //模拟鼠标右键抬起</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_MIDDLEDOWN = 0x0020;//模拟鼠标中键按下</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_MIDDLEUP = 0x0040;  //模拟鼠标中键抬起</span></span><br><span class="line"><span class="comment">//const int MOUSEEVENTF_ABSOLUTE = 0x8000;  //标示是否采用绝对坐标</span></span><br><span class="line"><span class="comment">/** mouse move</span></span><br><span class="line"><span class="comment">* x -- int, x-coordinate</span></span><br><span class="line"><span class="comment">* y -- int, y-coordinate</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//打印坐标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printpos</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span>* y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> zx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">long</span> zy = <span class="number">-1</span>;</span><br><span class="line">POINT ptB = &#123; <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">typedef struct tagPOINT</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">LONG  x;</span></span><br><span class="line"><span class="comment">LONG  y;</span></span><br><span class="line"><span class="comment">&#125; POINT, * PPOINT, NEAR * NPPOINT, FAR * LPPOINT;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LPPOINT xy = &amp;ptB;  <span class="comment">//位置变量</span></span><br><span class="line">GetCursorPos(xy);   <span class="comment">//获取鼠标当前位置</span></span><br><span class="line"><span class="comment">//如果鼠标移动，（即当前的坐标改变则打印出坐标）打印出做坐标。</span></span><br><span class="line"><span class="keyword">if</span> ((zx != xy-&gt;x) || (zy != xy-&gt;y))</span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"x=%4d,y=%4d\n"</span>, xy-&gt;x, xy-&gt;y);</span><br><span class="line">zx = xy-&gt;x;</span><br><span class="line">zy = xy-&gt;y;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_ESCAPE))</span><br><span class="line">&#123;</span><br><span class="line">*x = xy-&gt;x;</span><br><span class="line">*y = xy-&gt;y;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置打印位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pos</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">COORD pos;</span><br><span class="line">HANDLE hOutput;</span><br><span class="line">pos.X = x;</span><br><span class="line">pos.Y = y;</span><br><span class="line">hOutput = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">SetConsoleCursorPosition(hOutput, pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标移动</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI *Fun1)</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="comment">//#define DECLARE_HANDLE(name) struct name##__&#123;int unused;&#125;; typedef struct name##__ *name</span></span><br><span class="line"><span class="comment">//DECLARE_HANDLE(HINSTANCE);</span></span><br><span class="line">HINSTANCE hDll;</span><br><span class="line">hDll = LoadLibrary(<span class="string">"user32.dll"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == hDll)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"load dll 'user32.dll' fail."</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Fun1 SetCursorPos = (Fun1)GetProcAddress(hDll, <span class="string">"SetCursorPos"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == SetCursorPos)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"call function 'SetCursorPos' fail."</span>);</span><br><span class="line">FreeLibrary(hDll);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">SetCursorPos(x, y);</span><br><span class="line">FreeLibrary(hDll);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** mouse click</span></span><br><span class="line"><span class="comment">* type          -- int, 0:left click;1:right click</span></span><br><span class="line"><span class="comment">* double_click  -- bool, true:double click; false: single click</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//鼠标点击</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clicks</span><span class="params">(<span class="keyword">int</span> type, <span class="keyword">int</span> double_click, <span class="keyword">int</span> time, <span class="keyword">int</span> count, <span class="keyword">int</span> px, <span class="keyword">int</span> py)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">move(px, py);</span><br><span class="line">Sleep(time);</span><br><span class="line">click(type, double_click);</span><br><span class="line">count--;</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span> (!count)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_ESCAPE))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">click</span><span class="params">(<span class="keyword">int</span> type, <span class="keyword">int</span> double_click)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> left_click = MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP;</span><br><span class="line"><span class="keyword">int</span> right_click = MOUSEEVENTF_RIGHTDOWN | MOUSEEVENTF_RIGHTUP;</span><br><span class="line"><span class="keyword">int</span> clicktype;</span><br><span class="line">HINSTANCE hDll;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span><span class="params">(WINAPI*Fun2)</span></span></span><br><span class="line"><span class="function"><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="comment">//typedef unsigned long       DWORD;</span></span></span></span><br><span class="line"><span class="function"><span class="params">DWORD dwFlags,        <span class="comment">// motion and click options  </span></span></span></span><br><span class="line"><span class="function"><span class="params">DWORD dx,             <span class="comment">// horizontal position or change  </span></span></span></span><br><span class="line"><span class="function"><span class="params">DWORD dy,             <span class="comment">// vertical position or change  </span></span></span></span><br><span class="line"><span class="function"><span class="params">DWORD dwData,         <span class="comment">// wheel movement  </span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="comment">//typedef unsigned long _win64 *ULONG_PTR</span></span></span></span><br><span class="line"><span class="function"><span class="params">ULONG_PTR dwExtraInfo <span class="comment">// application-defined information  </span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line">hDll = LoadLibrary(<span class="string">"user32.dll"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == hDll)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"load dll 'user32.dll' fail."</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Fun2 mouse_event = (Fun2)GetProcAddress(hDll, <span class="string">"mouse_event"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == mouse_event)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"call function 'mouse_event' fail."</span>);</span><br><span class="line">FreeLibrary(hDll);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (type == <span class="number">0</span>)</span><br><span class="line">clicktype = left_click;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">clicktype = right_click;</span><br><span class="line">mouse_event(clicktype, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">FreeLibrary(hDll);</span><br><span class="line"><span class="keyword">if</span> (double_click)</span><br><span class="line">click(type, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="laindian-cpp"><a href="#laindian-cpp" class="headerlink" title="laindian.cpp"></a>laindian.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"click.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, count;</span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">int</span> dou = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> lef = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> mess[<span class="number">250</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"欢迎使用鼠标连点器！\n按下ESC确认坐标："</span>);</span><br><span class="line">printpos(&amp;x,&amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入延时(毫秒)和点击次数(0表示无限,随时可以按下ESC来中断点击):"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;time, &amp;count);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"十秒后开始点击！"</span>);</span><br><span class="line">Sleep(<span class="number">10000</span>);</span><br><span class="line">sum = clicks(lef, dou, time, count, x, y);</span><br><span class="line">wsprintf(mess, _T(<span class="string">"%s\n%s%d%s"</span>), _T(<span class="string">"点击完毕"</span>), _T(<span class="string">"共点击:"</span>), sum, _T(<span class="string">"次"</span>));</span><br><span class="line">MessageBox(<span class="number">0</span>, mess, _T(<span class="string">"点击结束"</span>), MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样写完代码之后，记得把项目-属性-配置属性-常规-项目默认值-MFC的使用改为在共享 DLL 中使用 MFC<br>就完全搞定了！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义&quot;&gt;&lt;a href=&quot;#今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义&quot; class=&quot;headerlink&quot; title=&quot;今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义&quot;&gt;&lt;/a&gt;今天我们实现一个鼠标连点器，点击位置，点击间隔，点击次数，点击左键还是右键，双击还是单击都可以自定义&lt;/h3&gt;&lt;h4 id=&quot;工具：VS2013&quot;&gt;&lt;a href=&quot;#工具：VS2013&quot; class=&quot;headerlink&quot; title=&quot;工具：VS2013&quot;&gt;&lt;/a&gt;工具：VS2013&lt;/h4&gt;&lt;h4 id=&quot;语言：C&quot;&gt;&lt;a href=&quot;#语言：C&quot; class=&quot;headerlink&quot; title=&quot;语言：C&quot;&gt;&lt;/a&gt;语言：C&lt;/h4&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="小工具" scheme="http://yoursite.com/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>C语言小项目之注释转换C-&gt;Cpp</title>
    <link href="http://yoursite.com/2018/06/04/"/>
    <id>http://yoursite.com/2018/06/04/</id>
    <published>2018-06-04T04:50:15.000Z</published>
    <updated>2018-06-04T13:17:00.814Z</updated>
    
    <content type="html"><![CDATA[<h4 id="今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。"><a href="#今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。" class="headerlink" title="今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。"></a>今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。</h4><a id="more"></a><h1 id="注释转换基本思路"><a href="#注释转换基本思路" class="headerlink" title="注释转换基本思路"></a>注释转换基本思路</h1><ul><li>转换方法先分析如下图：<br><img src="/img/zhuangtaizhuanhuanji.png" alt=""><br>（字符串状态因为处理简单没有画出）<br>由图可以看出，将注释转换过程分为四种状态，NULL_STATE(无注释状态)、C_STATE(C语言注释状态)、CPP_STATE(C++注释状态)、END_STATE(文件结束状态)，通过四种状态的相互切换实现注释的转换，具体实现过程为：用文件的方式中函数fopen打开源文件input.c,并进行读操作，打开output.c文件，进行注释转换后的写操作，转换过程中调用函数CommentConvert(pfIn,pfOut)转换，先在NULL_STATE状态下用函数fgetc函数读取第一个字符，若为’/‘,再读取第二个字符，若为’ * ‘则切换到C_STATE状态实现，若第二个字符为’/‘,则切换到CPP_STATE状态实现，如此一直相互切换，并在各自状态具体代码实现下用fputc函数输出转换为C++注释和各个原字符，直至遇到EOF,状态切换为end_state.<br>而在C语言注释下遇到的注释情况如下:  </li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.一般情况</span></span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/* int i = 0; */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.换行问题</span></span><br><span class="line"><span class="comment">/* int i = 0; */</span><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/* int i = 0; */</span></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.匹配问题</span></span><br><span class="line"><span class="comment">/*int i = 0;/*xxxxx*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.多行注释问题</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int i=0;</span></span><br><span class="line"><span class="comment">int j = 0;</span></span><br><span class="line"><span class="comment">int k = 0;</span></span><br><span class="line"><span class="comment">*/</span><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.连续注释问题</span></span><br><span class="line"><span class="comment">/**/</span><span class="comment">/**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 6.连续的**/问题</span></span><br><span class="line"><span class="comment">/***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 7.C++注释问题</span></span><br><span class="line"><span class="comment">// /*xxxxxxxxxxxx*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 8.字符串注释问题</span></span><br><span class="line"><span class="keyword">char</span>* p = <span class="string">"/*/////////////////adfasdfas"</span>;</span><br><span class="line"><span class="comment">/* char* q = "/////"*/</span></span><br><span class="line"><span class="comment">// char* x = "/**////**///"</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p>根据状态机和我们可能遇到的状况，我们开始写代码：  </p><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h1><h2 id="ctocpp-h"><a href="#ctocpp-h" class="headerlink" title="ctocpp.h"></a>ctocpp.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INPUTFILENAME <span class="meta-string">"in.c"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OUTPUTFILENAME <span class="meta-string">"out.c"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> CONVERT_START<span class="comment">//枚举表示操作选项</span></span><br><span class="line">&#123;</span><br><span class="line">NULL_START,</span><br><span class="line">C_START,</span><br><span class="line">CPP_START,</span><br><span class="line">END_START,</span><br><span class="line">STR_START</span><br><span class="line">&#125;StateType;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CommentConvert</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ConvertWork</span><span class="params">(FILE* read, FILE* write)</span></span>;<span class="comment">//注释转换操作选项函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoCState</span><span class="params">(FILE* read, FILE* write)</span></span>;<span class="comment">//C 转换为 cpp函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoNullState</span><span class="params">(FILE* read, FILE* write)</span></span>;<span class="comment">//普通语句空转换函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoCppState</span><span class="params">(FILE* read, FILE* write)</span></span>;<span class="comment">//cpp 转换函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DOStrState</span><span class="params">(FILE* read, FILE* write)</span></span>;<span class="comment">//字符串状态</span></span><br></pre></td></tr></table></figure><h1 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h1><h2 id="test-c"><a href="#test-c" class="headerlink" title="test.c"></a>test.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"ctocpp.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="keyword">char</span> newd[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">char</span> path[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">char</span> newout[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enum_path</span><span class="params">(<span class="keyword">char</span> *cpath)</span></span>&#123;</span><br><span class="line"><span class="comment">//typedef struct _WIN32_FIND_DATAA &#123;</span></span><br><span class="line"><span class="comment">//DWORD dwFileAttributes;</span></span><br><span class="line"><span class="comment">/*typedef unsigned long       DWORD;*/</span></span><br><span class="line"><span class="comment">//FILETIME ftCreationTime;</span></span><br><span class="line"><span class="comment">//FILETIME ftLastAccessTime;</span></span><br><span class="line"><span class="comment">//FILETIME ftLastWriteTime;</span></span><br><span class="line"><span class="comment">/*typedef struct _FILETIME</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">DWORD dwLowDateTime;</span></span><br><span class="line"><span class="comment">DWORD dwHighDateTime;</span></span><br><span class="line"><span class="comment">&#125; FILETIME*/</span></span><br><span class="line"><span class="comment">//DWORD nFileSizeHigh;</span></span><br><span class="line"><span class="comment">//DWORD nFileSizeLow;</span></span><br><span class="line"><span class="comment">//DWORD dwReserved0;</span></span><br><span class="line"><span class="comment">//DWORD dwReserved1;</span></span><br><span class="line"><span class="comment">// CHAR   cFileName[MAX_PATH];</span></span><br><span class="line"><span class="comment">// CHAR   cAlternateFileName[14];</span></span><br><span class="line">    <span class="comment">//&#125; WIN32_FIND_DATAA</span></span><br><span class="line"><span class="comment">//typedef WIN32_FIND_DATAA WIN32_FIND_DATA</span></span><br><span class="line"><span class="comment">//上面是WIN32_FIND_DATA的定义，其实就是类似于 FILE 型，是一种文件流类型</span></span><br><span class="line">WIN32_FIND_DATA wfd;</span><br><span class="line"><span class="comment">//HANDLE 实际上就是void *</span></span><br><span class="line">HANDLE hfd;</span><br><span class="line"><span class="keyword">char</span> cdir[MAX_PATH];</span><br><span class="line"><span class="keyword">char</span> subdir[MAX_PATH];</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line">  <span class="comment">//接收当前目录字符串的缓冲区指针。cdir字符串指定当前目录的绝对路径。</span></span><br><span class="line">GetCurrentDirectory(MAX_PATH, cdir);</span><br><span class="line">SetCurrentDirectory(cpath);<span class="comment">//更改当前进程的当前目录。</span></span><br><span class="line">  <span class="comment">//*是通配符，此函数在当前目录下寻找形如xxxx.xxxx的文件  </span></span><br><span class="line">  <span class="comment">//（就是查找所有文件了....并且如果有文件(夹)的话必定找到第一个）</span></span><br><span class="line">hfd = FindFirstFile(<span class="string">"*.*"</span>, &amp;wfd);</span><br><span class="line">  <span class="comment">//#define INVALID_HANDLE_VALUE ((HANDLE)(long)-1)这个是查找文件失败的返回值</span></span><br><span class="line"><span class="keyword">if</span> (hfd != INVALID_HANDLE_VALUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//上面的if语句的意思就是只要找到任何文件(夹)就进行如下循环</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (wfd.dwFileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY)<span class="comment">//#define FILE_ATTRIBUTE_DIRECTORY            0x00000010</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//上面的if语句用来判断此次查找到的到底是文件还是文件夹</span></span><br><span class="line"><span class="keyword">if</span> (wfd.cFileName[<span class="number">0</span>] != <span class="string">'.'</span>)</span><br><span class="line">        <span class="comment">//找到的文件名的第一个字符不是“.”的话表示这是一个文件夹，否则就是一个返回上层的接口</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(newd);</span><br><span class="line"><span class="comment">// 合成完整路径名</span></span><br><span class="line">          <span class="comment">//找到的文件(夹)名会存放在结构体的cFileName里</span></span><br><span class="line"><span class="built_in">sprintf</span>(subdir, <span class="string">"%s\\%s"</span>, cpath, wfd.cFileName);</span><br><span class="line"><span class="comment">//printf("read...%s\n", subdir);</span></span><br><span class="line"><span class="comment">//创建相应的输出文件夹</span></span><br><span class="line"><span class="built_in">sprintf</span>(newd, <span class="string">"%s\\%s"</span>, newd, wfd.cFileName);</span><br><span class="line"><span class="comment">//printf("\t\t%s....\n", newd);</span></span><br><span class="line">system(newd);</span><br><span class="line"><span class="comment">// 递归枚举子目录</span></span><br><span class="line">enum_path(subdir);</span><br><span class="line"><span class="comment">//递归完毕后处理新建路径</span></span><br><span class="line">newd[len] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//新文件路径</span></span><br><span class="line"><span class="built_in">sprintf</span>(newout, <span class="string">"%s\\%s"</span>, newd+<span class="number">3</span>, wfd.cFileName);</span><br><span class="line"><span class="comment">//printf("%s\n", newout);</span></span><br><span class="line"><span class="comment">//待处理文件路径</span></span><br><span class="line"><span class="built_in">sprintf</span>(path,<span class="string">"%s\\%s"</span>, cpath, wfd.cFileName);</span><br><span class="line"><span class="comment">//printf("%s\n", path);</span></span><br><span class="line"><span class="comment">//是需要注释转换的文件就进行注释转换</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="string">".c"</span>, path + <span class="built_in">strlen</span>(path) - <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">CommentConvert();</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="string">".h"</span>, path + <span class="built_in">strlen</span>(path) - <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">CommentConvert();</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="string">".cpp"</span>, path + <span class="built_in">strlen</span>(path) - <span class="number">4</span>) == <span class="number">0</span>)</span><br><span class="line">CommentConvert();</span><br><span class="line"><span class="keyword">else</span><span class="comment">//不需要注释转换就直接复制</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"copy  %s to %s\n"</span>, path, newout);<span class="comment">//显示复制信息</span></span><br><span class="line">file_copy();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (r = FindNextFile(hfd, &amp;wfd), r != <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//和FindFirstFile类似，向下继续找所有文件(夹)，找不到就返回0</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">//处理完毕把工作目录更改回原来的目录以免影响其他功能（与前面的GetCurrentDirectory相呼应）</span></span><br><span class="line">SetCurrentDirectory(cdir);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, argc);</span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"参数有误！"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(newd, <span class="string">"md %s"</span>, argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="comment">//system("md 文件夹名");创建一个文件夹，成功返回1，失败返回0并且在命令窗口可以看见</span></span><br><span class="line">system(newd);</span><br><span class="line">enum_path(argv[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ctocpp-c"><a href="#ctocpp-c" class="headerlink" title="ctocpp.c"></a>ctocpp.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS 1  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"ctocpp.h"</span>  </span></span><br><span class="line">StateType state;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> newd[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> path[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> newout[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DOStrState</span><span class="params">(FILE *read, FILE *write)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> first = fgetc(read);</span><br><span class="line"><span class="keyword">if</span> (first == <span class="string">'"'</span>)</span><br><span class="line">state = NULL_START;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(first == <span class="string">'\\'</span>)<span class="comment">//转义字符直接输出进文件</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> second = fgetc(read);</span><br><span class="line">    fputc(first, write);</span><br><span class="line">    fputc(second, write);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">fputc(first, write);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoNullState</span><span class="params">(FILE *read, FILE *write)</span><span class="comment">//无转换操作函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> first = fgetc(read);</span><br><span class="line"><span class="keyword">int</span> second;</span><br><span class="line"><span class="keyword">switch</span> (first)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">second = fgetc(read);</span><br><span class="line"><span class="keyword">if</span> (second == <span class="string">'*'</span>)</span><br><span class="line">&#123;</span><br><span class="line">fputc(<span class="string">'/'</span>, write);</span><br><span class="line">fputc(<span class="string">'/'</span>, write);</span><br><span class="line">state = C_START;<span class="comment">//状态改为C状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (second == <span class="string">'/'</span>)</span><br><span class="line">&#123;</span><br><span class="line">fputc(first, write);</span><br><span class="line">fputc(second, write);</span><br><span class="line">state = CPP_START; <span class="comment">//状态改为Cpp状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//普通语句就直接写入</span></span><br><span class="line">&#123;</span><br><span class="line">fputc(first, write);</span><br><span class="line">fputc(second, write);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'"'</span>:</span><br><span class="line">fputc(first, write);</span><br><span class="line">state = STR_START;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> EOF:</span><br><span class="line"><span class="comment">//fputc(first, write);</span></span><br><span class="line">state = END_START;<span class="comment">//注释结束，状态调整</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="comment">//普通内容直接写入</span></span><br><span class="line">fputc(first, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoCState</span><span class="params">(FILE *read, FILE *write)</span><span class="comment">//C转换为Cpp</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> first = fgetc(read);</span><br><span class="line"><span class="keyword">int</span> second = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (first)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">second = fgetc(read);</span><br><span class="line"><span class="keyword">if</span> (second == <span class="string">'/'</span>)<span class="comment">//舍弃 */</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> third = fgetc(read);</span><br><span class="line">state = NULL_START;</span><br><span class="line"><span class="keyword">if</span> (third != <span class="string">'\n'</span>)</span><br><span class="line">&#123;</span><br><span class="line">fputc(<span class="string">'\n'</span>, write);</span><br><span class="line">ungetc(third, read);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (third == <span class="string">'\n'</span>)</span><br><span class="line">&#123;</span><br><span class="line">fputc(third, write);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">fputc(first, write);</span><br><span class="line">ungetc(second, read);<span class="comment">//将*之后的内容还回缓冲区</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'\n'</span>:<span class="comment">//如果是换行将下一行开头加入Cpp注释</span></span><br><span class="line">fputc(first, write);</span><br><span class="line">fputc(<span class="string">'/'</span>, write);</span><br><span class="line">fputc(<span class="string">'/'</span>, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> EOF:</span><br><span class="line"><span class="comment">//fputc(first, write);</span></span><br><span class="line">state = END_START;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fputc(first, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoCppState</span><span class="params">(FILE *read, FILE *write)</span><span class="comment">//Cpp转换为无状态；  </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">first = fgetc(read);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (first)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>'\n':<span class="comment">//Cpp注释的结束；  </span></span><br><span class="line">fputc(first, write);</span><br><span class="line">state = NULL_START;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> EOF:</span><br><span class="line"><span class="comment">//fputc(first, write);</span></span><br><span class="line">state = END_START;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fputc(first, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ConvertWork</span><span class="params">(FILE *read, FILE *write)</span><span class="comment">//函数操作选项；  </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">state = NULL_START;<span class="comment">//一开始无状态  </span></span><br><span class="line"><span class="keyword">while</span> (state != END_START)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> NULL_START:</span><br><span class="line">DoNullState(read, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> C_START:</span><br><span class="line">DoCState(read, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CPP_START:</span><br><span class="line">DoCppState(read, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STR_START:</span><br><span class="line">DOStrState(read, write);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注释转换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CommentConvert</span><span class="params">()</span><span class="comment">//读写文件函数；  </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *pWrite = <span class="literal">NULL</span>;  </span><br><span class="line">FILE *pRead = fopen(path, <span class="string">"r"</span>);</span><br><span class="line"><span class="keyword">if</span> (pRead == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(path);</span><br><span class="line"><span class="comment">//exit(EXIT_FAILURE);</span></span><br><span class="line">&#125;  </span><br><span class="line">pWrite = fopen(newout,<span class="string">"w"</span>);</span><br><span class="line"><span class="keyword">if</span> (pWrite == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">fclose(pRead);</span><br><span class="line">pRead = <span class="literal">NULL</span>;</span><br><span class="line">perror(newout);</span><br><span class="line"><span class="comment">//exit(EXIT_FAILURE);</span></span><br><span class="line">&#125;</span><br><span class="line">ConvertWork(pRead, pWrite);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s转换成功\n"</span>,path);</span><br><span class="line">fclose(pRead);</span><br><span class="line">pRead = <span class="literal">NULL</span>;</span><br><span class="line">fclose(pWrite);</span><br><span class="line">pWrite = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//文件复制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">file_copy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> tmp[<span class="number">2</span>];</span><br><span class="line">FILE* write;</span><br><span class="line">FILE* read = fopen(path, <span class="string">"rb"</span>);</span><br><span class="line"><span class="keyword">if</span> (read == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"open file for copy"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">write = fopen(newout, <span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">if</span> (write == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"open file for copy source"</span>);</span><br><span class="line">fclose(read);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> judge = fread(tmp, <span class="number">1</span>, <span class="number">1</span>, read);</span><br><span class="line"><span class="keyword">if</span> (!judge)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">count += fwrite(tmp,<span class="number">1</span>, <span class="number">1</span>, write);</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"copy complete:total byte:%d\n"</span>,count);</span><br><span class="line">fclose(read);</span><br><span class="line">fclose(write);</span><br><span class="line">read = <span class="literal">NULL</span>;</span><br><span class="line">write = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样写完之后，我们在预处理这里写上命令行参数：<br><img src="/img/minglinghangcanshu.png" alt=""><br>运行程序，就会在我后面参数的位置生成一个文件夹，里面包括原来文件夹的所有文件（包括隐藏文件），<br>并且所有的.c，.h，.cpp文件都是经过注释转换的了<br><img src="/img/zhushizhuanhuan.png" alt=""><br><img src="/img/wenjianjia.png" alt=""><br>上面的查找文件夹使用了鹏哥推荐的win32 api<br>有兴趣的朋友可以查一查相关资料，绝对会使你受益匪浅。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。&quot;&gt;&lt;a href=&quot;#今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。&quot; class=&quot;headerlink&quot; title=&quot;今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。&quot;&gt;&lt;/a&gt;今天我们来实现一下C语言经典小项目：注释转换，并且利用命令行参数，对某个文件夹及所有子文件夹里的对应文件进行注释转换，无关文件进行复制操作，形成一个经过处理的新文件夹。&lt;/h4&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="项目" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="小项目" scheme="http://yoursite.com/tags/%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>hexo+next之给博客加上萌妹子或者萌宠</title>
    <link href="http://yoursite.com/2018/06/04/"/>
    <id>http://yoursite.com/2018/06/04/</id>
    <published>2018-06-04T04:49:17.000Z</published>
    <updated>2018-06-04T14:07:28.301Z</updated>
    
    <content type="html"><![CDATA[<h4 id="今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子"><a href="#今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子" class="headerlink" title="今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子"></a>今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子</h4><p>工具:<br>1.hexo+git pages搭建的博客<br>2.live2d资源包<br><a id="more"></a></p><h1 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h1><p>在博客站点路径git bash here然后输入以下代码<br>让你获得相关的支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></p><p>然后就是看下面的图片选择你喜欢的<br><img src="/img/wanko1.png" alt=""><br><img src="/img/wanko2.png" alt=""><br><img src="/img/wanko3.png" alt=""><br><img src="/img/wanko4.png" alt=""><br>注：角色图片不全，因为作者是不断更新的，建议直接访问作者的git仓库找更多角色<br>地址：<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget-models</a><br>然后记住你的角色名  输入下面的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-你选的角色名</span><br></pre></td></tr></table></figure></p><p>就获取完毕了</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>在站点的 _ config.yml 下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-你选的角色名</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: false</span><br></pre></td></tr></table></figure></p><p>上面的mobile选项决定是否在手机上展示动漫形象我的建议是不要开启，会挡住屏幕<br>当然你如果一定要开，把show改为true即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子&quot;&gt;&lt;a href=&quot;#今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子&quot; class=&quot;headerlink&quot; title=&quot;今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子&quot;&gt;&lt;/a&gt;今天我将详细说明如何在自己的博客里加入萌宠或者萌妹子&lt;/h4&gt;&lt;p&gt;工具:&lt;br&gt;1.hexo+git pages搭建的博客&lt;br&gt;2.live2d资源包&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现三子棋(井字棋)游戏</title>
    <link href="http://yoursite.com/2018/06/04/"/>
    <id>http://yoursite.com/2018/06/04/</id>
    <published>2018-06-04T04:48:33.000Z</published>
    <updated>2018-06-04T14:05:02.749Z</updated>
    
    <content type="html"><![CDATA[<h4 id="今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）"><a href="#今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）" class="headerlink" title="今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）"></a>今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）</h4><p>语言：C语言<br>工具：VS2013<br><a id="more"></a>  </p><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h1><h2 id="game-h"><a href="#game-h" class="headerlink" title="game.h"></a>game.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __GAME_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __GAME_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROW 3  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIN 3  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">game</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initboard</span><span class="params">(<span class="keyword">char</span> arr[ROW][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">checkboard</span><span class="params">(<span class="keyword">char</span> arr[ROW][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player_go</span><span class="params">(<span class="keyword">char</span> arr[ROW][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pc_go</span><span class="params">(<span class="keyword">char</span> arr[ROW][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin, <span class="keyword">int</span> nan)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_full</span><span class="params">(<span class="keyword">char</span> arr[ROW][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">is_win</span><span class="params">(<span class="keyword">char</span> arr[ROW][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//game.h</span></span></span><br></pre></td></tr></table></figure><h1 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h1><h2 id="test-c"><a href="#test-c" class="headerlink" title="test.c"></a>test.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"game.h"</span>  </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> input=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">do</span>&#123;  </span><br><span class="line">        menu();  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请选择： \n"</span>);  </span><br><span class="line">        scanf_s(<span class="string">"%d"</span>, &amp;input);  </span><br><span class="line">        <span class="keyword">switch</span> (input)</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">game(); <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>); <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请重新输入\n"</span>); <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="number">1</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="game-c"><a href="#game-c" class="headerlink" title="game.c"></a>game.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"game.h"</span>  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">game</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line">    <span class="keyword">char</span> ret;  </span><br><span class="line">    <span class="keyword">char</span> arr[ROW][LIN] ;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">initboard(arr, ROW, LIN);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"**************************************\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*                                    *\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*请选择难度：1.简单   2.困难   3.大师*\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*                                    *\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"**************************************\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;input);</span><br><span class="line"><span class="keyword">if</span> (input&gt;<span class="number">3</span> || input&lt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入错误！重新输入！"</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">checkboard(arr, ROW, LIN);</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));  </span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">&#123;  </span><br><span class="line">        player_go(arr, ROW, LIN);</span><br><span class="line"><span class="comment">//system("cls");</span></span><br><span class="line">        checkboard(arr, ROW, LIN);  </span><br><span class="line">        ret = is_win(arr, ROW, LIN);</span><br><span class="line">        <span class="keyword">if</span> (ret != <span class="string">' '</span>)</span><br><span class="line">&#123;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">        pc_go(arr, ROW, LIN, input);  </span><br><span class="line">        checkboard(arr, ROW, LIN);  </span><br><span class="line">        ret = is_win(arr, ROW, LIN);  </span><br><span class="line">        <span class="keyword">if</span> (ret != <span class="string">' '</span>)</span><br><span class="line">&#123;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="number">1</span>);  </span><br><span class="line">    <span class="keyword">if</span> (ret == <span class="string">'X'</span>)</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"你赢了！\n"</span>);  </span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ret == <span class="string">'O'</span>)</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"你输了！\n"</span>);  </span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ret == <span class="string">'f'</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"平局！\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n         三子棋       \n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"***********************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"***** 1.开始游戏  *****\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"***** 0.退出游戏  *****\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"***********************\n"</span>);</span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initboard</span><span class="params">(<span class="keyword">char</span> arr[][LIN], <span class="keyword">int</span> row,<span class="keyword">int</span> lin)</span><span class="comment">//初始化棋盘</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(arr, <span class="string">' '</span>, <span class="keyword">sizeof</span>(arr[<span class="number">0</span>][<span class="number">0</span>])* lin*row);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">checkboard</span><span class="params">(<span class="keyword">char</span> arr[][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span><span class="comment">//打印棋盘</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %c "</span>, arr[i][j]);</span><br><span class="line"><span class="keyword">if</span>(j &lt; lin<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; row<span class="number">-1</span>)</span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---"</span>);</span><br><span class="line"><span class="keyword">if</span>(j &lt; lin<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">player_go</span><span class="params">(<span class="keyword">char</span> arr[][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span><span class="comment">//玩家走</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, input;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请你落子(1-9): \n"</span>);  </span><br><span class="line">        <span class="comment">//scanf_s("%d %d", &amp;i, &amp;j);</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;input);</span><br><span class="line">i = (input+<span class="number">2</span>)/<span class="number">3</span>;</span><br><span class="line">j = (input%<span class="number">3</span> == <span class="number">0</span>)? <span class="number">3</span>:input%<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;=<span class="number">1</span> &amp;&amp; i &lt;= row&amp;&amp;j &gt;=<span class="number">1</span> &amp;&amp; j &lt;= lin)</span><br><span class="line">&#123;  </span><br><span class="line">            <span class="keyword">if</span> (arr[i - <span class="number">1</span>][j - <span class="number">1</span>] ==<span class="string">' '</span>)</span><br><span class="line">&#123;  </span><br><span class="line">                arr[i - <span class="number">1</span>][j - <span class="number">1</span>] = <span class="string">'X'</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> &#123;   </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"已经有子了！\n"</span>);  </span><br><span class="line">                 &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"错误落子，请重新落子\n"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//system("cls");</span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pc_go</span><span class="params">(<span class="keyword">char</span> arr[][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin, <span class="keyword">int</span> nan)</span><span class="comment">//电脑走  </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i, j, count;</span><br><span class="line"><span class="keyword">int</span> sig = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i2 = <span class="number">6</span>, j2 = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"电脑思考中"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">".\n电脑落子：\n"</span>);</span><br><span class="line"><span class="keyword">switch</span>(nan)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//难度1</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">i = rand() % row;  </span><br><span class="line">j = rand() % lin;  </span><br><span class="line"><span class="keyword">if</span> (arr[i][j] == <span class="string">' '</span>)</span><br><span class="line">&#123;  </span><br><span class="line">arr[i][j] = <span class="string">'O'</span>;  </span><br><span class="line"><span class="keyword">break</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//难度二</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">count = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(arr[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">nan2:</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">&#123;</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line">m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;</span><br><span class="line">m += arr[i][j];<span class="comment">//行</span></span><br><span class="line">n += arr[j][i];<span class="comment">//列</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(m == <span class="string">'O'</span>*<span class="number">2</span> + <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i][j] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[i][j] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(m == <span class="string">'X'</span>*<span class="number">2</span> + <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">sig++;</span><br><span class="line">i2 = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="string">'O'</span>*<span class="number">2</span> + <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;row; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j][i] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[j][i] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="string">'X'</span>*<span class="number">2</span> + <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">sig++;</span><br><span class="line">j2 = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//这里确定电脑不能一步下赢，开始阻拦玩家</span></span><br><span class="line"><span class="keyword">if</span>(sig)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i2 &lt; row)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i2][j] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[i2][j] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;row; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j][j2] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[j][j2] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//行列判定over</span></span><br><span class="line"><span class="keyword">if</span>(arr[<span class="number">0</span>][<span class="number">0</span>]+arr[<span class="number">1</span>][<span class="number">1</span>]+arr[<span class="number">2</span>][<span class="number">2</span>] == <span class="string">'O'</span>*<span class="number">2</span> + <span class="string">' '</span>||arr[<span class="number">0</span>][<span class="number">0</span>]+arr[<span class="number">1</span>][<span class="number">1</span>]+arr[<span class="number">2</span>][<span class="number">2</span>] == <span class="string">'X'</span>*<span class="number">2</span> + <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;lin; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i][i] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[i][i] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(arr[<span class="number">2</span>][<span class="number">0</span>]+arr[<span class="number">1</span>][<span class="number">1</span>]+arr[<span class="number">0</span>][<span class="number">2</span>] == <span class="string">'O'</span>*<span class="number">2</span> + <span class="string">' '</span>||arr[<span class="number">2</span>][<span class="number">0</span>]+arr[<span class="number">1</span>][<span class="number">1</span>]+arr[<span class="number">0</span>][<span class="number">2</span>] == <span class="string">'X'</span>*<span class="number">2</span> + <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;row; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[row-j<span class="number">-1</span>][j] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[row-j<span class="number">-1</span>][j] = <span class="string">'O'</span>;</span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//斜</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">i = rand() % row;  </span><br><span class="line">j = rand() % lin;  </span><br><span class="line"><span class="keyword">if</span> (arr[i][j] == <span class="string">' '</span>)</span><br><span class="line">&#123;  </span><br><span class="line">arr[i][j] = <span class="string">'O'</span>;  </span><br><span class="line"><span class="keyword">goto</span> done2;</span><br><span class="line">&#125;  </span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">done2:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//难度三</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">if</span>(arr[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="string">'O'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;</span><br><span class="line">count += arr[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((count == <span class="string">'X'</span>+ <span class="number">8</span>*<span class="string">' '</span>) &amp;&amp; arr[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">'X'</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="string">'O'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((count == <span class="string">'X'</span>*<span class="number">2</span> + <span class="string">'O'</span>*<span class="number">1</span> + <span class="string">' '</span>*<span class="number">6</span>) &amp;&amp; arr[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">'X'</span> &amp;&amp; arr[<span class="number">2</span>][<span class="number">2</span>] == <span class="string">'X'</span>)</span><br><span class="line">&#123;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="string">'O'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((count == <span class="string">'X'</span>*<span class="number">2</span> + <span class="string">'O'</span>*<span class="number">1</span> + <span class="string">' '</span>*<span class="number">6</span>) &amp;&amp; arr[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">'O'</span> &amp;&amp; (arr[<span class="number">0</span>][<span class="number">0</span>] == <span class="string">'X'</span> &amp;&amp; arr[<span class="number">2</span>][<span class="number">2</span>] == <span class="string">'X'</span>)||(arr[<span class="number">2</span>][<span class="number">0</span>] == <span class="string">'X'</span> &amp;&amp; arr[<span class="number">0</span>][<span class="number">2</span>] == <span class="string">'X'</span>))</span><br><span class="line">&#123;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="string">'O'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">goto</span> nan2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//system("cls");</span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_full</span><span class="params">(<span class="keyword">char</span> arr[][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span><span class="comment">//判断棋盘是否为满  </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;lin; j++)</span><br><span class="line">&#123;  </span><br><span class="line">            <span class="keyword">if</span> (arr[i][j] == <span class="string">' '</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">is_win</span><span class="params">(<span class="keyword">char</span> arr[][LIN], <span class="keyword">int</span> row, <span class="keyword">int</span> lin)</span><span class="comment">//判断输赢  </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="keyword">if</span> ((arr[i][<span class="number">0</span>] == arr[i][<span class="number">1</span>])&amp;&amp;( arr[i][<span class="number">1</span>] == arr[i][<span class="number">2</span>] )&amp;&amp; arr[i][<span class="number">1</span>] != <span class="string">' '</span>)  <span class="comment">//判断行</span></span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> arr[i][<span class="number">1</span>];</span><br><span class="line">        &#125;         </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;lin; j++) <span class="comment">//判断列  </span></span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> ((arr[<span class="number">0</span>][j] == arr[<span class="number">1</span>][j] ) &amp;&amp; ( arr[<span class="number">1</span>][j] == arr[<span class="number">2</span>][j]) &amp;&amp; arr[<span class="number">1</span>][j] != <span class="string">' '</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> arr[<span class="number">1</span>][j];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> ((arr[<span class="number">0</span>][<span class="number">0</span>] == arr[<span class="number">1</span>][<span class="number">1</span>] ) &amp;&amp; (arr[<span class="number">1</span>][<span class="number">1</span>] == arr[<span class="number">2</span>][<span class="number">2</span>]) &amp;&amp; arr[<span class="number">1</span>][<span class="number">1</span>] != <span class="string">' '</span>) <span class="comment">//判断斜列  </span></span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> arr[<span class="number">1</span>][<span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( (arr[<span class="number">0</span>][<span class="number">2</span>] == arr[<span class="number">1</span>][<span class="number">1</span>]) &amp;&amp; ( arr[<span class="number">1</span>][<span class="number">1</span>] == arr[<span class="number">2</span>][<span class="number">0</span>]) &amp;&amp; arr[<span class="number">1</span>][<span class="number">1</span>] != <span class="string">' '</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> arr[<span class="number">1</span>][<span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (is_full(arr,row,lin))</span><br><span class="line">&#123;  </span><br><span class="line">        <span class="keyword">return</span>  <span class="string">'f'</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span>  <span class="string">' '</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我设定了三个难度，其中那个最高难度，我的设定是赢不了电脑的，不信的同学可以试试，如果你下赢了，请接受我的敬佩哦…..</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）&quot;&gt;&lt;a href=&quot;#今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）&quot; class=&quot;headerlink&quot; title=&quot;今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）&quot;&gt;&lt;/a&gt;今天我们实现一个C语言做的井字棋游戏，并且给这个游戏加上些难度，让你不是那么好赢（甚至赢不了）&lt;/h4&gt;&lt;p&gt;语言：C语言&lt;br&gt;工具：VS2013&lt;br&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现扫雷游戏</title>
    <link href="http://yoursite.com/2018/06/02/"/>
    <id>http://yoursite.com/2018/06/02/</id>
    <published>2018-06-02T15:25:10.000Z</published>
    <updated>2018-06-02T15:48:18.381Z</updated>
    
    <content type="html"><![CDATA[<p>今天我们使用C语言简单实现一下经典游戏：扫雷<br><a id="more"></a><br>在开始之前我们先看一下效果：<br><img src="/img/saoleicaidan.png" alt=""><br><img src="/img/nanduxuanze.png" alt=""><br><img src="/img/biaojidilei.png" alt=""><br><img src="/img/paileishibai.png" alt=""><br>接下来上代码：  </p><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h1><h2 id="game-h"><a href="#game-h" class="headerlink" title="game.h"></a>game.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _GAME_H__  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GAME_H__  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COL 10   </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROW 10  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COLS COL+2  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROWS ROW+2  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> clt CLK_TCK  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_L 45</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_C 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">game</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start_show</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_mine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS], <span class="keyword">int</span> rows, <span class="keyword">int</span> cols,<span class="keyword">int</span> count)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_show</span><span class="params">(<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> rows, <span class="keyword">int</span> cols)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printmine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS], <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printshow</span><span class="params">(<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jump_mine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS], <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearmine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS],<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> row,<span class="keyword">int</span> col)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sweep_mine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS], <span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> row, <span class="keyword">int</span> col, <span class="keyword">int</span> count, <span class="keyword">int</span> countsao)</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_win</span><span class="params">(<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> row, <span class="keyword">int</span> col,<span class="keyword">int</span> count)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">select_mode</span><span class="params">()</span></span>;  </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h1 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h1><h2 id="game-c"><a href="#game-c" class="headerlink" title="game.c"></a>game.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Game.h"</span>  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">game</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> C1 = clock();</span><br><span class="line"><span class="comment">//char p[50];</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> countsao = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mine[ROWS][COLS] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> show[ROWS][COLS] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> win = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> C2;</span><br><span class="line">    count = select_mode();</span><br><span class="line">    init_mine(mine, ROWS, COLS, count);</span><br><span class="line">    init_show(show, ROWS, COLS);</span><br><span class="line"><span class="comment">//sprintf((char *)p, "mode con cols=%d lines=%d", MAX_L, MAX_C);</span></span><br><span class="line"><span class="comment">//system((const char*)p);</span></span><br><span class="line">    <span class="keyword">while</span> (win)</span><br><span class="line">    &#123;</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line">        printshow(show, ROW, COL);</span><br><span class="line"><span class="comment">//printmine(mine, ROW, COL);</span></span><br><span class="line">countsao++;</span><br><span class="line">        win = sweep_mine(mine, show, ROW, COL, count, countsao);</span><br><span class="line">        <span class="keyword">if</span> (x = is_win(show, ROW, COL, count))</span><br><span class="line">        &#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">C2 = clock();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n恭喜你排完了所有的雷!\t\t用时：%d秒\n"</span>,(C2-C1)/clt);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printshow(show, ROW, COL);//扫雷界面</span></span><br><span class="line">    printmine(mine, ROW, COL);<span class="comment">//雷信息</span></span><br><span class="line"><span class="keyword">if</span>(!x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t******     *      *******   ******    ******* *       * ******  ******   **\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t*         * *    *   *   *  *         *     *  *     *  *       *    *   **\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t*  ***   *****   *   *   *  ******    *     *   *   *   ******  ******   **\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t*    *  *     *  *   *   *  *         *     *    * *    *       * *        \n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t****** *       * *       *  ******    *******     *     ******  *   **   **\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start_show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"loading."</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">30</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">Sleep(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"************************************************************************************************************************"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(; i&gt;<span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">Sleep(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"************************************************************************************************************************"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t         欢迎来到扫雷世界!         \n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n\t\t\t\t***********************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t***********   1.开始   ************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t***********************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t***********   0.退出   ************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t***********************************\n"</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">select_mode</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;  </span><br><span class="line">    system(<span class="string">"cls"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n\t\t\t\t**************************************\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t*1.简单         2.困难         3.大师*\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t**************************************\n"</span>);  </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\t\t\t\t请输入选择&gt;"</span>);</span><br><span class="line">        scanf_s(<span class="string">"%d"</span>, &amp;num);  </span><br><span class="line">        <span class="keyword">switch</span> (num)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">return</span> ROWS;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span> ROWS+ROWS/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:<span class="keyword">return</span> ROW*<span class="number">3</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">99</span>:<span class="keyword">return</span> ROW*COL<span class="number">-2</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">100</span>:<span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">"\t\t\t\t输入错误,请重新输入!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_show</span><span class="params">(<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> rows, <span class="keyword">int</span> cols)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; rows; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; cols; j++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[i][j] = <span class="string">'0'</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_mine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS],<span class="keyword">int</span> rows,<span class="keyword">int</span> cols,<span class="keyword">int</span> count)</span><span class="comment">//布雷</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> i = count;   </span><br><span class="line">    <span class="keyword">while</span> (i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        x = rand()%(rows <span class="number">-2</span>)+<span class="number">1</span>;  </span><br><span class="line">        y = rand()%(cols <span class="number">-2</span>)+<span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">9</span> != mine[x][y])</span><br><span class="line">        &#123;  </span><br><span class="line">            mine[x][y] = <span class="number">9</span>;  </span><br><span class="line">            i--;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span>!=mine[x][y - <span class="number">1</span>])<span class="comment">//周围雷数量</span></span><br><span class="line">mine[x][y - <span class="number">1</span>]++;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span>!= mine[x][y + <span class="number">1</span>])  </span><br><span class="line">mine[x][y + <span class="number">1</span>]++;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span>!= mine[x - <span class="number">1</span>][y + <span class="number">1</span>])  </span><br><span class="line">mine[x - <span class="number">1</span>][y + <span class="number">1</span>]++;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> != mine[x - <span class="number">1</span>][y])  </span><br><span class="line">    mine[x - <span class="number">1</span>][y]++;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> != mine[x - <span class="number">1</span>][y - <span class="number">1</span>])  </span><br><span class="line">mine[x - <span class="number">1</span>][y - <span class="number">1</span>]++;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> != mine[x + <span class="number">1</span>][y - <span class="number">1</span>])  </span><br><span class="line">mine[x + <span class="number">1</span>][y - <span class="number">1</span>]++;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> != mine[x + <span class="number">1</span>][y])  </span><br><span class="line">mine[x + <span class="number">1</span>][y]++;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> != mine[x + <span class="number">1</span>][y + <span class="number">1</span>])  </span><br><span class="line">mine[x + <span class="number">1</span>][y + <span class="number">1</span>]++;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printmine</span><span class="params">(<span class="keyword">int</span> arr[ROWS][COLS], <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;=col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---+"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=row; i++)  </span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %-2d|"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---+"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=row; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"| %-2d|"</span>,i);</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">1</span>; j&lt;=col; j++)  </span><br><span class="line">        &#123;   </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> == arr[i][j])  </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" ●|"</span>);  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %-2d|"</span>, arr[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---+"</span>);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printshow</span><span class="params">(<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;  </span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;=col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---+"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=row; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %-2d|"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---+"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"| %-2d|"</span>, i);</span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">1</span>; j&lt;=col; j++)  </span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">if</span> (<span class="string">'0'</span>== show[i][j])  </span><br><span class="line">&#123;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" ▇|"</span>);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span> == show[i][j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" ◆|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %2c|"</span>, show[i][j]);  </span><br><span class="line">&#125;</span><br><span class="line">&#125;       </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---+"</span>);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearmine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS],<span class="keyword">char</span> show[ROWS][COLS], <span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> row,<span class="keyword">int</span> col)</span><span class="comment">//递归判定  </span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == mine[x][y])  </span><br><span class="line">    &#123;  </span><br><span class="line">        show[x][y] = <span class="string">' '</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x - <span class="number">1</span>][y])</span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x - <span class="number">1</span>][y] &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            clearmine(mine, show, x<span class="number">-1</span>, y, row, col);</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x - <span class="number">1</span>][y] = <span class="string">'0'</span> + mine[x - <span class="number">1</span>][y];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x + <span class="number">1</span>][y])  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x + <span class="number">1</span>][y] &amp;&amp; x + <span class="number">1</span> &lt;= row &amp;&amp; <span class="string">' '</span> != show[x + <span class="number">1</span>][y])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x+<span class="number">1</span>, y, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x + <span class="number">1</span>][y] = <span class="string">'0'</span> + mine[x + <span class="number">1</span>][y];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x][y<span class="number">-1</span>])  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x][y - <span class="number">1</span>] &amp;&amp; y - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; <span class="string">' '</span> != show[x][y - <span class="number">1</span>])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x, y<span class="number">-1</span>, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x][y - <span class="number">1</span>] = <span class="string">'0'</span> + mine[x][y - <span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x - <span class="number">1</span>][y<span class="number">-1</span>])</span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x - <span class="number">1</span>][y - <span class="number">1</span>] &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; y - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; <span class="string">' '</span> != show[x - <span class="number">1</span>][y - <span class="number">1</span>])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x<span class="number">-1</span>, y<span class="number">-1</span>, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x - <span class="number">1</span>][y - <span class="number">1</span>] = <span class="string">'0'</span> + mine[x - <span class="number">1</span>][y - <span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x + <span class="number">1</span>][y<span class="number">-1</span>])  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x + <span class="number">1</span>][y - <span class="number">1</span>] &amp;&amp; x + <span class="number">1</span> &lt;= row &amp;&amp; y - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; <span class="string">' '</span> != show[x + <span class="number">1</span>][y - <span class="number">1</span>])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x+<span class="number">1</span>, y<span class="number">-1</span>, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x + <span class="number">1</span>][y - <span class="number">1</span>] = <span class="string">'0'</span> + mine[x + <span class="number">1</span>][y - <span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x + <span class="number">1</span>][y+<span class="number">1</span>])  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x + <span class="number">1</span>][y + <span class="number">1</span>] &amp;&amp; x + <span class="number">1</span> &lt;= row &amp;&amp; y + <span class="number">1</span> &lt;= col &amp;&amp; <span class="string">' '</span> != show[x + <span class="number">1</span>][y + <span class="number">1</span>])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x+<span class="number">1</span>, y+<span class="number">1</span>, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x + <span class="number">1</span>][y + <span class="number">1</span>] = <span class="string">'0'</span> + mine[x + <span class="number">1</span>][y + <span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x - <span class="number">1</span>][y +<span class="number">1</span>])  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x - <span class="number">1</span>][y + <span class="number">1</span>] &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; y + <span class="number">1</span> &lt;= col &amp;&amp; <span class="string">' '</span> != show[x - <span class="number">1</span>][y + <span class="number">1</span>])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x<span class="number">-1</span>, y+<span class="number">1</span>, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x - <span class="number">1</span>][y + <span class="number">1</span>] = <span class="string">'0'</span> + mine[x - <span class="number">1</span>][y + <span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="string">' '</span> != show[x ][y + <span class="number">1</span>])  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == mine[x][y + <span class="number">1</span>] &amp;&amp; y + <span class="number">1</span> &lt;= col &amp;&amp; <span class="string">' '</span> != show[x][y + <span class="number">1</span>])  </span><br><span class="line">        &#123;  </span><br><span class="line">            clearmine(mine, show, x, y+<span class="number">1</span>, row, col);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            show[x][y + <span class="number">1</span>] = <span class="string">'0'</span> + mine[x][y + <span class="number">1</span>];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;   </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_win</span><span class="params">(<span class="keyword">char</span> show[ROWS][COLS],<span class="keyword">int</span> row,<span class="keyword">int</span> col,<span class="keyword">int</span> count)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> countmine = <span class="number">0</span>;    </span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">1</span>; x &lt;= row; x++)  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (y = <span class="number">1</span>; y &lt;= col; y++)  </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">'0'</span> != show[x][y] )</span><br><span class="line">                countmine++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (countmine &gt;= (row*col - count));</span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jump_mine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS], <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">9</span> == mine[x][y])</span><br><span class="line">    &#123;</span><br><span class="line">        i = rand() % row + <span class="number">1</span>;</span><br><span class="line">        j = rand() % col + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(mine[i][j] - <span class="number">9</span> )</span><br><span class="line">&#123;</span><br><span class="line">mine[x][y] = <span class="number">0</span>;</span><br><span class="line">mine[i][j] = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span>!=mine[x][y - <span class="number">1</span>] )<span class="comment">//原位置周围雷数量</span></span><br><span class="line">mine[x][y - <span class="number">1</span>]--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span>!= mine[x][y + <span class="number">1</span>] )  </span><br><span class="line">mine[x][y + <span class="number">1</span>]--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span>!= mine[x - <span class="number">1</span>][y + <span class="number">1</span>] )  </span><br><span class="line">mine[x - <span class="number">1</span>][y + <span class="number">1</span>]--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[x - <span class="number">1</span>][y] )  </span><br><span class="line">mine[x - <span class="number">1</span>][y]--;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[x - <span class="number">1</span>][y - <span class="number">1</span>] )  </span><br><span class="line">mine[x - <span class="number">1</span>][y - <span class="number">1</span>]--;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[x + <span class="number">1</span>][y - <span class="number">1</span>] )  </span><br><span class="line">mine[x + <span class="number">1</span>][y - <span class="number">1</span>]--;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[x + <span class="number">1</span>][y] )  </span><br><span class="line">mine[x + <span class="number">1</span>][y]--;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[x + <span class="number">1</span>][y + <span class="number">1</span>] )  </span><br><span class="line">mine[x + <span class="number">1</span>][y + <span class="number">1</span>]--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">mine[x][y]++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span>!=mine[i][j - <span class="number">1</span>])<span class="comment">//新位置周围雷数量</span></span><br><span class="line">mine[i][j - <span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span>!= mine[i][j + <span class="number">1</span>])  </span><br><span class="line">mine[i][j + <span class="number">1</span>]++;  </span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span>!= mine[i - <span class="number">1</span>][j + <span class="number">1</span>])  </span><br><span class="line">mine[i - <span class="number">1</span>][j + <span class="number">1</span>]++;  </span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[i - <span class="number">1</span>][j])  </span><br><span class="line">mine[i - <span class="number">1</span>][j]++;  </span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[i - <span class="number">1</span>][j - <span class="number">1</span>])  </span><br><span class="line">mine[i - <span class="number">1</span>][j - <span class="number">1</span>]++;  </span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[i + <span class="number">1</span>][j - <span class="number">1</span>])  </span><br><span class="line">mine[i + <span class="number">1</span>][j - <span class="number">1</span>]++;  </span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[i + <span class="number">1</span>][j])  </span><br><span class="line">mine[i + <span class="number">1</span>][j]++;  </span><br><span class="line"><span class="keyword">if</span> (<span class="number">9</span> != mine[i + <span class="number">1</span>][j + <span class="number">1</span>])  </span><br><span class="line">mine[i + <span class="number">1</span>][j + <span class="number">1</span>]++;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sweep_mine</span><span class="params">(<span class="keyword">int</span> mine[ROWS][COLS],<span class="keyword">char</span> show[ROWS][COLS],<span class="keyword">int</span> row,<span class="keyword">int</span> col,<span class="keyword">int</span> count, <span class="keyword">int</span> countsao)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;  </span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)  </span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">if</span>(countsao &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"是否进行标记？（y/n）"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;c);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">'y'</span> == c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入标记坐标："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line">show[x][y] = <span class="number">1</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">printshow(show, ROW, COL);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="string">'y'</span> == c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"是否继续标记？（y/n）"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;c);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">'y'</span> == c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入标记坐标："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line">show[x][y] = <span class="number">1</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">printshow(show, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入排雷坐标&gt;"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">if</span> (x&gt;=<span class="number">1</span>&amp;&amp;x&lt;= row &amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;= col)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">9</span> == mine[x][y])<span class="comment">//避开第一次就踩雷  </span></span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="keyword">if</span> (<span class="number">1</span> == countsao)  </span><br><span class="line">                &#123;</span><br><span class="line">                    jump_mine(mine, x, y ,row, col);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"很遗憾，你挂了！\n"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == mine[x][y])  </span><br><span class="line">            &#123;  </span><br><span class="line">                clearmine(mine, show, x, y, row, col);</span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;  </span><br><span class="line">                show[x][y] = <span class="string">'0'</span> + mine[x][y];</span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"输入有误，请重新输入\n"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="test-c"><a href="#test-c" class="headerlink" title="test.c"></a>test.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Game.h"</span>  </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="comment">//char p[50];</span></span><br><span class="line">    <span class="keyword">int</span> input;  </span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">start_show();</span><br><span class="line"><span class="comment">//sprintf((char *)p, "mode con cols=%d lines=%d", 100, 25);</span></span><br><span class="line"><span class="comment">//system((const char*)p);</span></span><br><span class="line">res: <span class="comment">//restart</span></span><br><span class="line">    menu();  </span><br><span class="line">    <span class="keyword">do</span>  </span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\t\t\t\t请选择&gt;"</span>);  </span><br><span class="line">        scanf_s(<span class="string">"%d"</span>, &amp;input);  </span><br><span class="line">        <span class="keyword">switch</span> (input)  </span><br><span class="line">        &#123;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>: <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">game();</span><br><span class="line"><span class="comment">//sprintf((char *)p, "mode con cols=%d lines=%d", 100, 25);</span></span><br><span class="line"><span class="comment">//system((const char*)p);</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">goto</span> res;<span class="comment">//restart</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t输入错误！请重新输入：\n"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们的扫雷就搞定了.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我们使用C语言简单实现一下经典游戏：扫雷&lt;br&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现变色贪吃蛇</title>
    <link href="http://yoursite.com/2018/05/30/"/>
    <id>http://yoursite.com/2018/05/30/</id>
    <published>2018-05-30T06:18:32.000Z</published>
    <updated>2018-06-21T15:24:37.880Z</updated>
    
    <content type="html"><![CDATA[<p>今天我们实现一下用C语言编写一个能变色、能调速、能调整地图大小、有成就系统、并且能用文件保存分数和成就的贪吃蛇游戏··<br>工具：VS2013<br>语言：C<br><a id="more"></a></p><p>我们先看一下效果：<br><img src="/img/caidan.png" alt=""><br><img src="/img/paihangbang.png" alt=""><br><img src="/img/tanchishe.png" alt=""><br><img src="/img/chengjiu.png" alt="">  </p><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h1><h2 id="TCS-h"><a href="#TCS-h" class="headerlink" title="TCS.h"></a>TCS.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __TCS_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __TCS_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mmsystem.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"WINMM.LIB"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Filename <span class="meta-string">"tcs.52m"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> D 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> L 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R 4       <span class="comment">//蛇的状态，U：上 ；D：下；L:左 R：右</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SNAKE</span> //蛇身的一个节点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SNAKE</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;snake;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PLAYER</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> scores;</span><br><span class="line"><span class="keyword">char</span> len[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> steps;</span><br><span class="line">&#125;player;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ACHEVE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> step;</span><br><span class="line"><span class="keyword">int</span> eat;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line">&#125;acheve;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">POS</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">&#125;pos,*ppos;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LEL</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ppos pos;</span><br><span class="line"><span class="keyword">int</span> sz;</span><br><span class="line"><span class="keyword">int</span> capacity;</span><br><span class="line">&#125;lel,plel;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span>  * name[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> sz;</span><br><span class="line">&#125;List;</span><br><span class="line"><span class="comment">//声明全部函数//</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pos</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatMap</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initsnake</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">biteself</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createfood</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cantcrosswall</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">snakemove</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pause</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gamecircle</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcometogame</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gamestart</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">endgame</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inittop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showtop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sorttop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startshow</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectmap</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mapmenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">topmenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadtop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">savetop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showach</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadach</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">saveach</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tfree</span><span class="params">(snake* p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlevel</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printlevel</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectmode</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uplevel</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modemenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Select</span><span class="params">(List mmenu)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printmenu</span><span class="params">(List menu, <span class="keyword">int</span> t)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span><span class="comment">//__TCS_H__</span></span></span><br></pre></td></tr></table></figure><h1 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h1><h2 id="tcs-c"><a href="#tcs-c" class="headerlink" title="tcs.c"></a>tcs.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"TCS.h"</span></span></span><br><span class="line"><span class="comment">//全局变量//</span></span><br><span class="line"><span class="keyword">int</span> level = <span class="number">0</span>;                       <span class="comment">//关卡数，0表示无尽模式</span></span><br><span class="line"><span class="keyword">int</span> score = <span class="number">0</span>, add = <span class="number">10</span>;             <span class="comment">//总得分与每次吃食物得分</span></span><br><span class="line"><span class="keyword">int</span> status, sleeptime = <span class="number">200</span>;         <span class="comment">//每次运行的时间间隔</span></span><br><span class="line">snake *head, *food;                 <span class="comment">//蛇头指针，食物指针</span></span><br><span class="line">snake *q;                            <span class="comment">//遍历蛇的时候用到的指针</span></span><br><span class="line"><span class="keyword">int</span> endgamestatus = <span class="number">0</span>;               <span class="comment">//游戏结束的情况，1：撞到墙；2：咬到自己；3：主动退出游戏。</span></span><br><span class="line"><span class="keyword">int</span> run = <span class="number">0</span>;                         <span class="comment">//判断游戏是否还能运行</span></span><br><span class="line">player top[<span class="number">61</span>];                      <span class="comment">//排行榜</span></span><br><span class="line"><span class="keyword">int</span> MAX_LL = <span class="number">130</span>;                    <span class="comment">//游戏窗口长度</span></span><br><span class="line"><span class="keyword">int</span> MAX_CC = <span class="number">36</span>;                     <span class="comment">//游戏窗口高度</span></span><br><span class="line"><span class="keyword">int</span> MAX_L = <span class="number">92</span>;                      <span class="comment">//游戏区域长度</span></span><br><span class="line"><span class="keyword">int</span> MAX_C = <span class="number">35</span>;                      <span class="comment">//游戏区域高度</span></span><br><span class="line"><span class="keyword">int</span> steps = <span class="number">0</span>;                       <span class="comment">//计数步数</span></span><br><span class="line"><span class="keyword">int</span> lenth = <span class="number">4</span>;                       <span class="comment">//计数长度</span></span><br><span class="line">acheve ach;                          <span class="comment">//成就数据</span></span><br><span class="line"><span class="keyword">int</span> mode = <span class="number">0</span>;                        <span class="comment">//游戏模式  0  正常    1  躲避</span></span><br><span class="line"><span class="keyword">int</span> istest = <span class="number">0</span>;                       <span class="comment">//是否为测试模式</span></span><br><span class="line">lel <span class="built_in">map</span>[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">int</span> weisuoyuwei = <span class="number">0</span>;                 <span class="comment">//为所欲为模式</span></span><br><span class="line"><span class="keyword">int</span> Color = <span class="number">0</span>;</span><br><span class="line">List mainmenu = &#123; &#123; <span class="string">"开始游戏"</span>,<span class="string">"游戏说明"</span>,<span class="string">"排行总榜"</span>,<span class="string">"成就系统"</span>,<span class="string">"退出游戏"</span> &#125;,<span class="number">5</span> &#125;;</span><br><span class="line">List Modemenu = &#123; &#123; <span class="string">"自由无限模式"</span>, <span class="string">"障碍无限模式"</span>, <span class="string">"自由闯关模式"</span>, <span class="string">"障碍闯关模式"</span> &#125;, <span class="number">4</span> &#125;;</span><br><span class="line">List Mapmenu = &#123; &#123; <span class="string">"小型地图"</span>, <span class="string">"中号地图"</span>, <span class="string">"大型地图"</span> &#125;, <span class="number">3</span> &#125;;</span><br><span class="line">List Maptopmenu = &#123; &#123; <span class="string">"小型地图排行"</span>, <span class="string">"中号地图排行"</span>, <span class="string">"大型地图排行"</span> &#125;, <span class="number">3</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printmenu</span><span class="params">(List menu, <span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= menu.sz; i++)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">7</span>+i*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span> (i == t)</span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">15</span>*<span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i &lt;= menu.sz<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  %s  \n\n"</span>, menu.name[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Select</span><span class="params">(List menu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> recordt = <span class="number">1</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">print();</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" ■■■■■■■■                      ★                      ■■■■■■■■"</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (recordt != t )</span><br><span class="line">&#123;</span><br><span class="line">printmenu(menu, t);</span><br><span class="line">&#125;</span><br><span class="line">Pos(<span class="number">158</span>, <span class="number">43</span>);</span><br><span class="line">recordt = t;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_DOWN) &amp;&amp; t&lt;menu.sz<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_UP) &amp;&amp; t&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">t--;</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_RETURN))</span><br><span class="line">&#123;</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置关卡</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[l].sz == <span class="built_in">map</span>[l].capacity)</span><br><span class="line">&#123;</span><br><span class="line">ppos tmp = <span class="built_in">realloc</span>(<span class="built_in">map</span>[l].pos, (<span class="built_in">map</span>[l].capacity + <span class="number">10</span>)*<span class="keyword">sizeof</span>(pos));</span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"realloc"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>[l].pos = tmp;</span><br><span class="line"><span class="built_in">map</span>[l].capacity += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>[l].pos[<span class="built_in">map</span>[l].sz].x = x;</span><br><span class="line"><span class="built_in">map</span>[l].pos[<span class="built_in">map</span>[l].sz].y = y;</span><br><span class="line"><span class="built_in">map</span>[l].sz++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化关卡</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlevel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//MAX_LL = 160;</span></span><br><span class="line"><span class="comment">//MAX_CC = 45;</span></span><br><span class="line"><span class="comment">//MAX_L = 120;</span></span><br><span class="line"><span class="comment">//MAX_C = 44;</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">map</span>[i].pos = (ppos)<span class="built_in">malloc</span>(<span class="number">3</span> * <span class="keyword">sizeof</span>(pos));</span><br><span class="line"><span class="built_in">map</span>[i].capacity = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">map</span>[i].sz = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">20</span>; i &lt;= <span class="number">100</span>; i += <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">push(<span class="number">1</span>, i, <span class="number">22</span>);</span><br><span class="line">push(<span class="number">2</span>, i, <span class="number">22</span>);</span><br><span class="line">push(<span class="number">5</span>, i, <span class="number">22</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">8</span>; i &lt; <span class="number">38</span>; i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">push(<span class="number">2</span>, <span class="number">60</span>, i);</span><br><span class="line">push(<span class="number">3</span>, <span class="number">60</span>, i);</span><br><span class="line">push(<span class="number">5</span>, <span class="number">60</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">28</span>; i &lt;= <span class="number">92</span>; i+=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">push(<span class="number">3</span>, i, <span class="number">14</span>);</span><br><span class="line">push(<span class="number">3</span>, i, <span class="number">28</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">20</span>; i &lt;= <span class="number">100</span>; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">50</span>)i = <span class="number">72</span>;</span><br><span class="line">push(<span class="number">4</span>, i, <span class="number">8</span>);</span><br><span class="line">push(<span class="number">4</span>, i, <span class="number">36</span>);</span><br><span class="line">push(<span class="number">5</span>, i, <span class="number">8</span>);</span><br><span class="line">push(<span class="number">5</span>, i, <span class="number">36</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">9</span>; i &lt;= <span class="number">36</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">18</span>)i = <span class="number">28</span>;</span><br><span class="line">push(<span class="number">4</span>, <span class="number">20</span>, i);</span><br><span class="line">push(<span class="number">4</span>, <span class="number">100</span>, i);</span><br><span class="line">push(<span class="number">5</span>, <span class="number">20</span>, i);</span><br><span class="line">push(<span class="number">5</span>, <span class="number">100</span>, i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印关卡障碍</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printlevel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[level].sz; i++)</span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="built_in">map</span>[level].pos[i].x, <span class="built_in">map</span>[level].pos[i].y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"█"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tfree</span><span class="params">(snake *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;next)</span><br><span class="line">tfree(p-&gt;next);</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置字体颜色</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">(<span class="keyword">int</span> x)</span>   </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), tmp);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">x = rand() % <span class="number">6</span> + <span class="number">9</span>;</span><br><span class="line">&#125; <span class="keyword">while</span> (tmp == x);</span><br><span class="line">SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);  <span class="comment">//只有一个参数，改变字体颜色</span></span><br><span class="line">Color = tmp;</span><br><span class="line">tmp = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置光标位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pos</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">COORD pos;</span><br><span class="line">HANDLE hOutput;</span><br><span class="line">pos.X = x;</span><br><span class="line">pos.Y = y;</span><br><span class="line">hOutput = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">SetConsoleCursorPosition(hOutput, pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建地图</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatMap</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">PlaySound(<span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;MAX_L; i += <span class="number">2</span>)<span class="comment">//打印上下边框</span></span><br><span class="line">&#123;</span><br><span class="line">Pos(i, <span class="number">0</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">Pos(i, MAX_C);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">Sleep(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i&lt;MAX_C; i++)<span class="comment">//打印左右边框</span></span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>,i);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">Pos(MAX_L<span class="number">-2</span>,i);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">Sleep(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化蛇身</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initsnake</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">snake *tail;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">tail=(snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));<span class="comment">//从蛇尾开始，头插法，以x,y设定开始的位置//</span></span><br><span class="line">tail-&gt;x=<span class="number">24</span>;</span><br><span class="line">tail-&gt;y = <span class="number">15</span>;</span><br><span class="line">tail-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">head = (snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">head-&gt;next = tail;</span><br><span class="line">head-&gt;x = <span class="number">24</span> + <span class="number">2</span> * i;</span><br><span class="line">head-&gt;y = <span class="number">15</span>;</span><br><span class="line">tail = head;</span><br><span class="line">&#125;</span><br><span class="line">Pos(tail-&gt;x, tail-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"●"</span>);</span><br><span class="line">tail = tail-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (tail != <span class="literal">NULL</span>)<span class="comment">//从头到尾，输出蛇身</span></span><br><span class="line">&#123;</span><br><span class="line">Pos(tail-&gt;x, tail-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">tail = tail-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断是否咬到了自己</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">biteself</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">snake *self;</span><br><span class="line">self = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (self != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (self-&gt;x == head-&gt;x &amp;&amp; self-&gt;y == head-&gt;y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">self = self-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//随机出现食物/障碍</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createfood</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">snake *food_1;</span><br><span class="line">res:</span><br><span class="line">food_1 = (snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">food_1-&gt;x = (rand() % (MAX_L - <span class="number">4</span>) + <span class="number">2</span>) / <span class="number">2</span> * <span class="number">2</span>;<span class="comment">//保证其为偶数，使得食物能与蛇头对其</span></span><br><span class="line">food_1-&gt;y = rand() % (MAX_C - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">q = head;</span><br><span class="line"><span class="keyword">while</span> (q != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;x == food_1-&gt;x &amp;&amp; q-&gt;y == food_1-&gt;y) <span class="comment">//判断蛇身是否与食物重合</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(food_1);</span><br><span class="line"><span class="keyword">goto</span> res;</span><br><span class="line">&#125;</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (level)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[level].sz; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (food_1-&gt;x == <span class="built_in">map</span>[level].pos[i].x &amp;&amp; food_1-&gt;y == <span class="built_in">map</span>[level].pos[i].y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(food_1);</span><br><span class="line"><span class="keyword">goto</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mode)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[<span class="number">0</span>].sz; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (food_1-&gt;x == <span class="built_in">map</span>[<span class="number">0</span>].pos[i].x &amp;&amp; food_1-&gt;y == <span class="built_in">map</span>[<span class="number">0</span>].pos[i].y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(food_1);</span><br><span class="line"><span class="keyword">goto</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Pos(food_1-&gt;x, food_1-&gt;y);</span><br><span class="line">food = food_1;</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"★"</span>);</span><br><span class="line"><span class="keyword">if</span> (mode&amp;&amp;x)</span><br><span class="line">&#123;</span><br><span class="line">snake *food_1;</span><br><span class="line">res2:</span><br><span class="line">food_1 = (snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line">food_1-&gt;x = (rand() % (MAX_L - <span class="number">4</span>) + <span class="number">2</span>) / <span class="number">2</span> * <span class="number">2</span>;<span class="comment">//保证其为偶数，使得食物能与蛇头对其</span></span><br><span class="line">food_1-&gt;y = rand() % (MAX_C - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">q = head;</span><br><span class="line"><span class="keyword">while</span> (q != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;x == food_1-&gt;x &amp;&amp; q-&gt;y == food_1-&gt;y) <span class="comment">//判断蛇身是否与食物重合</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(food_1);</span><br><span class="line"><span class="keyword">goto</span> res2;</span><br><span class="line">&#125;</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (level)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[level].sz; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (food_1-&gt;x == <span class="built_in">map</span>[level].pos[i].x &amp;&amp; food_1-&gt;y == <span class="built_in">map</span>[level].pos[i].y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(food_1);</span><br><span class="line"><span class="keyword">goto</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mode)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[<span class="number">0</span>].sz; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (food_1-&gt;x == <span class="built_in">map</span>[<span class="number">0</span>].pos[i].x &amp;&amp; food_1-&gt;y == <span class="built_in">map</span>[<span class="number">0</span>].pos[i].y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span>(food_1);</span><br><span class="line"><span class="keyword">goto</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Pos(food_1-&gt;x, food_1-&gt;y);</span><br><span class="line">push(<span class="number">0</span>, food_1-&gt;x, food_1-&gt;y);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"█"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不能穿墙</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cantcrosswall</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (head-&gt;x == <span class="number">0</span> || head-&gt;x == MAX_L - <span class="number">2</span> || head-&gt;y == <span class="number">0</span> || head-&gt;y == MAX_C)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">endgamestatus = <span class="number">1</span>;</span><br><span class="line">endgame();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//过关</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uplevel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">print();</span><br><span class="line">Pos(<span class="number">60</span>, <span class="number">22</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"恭喜过关，三秒后切换关卡"</span>);</span><br><span class="line">Sleep(<span class="number">3000</span>);</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">endgame();</span><br><span class="line">lenth = <span class="number">4</span>;</span><br><span class="line">creatMap();</span><br><span class="line">initsnake();</span><br><span class="line">createfood(mode);</span><br><span class="line">printlevel();</span><br><span class="line">status = R;</span><br><span class="line">PlaySound(<span class="string">"running.wav"</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_FILENAME | SND_LOOP);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//蛇移动</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">snakemove</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">snake * nexthead;</span><br><span class="line"><span class="keyword">if</span> (!weisuoyuwei)</span><br><span class="line">&#123;</span><br><span class="line">cantcrosswall();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (run)<span class="keyword">return</span>;</span><br><span class="line">nexthead = (snake*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(snake));</span><br><span class="line"><span class="keyword">if</span> (status == U)</span><br><span class="line">&#123;</span><br><span class="line">nexthead-&gt;x = head-&gt;x;</span><br><span class="line">nexthead-&gt;y = head-&gt;y - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (status == D)</span><br><span class="line">&#123;</span><br><span class="line">nexthead-&gt;x = head-&gt;x;</span><br><span class="line">nexthead-&gt;y = head-&gt;y + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (status == L)</span><br><span class="line">&#123;</span><br><span class="line">nexthead-&gt;x = head-&gt;x - <span class="number">2</span>;</span><br><span class="line">nexthead-&gt;y = head-&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (status == R)</span><br><span class="line">&#123;</span><br><span class="line">nexthead-&gt;x = head-&gt;x + <span class="number">2</span>;</span><br><span class="line">nexthead-&gt;y = head-&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (weisuoyuwei)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (nexthead-&gt;x == <span class="number">0</span>)nexthead-&gt;x = MAX_L - <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (nexthead-&gt;x == MAX_L - <span class="number">2</span>)nexthead-&gt;x = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (nexthead-&gt;y == <span class="number">0</span>)nexthead-&gt;y = MAX_C - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (nexthead-&gt;y == MAX_C)nexthead-&gt;y = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (level)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[level].sz; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (nexthead-&gt;x == <span class="built_in">map</span>[level].pos[i].x &amp;&amp; nexthead-&gt;y == <span class="built_in">map</span>[level].pos[i].y)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">endgamestatus = <span class="number">4</span>;</span><br><span class="line">endgame();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (run)<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mode)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">map</span>[<span class="number">0</span>].sz;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (nexthead-&gt;x == <span class="built_in">map</span>[<span class="number">0</span>].pos[i].x &amp;&amp; nexthead-&gt;y == <span class="built_in">map</span>[<span class="number">0</span>].pos[i].y)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">endgamestatus = <span class="number">4</span>;</span><br><span class="line">endgame();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (run)<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>;</span><br><span class="line"><span class="keyword">if</span> ((nexthead-&gt;x == food-&gt;x) &amp;&amp; (nexthead-&gt;y == food-&gt;y) )<span class="comment">//如果下一个有食物//</span></span><br><span class="line">&#123;</span><br><span class="line">nexthead-&gt;next = head;</span><br><span class="line">head = nexthead;</span><br><span class="line">createfood(<span class="number">1</span>);</span><br><span class="line">q = head;</span><br><span class="line">Pos(q-&gt;x, q-&gt;y);</span><br><span class="line">color(Color);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"●"</span>);</span><br><span class="line">Pos(q-&gt;next-&gt;x, q-&gt;next-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line"><span class="keyword">while</span> (q-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">Pos(q-&gt;x, q-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">PlaySound(<span class="string">"error.wav"</span>, <span class="literal">NULL</span>, SND_FILENAME | SND_ASYNC | SND_NOSTOP);</span><br><span class="line">score = score + add*(mode+<span class="number">1</span>);</span><br><span class="line">lenth++;</span><br><span class="line">t = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>                                               <span class="comment">//如果没有食物//</span></span><br><span class="line">&#123;</span><br><span class="line">nexthead-&gt;next = head;</span><br><span class="line">head = nexthead;</span><br><span class="line">q = head;</span><br><span class="line">Pos(q-&gt;x, q-&gt;y);</span><br><span class="line"><span class="comment">//color(Color);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"●"</span>);</span><br><span class="line">Pos(q-&gt;next-&gt;x, q-&gt;next-&gt;y);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line"><span class="keyword">while</span> (q-&gt;next-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">Pos(q-&gt;next-&gt;x, q-&gt;next-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line"><span class="built_in">free</span>(q-&gt;next);</span><br><span class="line">q-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">steps++;</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span> (biteself() == <span class="number">1</span>)       <span class="comment">//判断是否会咬到自己</span></span><br><span class="line">&#123;</span><br><span class="line">endgamestatus = <span class="number">2</span>;</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color cf"</span>);</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line">system(<span class="string">"color 0f"</span>);</span><br><span class="line">endgame();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (run)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (t % <span class="number">300</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pos(food-&gt;x, food-&gt;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">createfood(mode);</span><br><span class="line">&#125;</span><br><span class="line">Pos(MAX_LL, MAX_CC);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//暂停</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pause</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//控制游戏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gamecircle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> tscore = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> tlenth = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> tadd = <span class="number">-1</span>;</span><br><span class="line">PlaySound(<span class="string">"running.wav"</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_FILENAME | SND_LOOP);</span><br><span class="line">Pos(MAX_L+<span class="number">4</span>, <span class="number">15</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"不能穿墙，不能咬到自己\n"</span>);</span><br><span class="line">Pos(MAX_L + <span class="number">4</span>, <span class="number">16</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"用↑.↓.←.→分别控制蛇的移动."</span>);</span><br><span class="line">Pos(MAX_L + <span class="number">4</span>, <span class="number">17</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"F1 为加速，F2 为减速\n"</span>);</span><br><span class="line">Pos(MAX_L + <span class="number">4</span>, <span class="number">18</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"ESC ：退出游戏.Space：暂停游戏."</span>);</span><br><span class="line">Pos(MAX_L + <span class="number">4</span>, <span class="number">20</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (mode)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_L + <span class="number">4</span>, <span class="number">22</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"躲避模式下也不能碰到障碍！！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">status = R;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tscore != score||tadd!=add)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_L + <span class="number">6</span>, <span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"得分：%d  "</span>, score);</span><br><span class="line">Pos(MAX_L + <span class="number">6</span>, <span class="number">11</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"每个食物得分：%d分"</span>, add*(mode + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_UP) &amp;&amp; status != D)</span><br><span class="line">&#123;</span><br><span class="line">status = U;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_DOWN) &amp;&amp; status != U)</span><br><span class="line">&#123;</span><br><span class="line">status = D;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_LEFT) &amp;&amp; status != R)</span><br><span class="line">&#123;</span><br><span class="line">status = L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_RIGHT) &amp;&amp; status != L)</span><br><span class="line">&#123;</span><br><span class="line">status = R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line">&#123;</span><br><span class="line">pause();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_ESCAPE))</span><br><span class="line">&#123;</span><br><span class="line">endgamestatus = <span class="number">3</span>;</span><br><span class="line">PlaySound(<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_F1))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (sleeptime &gt;= <span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">sleeptime = sleeptime - <span class="number">30</span>;</span><br><span class="line">add = add + <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (sleeptime == <span class="number">320</span>)</span><br><span class="line">&#123;</span><br><span class="line">add = <span class="number">2</span>;<span class="comment">//防止减到1之后再加回来有错</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_F2))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (sleeptime&lt;<span class="number">350</span>)</span><br><span class="line">&#123;</span><br><span class="line">sleeptime = sleeptime + <span class="number">30</span>;</span><br><span class="line">add = add - <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (sleeptime == <span class="number">350</span>)</span><br><span class="line">&#123;</span><br><span class="line">add = <span class="number">1</span>;  <span class="comment">//保证最低分为1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_F5))</span><br><span class="line">&#123;</span><br><span class="line">weisuoyuwei = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_F6))</span><br><span class="line">&#123;</span><br><span class="line">weisuoyuwei = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (level&amp;&amp;tlenth!=lenth)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_L + <span class="number">6</span>, <span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"关卡进度：%d/25"</span>, (lenth - <span class="number">4</span>) % <span class="number">25</span>);</span><br><span class="line"><span class="keyword">if</span> (lenth - <span class="number">4</span> == <span class="number">25</span> &amp;&amp; level - <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">level++;</span><br><span class="line">endgamestatus = <span class="number">0</span>;</span><br><span class="line">uplevel();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Sleep(sleeptime);</span><br><span class="line">tscore = score;</span><br><span class="line">tlenth = lenth;</span><br><span class="line">snakemove();</span><br><span class="line"><span class="keyword">if</span> (run)<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//简介界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcometogame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="comment">//int i = 7;</span></span><br><span class="line"><span class="comment">//color(13);</span></span><br><span class="line"><span class="comment">//Pos(6, 7);</span></span><br><span class="line"><span class="comment">//printf("■■■■        ★");</span></span><br><span class="line"><span class="comment">//for (i = 8; i &lt; 20; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//Pos(6, i);</span></span><br><span class="line"><span class="comment">//printf("■");</span></span><br><span class="line"><span class="comment">//Pos(MAX_L + 6, i);</span></span><br><span class="line"><span class="comment">//printf("■");</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//Pos(6, i);</span></span><br><span class="line"><span class="comment">//for (i = 6; i &lt;= MAX_L + 6; i+=2)</span></span><br><span class="line"><span class="comment">//printf("■");</span></span><br><span class="line">print();</span><br><span class="line">Pos(MAX_L/<span class="number">2</span><span class="number">-12</span>, <span class="number">7</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"用"</span>);</span><br><span class="line">color(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"↑  ↓  ←  →"</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"分别控制蛇的移动"</span>);</span><br><span class="line">Pos(MAX_L / <span class="number">2</span> - <span class="number">12</span>, <span class="number">9</span>);</span><br><span class="line">color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"F1 "</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"为加速"</span>);</span><br><span class="line">color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" F2 "</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"为减速\n"</span>);</span><br><span class="line">Pos(MAX_L / <span class="number">2</span> - <span class="number">12</span>, <span class="number">11</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"可以多点几下"</span>);</span><br><span class="line">color(<span class="number">11</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" F1 "</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"或者"</span>);</span><br><span class="line">color(<span class="number">11</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" F2 "</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"切换到你认为最适合你的难度\n"</span>);</span><br><span class="line">Pos(MAX_L/<span class="number">2</span><span class="number">-12</span>, <span class="number">13</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"加速将能得到"</span>);</span><br><span class="line">color(<span class="number">13</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"更高的分数。"</span>);</span><br><span class="line">Pos(MAX_L / <span class="number">2</span> - <span class="number">12</span>, <span class="number">15</span>);</span><br><span class="line">color(<span class="number">14</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"开始进行愉快的贪吃蛇游戏吧  ^_^\n"</span>);</span><br><span class="line">Pos(MAX_L / <span class="number">2</span><span class="number">-12</span>, <span class="number">25</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> TEST</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下空格键返回..."</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结束游戏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">endgame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">Pos(MAX_L/<span class="number">2</span>, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">if</span> (endgamestatus == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"很遗憾，你撞到了墙。游戏结束."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (endgamestatus == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"很遗憾，你咬到了自己。游戏结束."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (endgamestatus == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"你已经结束了游戏。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (endgamestatus == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"你撞上了障碍，挂了！！！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ach.step += steps;</span><br><span class="line">ach.score += score;</span><br><span class="line">ach.eat += (lenth - <span class="number">4</span>);</span><br><span class="line">saveach();</span><br><span class="line">tfree(head);</span><br><span class="line"><span class="built_in">map</span>[<span class="number">0</span>].sz = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">print();</span><br><span class="line">PlaySound(<span class="string">"death.wav"</span>, <span class="literal">NULL</span>, SND_FILENAME | SND_ASYNC);</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">13</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"你的得分是:%d,在本局游戏中你一共走了:%d格"</span>, score,steps);</span><br><span class="line"><span class="keyword">if</span> (score &gt;= top[(MAX_LL<span class="number">-70</span>)/<span class="number">30</span>*<span class="number">20</span><span class="number">-1</span>].scores&amp;&amp;endgamestatus)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">14</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">top[<span class="number">60</span>].scores = score;</span><br><span class="line"><span class="built_in">sprintf</span>(top[<span class="number">60</span>].len, <span class="string">"%d"</span>, lenth);</span><br><span class="line">top[<span class="number">60</span>].steps = steps;</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">14</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"恭喜你进入排行榜！！！！"</span>);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"是否留下你的名字？(y/n)"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;c);</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'y'</span> == c || <span class="string">'Y'</span> == c)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">16</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入你的昵称:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, top[<span class="number">60</span>].name);</span><br><span class="line">sorttop();</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">17</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"排行榜已更新..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(top[<span class="number">60</span>].name, <span class="string">"noname"</span>);</span><br><span class="line">sorttop();</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">17</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"排行榜已更新..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ach.step += steps;</span><br><span class="line">ach.score += score;</span><br><span class="line">ach.eat += (lenth - <span class="number">4</span>);</span><br><span class="line">saveach();</span><br><span class="line">tfree(head);</span><br><span class="line">run = <span class="number">1</span>;</span><br><span class="line">Pos(MAX_L / <span class="number">2</span>, <span class="number">18</span>);</span><br><span class="line"><span class="built_in">map</span>[<span class="number">0</span>].sz = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> TEST</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下空格键返回..."</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//游戏初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gamestart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> p[<span class="number">50</span>];</span><br><span class="line">sleeptime = <span class="number">200</span>;</span><br><span class="line">score = <span class="number">0</span>;</span><br><span class="line">add = <span class="number">10</span>;</span><br><span class="line">steps = <span class="number">0</span>;</span><br><span class="line">lenth = <span class="number">4</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">run = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="keyword">char</span> *)p, <span class="string">"mode con cols=%d lines=%d"</span>, MAX_LL, MAX_CC);</span><br><span class="line">system((<span class="keyword">const</span> <span class="keyword">char</span>*)p);</span><br><span class="line">creatMap();</span><br><span class="line">initsnake();</span><br><span class="line">createfood(mode);</span><br><span class="line">printlevel();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选择地图界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mapmenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">print();</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■■■■■■■■                      ★                      ■■■■■■■■"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1.地图：小"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2.地图：中"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"3.地图：大"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"选择你的地图大小:&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选择地图</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectmap</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (istest)</span><br><span class="line">input = Select(Mapmenu)+istest;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">mapmenu();</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">MAX_LL = <span class="number">100</span>;</span><br><span class="line">MAX_CC = <span class="number">30</span>;</span><br><span class="line">MAX_L = <span class="number">64</span>;</span><br><span class="line">MAX_C = <span class="number">29</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">MAX_LL = <span class="number">130</span>;</span><br><span class="line">MAX_CC = <span class="number">36</span>;</span><br><span class="line">MAX_L = <span class="number">92</span>;</span><br><span class="line">MAX_C = <span class="number">35</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">MAX_LL = <span class="number">160</span>;</span><br><span class="line">MAX_CC = <span class="number">45</span>;</span><br><span class="line">MAX_L = <span class="number">120</span>;</span><br><span class="line">MAX_C = <span class="number">44</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入有误！"</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印边框</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;MAX_LL; i += <span class="number">2</span>)<span class="comment">//打印上下边框</span></span><br><span class="line">&#123;</span><br><span class="line">Pos(i, <span class="number">0</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">Pos(i, MAX_CC - <span class="number">1</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i&lt;MAX_CC; i++)<span class="comment">//打印左右边框</span></span><br><span class="line">&#123;</span><br><span class="line">Pos(<span class="number">0</span>, i);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">Pos(MAX_LL - <span class="number">2</span>, i);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主菜单</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">print();</span><br><span class="line">Pos((MAX_LL<span class="number">-78</span>)/<span class="number">2</span><span class="number">-1</span>, MAX_CC / <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■■■■■■■■                      ★                      ■■■■■■■■"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span><span class="number">-6</span>, MAX_CC / <span class="number">2</span><span class="number">-7</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1.开始游戏"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span><span class="number">-6</span>, MAX_CC / <span class="number">2</span><span class="number">-5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2.游戏简介"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span><span class="number">-3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"3.排行榜"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"4.成就"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0.退出游戏"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选择模式界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modemenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">print();</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■■■■■■■■                      ★                      ■■■■■■■■"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1.无限模式"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2.障碍无限模式"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"3.闯关模式"</span>);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">6</span>, MAX_CC / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"4.障碍闯关模式"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">2</span> + <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"选择你的模式:&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选择模式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectmode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (istest)</span><br><span class="line">input = Select(Modemenu)+istest;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">modemenu();</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">level = <span class="number">0</span>;</span><br><span class="line">mode = <span class="number">1</span>;</span><br><span class="line">selectmap();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">level = <span class="number">0</span>;</span><br><span class="line">mode = <span class="number">0</span>;</span><br><span class="line">selectmap();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">mode = <span class="number">1</span>;</span><br><span class="line">MAX_LL = <span class="number">160</span>;</span><br><span class="line">MAX_CC = <span class="number">45</span>;</span><br><span class="line">MAX_L = <span class="number">120</span>;</span><br><span class="line">MAX_C = <span class="number">44</span>;</span><br><span class="line">level = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">mode = <span class="number">0</span>;</span><br><span class="line">MAX_LL = <span class="number">160</span>;</span><br><span class="line">MAX_CC = <span class="number">45</span>;</span><br><span class="line">MAX_L = <span class="number">120</span>;</span><br><span class="line">MAX_C = <span class="number">44</span>;</span><br><span class="line">level = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">2</span> + <span class="number">6</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入有误！"</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//游戏流程控制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">game</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//system("color 3f");</span></span><br><span class="line">selectmode();</span><br><span class="line">gamestart();</span><br><span class="line">gamecircle();</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开始动画</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startshow</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">PlaySound(<span class="string">"show.wav"</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_FILENAME);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span><span class="number">-6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line">Sleep(<span class="number">5</span>);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██████████    ████████"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">45</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██████████    ████████"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">55</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                █                █    ██"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">45</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                █                █    ██"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">35</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██████████    ██"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">25</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██████████    ████████"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ███◣                ████████"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██◥█◣                          ██"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">25</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██  ◥█◣                        ██"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">35</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"██                ██    ◥█◣                      ██"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">45</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"█████████  ██      ◥█◣        ████████"</span>);</span><br><span class="line">Pos((MAX_LL - <span class="number">56</span>) / <span class="number">2</span> - <span class="number">6</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i++);</span><br><span class="line"><span class="comment">//color(0);</span></span><br><span class="line">Sleep(<span class="number">55</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"█████████  ██        ◥█◣      ████████"</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line">Pos( MAX_LL/ <span class="number">2</span>+<span class="number">10</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i+<span class="number">3</span>);</span><br><span class="line">color(<span class="number">13</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"★"</span>);</span><br><span class="line">Pos(<span class="number">0</span>, (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> +i+<span class="number">3</span>);</span><br><span class="line">t = (MAX_CC - <span class="number">10</span>) / <span class="number">2</span> + i + <span class="number">3</span>;</span><br><span class="line">color(<span class="number">14</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_LL; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pos(i, t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"■"</span>);</span><br><span class="line"><span class="keyword">if</span> (i&gt;=<span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pos(i<span class="number">-16</span>, t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= (MAX_LL / <span class="number">2</span> + <span class="number">8</span>) &amp;&amp; i &lt;= (MAX_LL / <span class="number">2</span> + <span class="number">10</span>))</span><br><span class="line">&#123;</span><br><span class="line">color(<span class="number">13</span>);</span><br><span class="line">&#125;</span><br><span class="line">Sleep(<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试食物是否会生成在地图外</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">creatMap();</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line">Pos(MAX_L + <span class="number">4</span>, <span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下Esc结束测试状态"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)    <span class="comment">//保证其为偶数，使得食物能与蛇头对其</span></span><br><span class="line">&#123;</span><br><span class="line">x = (rand() % (MAX_L - <span class="number">4</span>) + <span class="number">2</span>)/<span class="number">2</span>*<span class="number">2</span>;</span><br><span class="line">y = rand() % (MAX_C - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">Pos(x,y);</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"█"</span>);</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_ESCAPE))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testlevel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"mode con cols=160 lines=45"</span>);</span><br><span class="line">level = <span class="number">5</span>;</span><br><span class="line">initlevel();</span><br><span class="line">printlevel();</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line"><span class="keyword">char</span> p[<span class="number">50</span>];</span><br><span class="line">istest = <span class="number">1</span>;</span><br><span class="line">system(<span class="string">"title LRS-贪吃蛇"</span>);</span><br><span class="line">initlevel();</span><br><span class="line">color(<span class="number">0</span>);</span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">inittop();</span><br><span class="line">loadach();</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="keyword">char</span> *)p, <span class="string">"mode con cols=%d lines=%d"</span>, MAX_LL, MAX_CC);</span><br><span class="line">system((<span class="keyword">const</span> <span class="keyword">char</span>*)p);</span><br><span class="line">startshow();</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">PlaySound(<span class="string">"begin.wav"</span>, <span class="literal">NULL</span>, SND_ASYNC | SND_FILENAME | SND_LOOP | SND_NOSTOP);</span><br><span class="line">weisuoyuwei = <span class="number">0</span>;</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line"><span class="comment">//keybd_event(VK_ESCAPE, (BYTE)0, 0, 0);</span></span><br><span class="line"><span class="comment">//keybd_event(VK_ESCAPE, (BYTE)0, KEYEVENTF_KEYUP, 0);</span></span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_RETURN) | GetAsyncKeyState(VK_UP) | GetAsyncKeyState(VK_DOWN));</span><br><span class="line">input = (Select(mainmenu)+<span class="number">1</span>)%<span class="number">5</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">menu();</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">14</span>, MAX_CC / <span class="number">2</span> + <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请选择:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">test();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">showach();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">showtop();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">welcometogame();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">game();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">14</span>, MAX_CC / <span class="number">2</span> + <span class="number">4</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入有误请重新输入！\n"</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (input);</span><br><span class="line">Pos(MAX_LL / <span class="number">2</span> - <span class="number">14</span>, MAX_CC / <span class="number">2</span> + <span class="number">4</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"感谢你的游玩，再见！"</span>);</span><br><span class="line">Sleep(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="top-c"><a href="#top-c" class="headerlink" title="top.c"></a>top.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"TCS.h"</span></span></span><br><span class="line"><span class="comment">//全局变量//</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> level ;                          <span class="comment">//关卡数，0表示无尽模式</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> score , add ;                    <span class="comment">//总得分与每次吃食物得分</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> status, sleeptime ;              <span class="comment">//每次运行的时间间隔</span></span><br><span class="line"><span class="keyword">extern</span> snake *head, *food;                  <span class="comment">//蛇头指针，食物指针</span></span><br><span class="line"><span class="keyword">extern</span> snake *q;                            <span class="comment">//遍历蛇的时候用到的指针</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> endgamestatus ;                  <span class="comment">//游戏结束的情况，1：撞到墙；2：咬到自己；3：主动退出游戏。</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> run ;                            <span class="comment">//判断游戏是否还能运行</span></span><br><span class="line"><span class="keyword">extern</span> player top[<span class="number">61</span>];                      <span class="comment">//排行榜</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> MAX_LL ;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> MAX_CC ;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> MAX_L ;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> MAX_C ;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> istest;</span><br><span class="line"><span class="keyword">extern</span> List Maptopmenu;</span><br><span class="line"><span class="comment">//初始化排行</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inittop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">top[<span class="number">20</span> * j + i].scores = <span class="number">999</span>;</span><br><span class="line"><span class="built_in">sprintf</span>(top[<span class="number">20</span> * j + i].len, <span class="string">"%d"</span>, <span class="number">56</span>);</span><br><span class="line">top[<span class="number">20</span> * j + i].steps = <span class="number">1658</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">top[<span class="number">20</span> * j + i].scores = <span class="number">480</span> - <span class="number">20</span> * i;</span><br><span class="line"><span class="built_in">sprintf</span>(top[<span class="number">20</span> * j + i].len ,<span class="string">"%d"</span>, <span class="number">48</span> - <span class="number">2</span> * i);</span><br><span class="line">top[<span class="number">20</span> * j + i].steps = <span class="number">999</span> - <span class="number">20</span> * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(top[<span class="number">20</span> * j + i].name, <span class="string">"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(top[<span class="number">20</span> * j + i].name, <span class="string">"LRS"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">top[<span class="number">60</span>].scores = <span class="number">0</span>;</span><br><span class="line">loadtop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排行菜单</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">topmenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> input;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (istest)</span><br><span class="line">input = Select(Maptopmenu) + istest;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">mapmenu();</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">Pos((MAX_LL - <span class="number">78</span>) / <span class="number">2</span> - <span class="number">1</span>, MAX_CC / <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入有误！"</span>);</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示排行</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showtop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = topmenu();</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">print();</span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, i + <span class="number">3</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%-5s\t%-20s%-6s\t%-3s\t%-8s"</span>, <span class="string">"名次"</span>, <span class="string">"昵称"</span>, <span class="string">"分数"</span>,<span class="string">"体长"</span>,<span class="string">"路程"</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, i + <span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">20</span>)color(<span class="number">15</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">10</span>)color(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">5</span>)color(<span class="number">9</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">3</span>)color(<span class="number">13</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">2</span>)color(<span class="number">14</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">1</span>)color(<span class="number">12</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%-5d\t%-20s%-6d\t%-3s\t%-8d"</span>, i + <span class="number">1</span>, top[j * <span class="number">20</span> + i].name, top[j * <span class="number">20</span> + i].scores, top[j * <span class="number">20</span> + i].len, top[j * <span class="number">20</span> + i].steps);</span><br><span class="line">&#125;</span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, i + <span class="number">6</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> TEST</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下空格键返回..."</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序排行</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sorttop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = (MAX_LL - <span class="number">100</span>) / <span class="number">30</span> * <span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (top[<span class="number">60</span>].scores &gt;= top[m + i].scores)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">19</span> + m; j &gt;(i + m); j--)</span><br><span class="line">&#123;</span><br><span class="line">top[j] = top[j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">top[i + m] = top[<span class="number">60</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">savetop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加载</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadtop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">FILE* c = fopen(Filename,<span class="string">"a+"</span>);</span><br><span class="line">FILE* load = fopen(Filename, <span class="string">"rb"</span>);</span><br><span class="line">fclose(c);</span><br><span class="line">c = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (load == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"load top"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(fread(&amp;top[ret++], <span class="keyword">sizeof</span>(player), <span class="number">1</span>, load));</span><br><span class="line"><span class="comment">//printf("%d", ret);</span></span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line">fclose(load);</span><br><span class="line">load = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">savetop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">FILE* save = fopen(Filename, <span class="string">"w"</span>);</span><br><span class="line"><span class="keyword">if</span> (save == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"save top"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">fwrite(&amp;top[<span class="number">0</span>], <span class="keyword">sizeof</span>(player), <span class="number">60</span>, save);</span><br><span class="line">fclose(save);</span><br><span class="line">save = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ach-c"><a href="#ach-c" class="headerlink" title="ach.c"></a>ach.c</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"TCS.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST</span></span><br><span class="line"><span class="keyword">extern</span> acheve ach;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> MAX_LL;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">achname</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line">&#125;name[<span class="number">9</span>] = &#123; &#123; <span class="string">"旅行蛇"</span>,<span class="number">10000</span> &#125;</span><br><span class="line">,&#123; <span class="string">"环游中国"</span>,<span class="number">100000</span> &#125; ,&#123;<span class="string">"遨游太空"</span>,<span class="number">1000000</span> &#125;,&#123;<span class="string">"大胃王"</span>, <span class="number">100</span>&#125;</span><br><span class="line">,&#123; <span class="string">"上古腐鲸蛇"</span>,<span class="number">10000</span> &#125;,&#123; <span class="string">"宇宙级大蛇"</span>, <span class="number">100000</span>&#125;,&#123; <span class="string">"得分高手"</span>,<span class="number">10000</span> &#125;</span><br><span class="line">,&#123; <span class="string">"得分大师"</span>,<span class="number">100000</span> &#125;,&#123;<span class="string">"得分宗师"</span>,<span class="number">1000000</span> &#125;&#125;;</span><br><span class="line"><span class="comment">//展示成就</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showach</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">print();</span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, i + <span class="number">3</span>);</span><br><span class="line">color(<span class="number">15</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%-20s\t         %-12s\t"</span>, <span class="string">"成就"</span>, <span class="string">"状态"</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">color(i % <span class="number">3</span> + <span class="number">10</span>);<span class="comment">//判断颜色</span></span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, <span class="number">2</span> * (i + <span class="number">1</span>) + <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%-20s\t"</span>, name[i].name);</span><br><span class="line"><span class="keyword">switch</span> (i / <span class="number">3</span>)<span class="comment">//判断类型</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span> (ach.step &gt;= name[i].num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10d/%-9d"</span>, name[i].num, name[i].num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10d/%-9d"</span>, ach.step, name[i].num);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (ach.eat &gt;= name[i].num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10d/%-9d"</span>, name[i].num, name[i].num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10d/%-9d"</span>, ach.eat, name[i].num);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (ach.score &gt;= name[i].num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10d/%-9d"</span>, name[i].num, name[i].num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10d/%-9d"</span>, ach.score, name[i].num);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, <span class="number">2</span> * (i + <span class="number">1</span>) + <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"走过的总步数:%d步\t吃过的食物总数:%d个\t得到的总分数:%d分"</span>, ach.step, ach.eat, ach.score);</span><br><span class="line">Pos(MAX_LL / <span class="number">5</span>, <span class="number">2</span> * (i + <span class="number">1</span>) + <span class="number">7</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> TEST</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"按下空格键返回..."</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE))</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加载</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadach</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* c = fopen(<span class="string">"ach.52m"</span>,<span class="string">"a+"</span>);<span class="comment">//如果没有就新建</span></span><br><span class="line">FILE* load = fopen(<span class="string">"ach.52m"</span>, <span class="string">"rb"</span>);</span><br><span class="line">fclose(c);</span><br><span class="line">c = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (load == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"load ach"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">ach.eat = <span class="number">0</span>;</span><br><span class="line">ach.score = <span class="number">0</span>;</span><br><span class="line">ach.step = <span class="number">0</span>;</span><br><span class="line">fread(&amp;ach, <span class="keyword">sizeof</span>(acheve), <span class="number">1</span>, load);</span><br><span class="line">fclose(load);</span><br><span class="line">load = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">saveach</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* save = fopen(<span class="string">"ach.52m"</span>, <span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">if</span> (save == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"save ach"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">fwrite(&amp;ach, <span class="keyword">sizeof</span>(acheve), <span class="number">1</span>, save);</span><br><span class="line">fclose(save);</span><br><span class="line">save = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们的贪吃蛇游戏就做好了…  </p><p>因为本人比较懒，所以用了很多全局变量 &gt; _ &lt;    </p><p>怎么样？是不是相当…花里胡哨呢？<br>注：2018.6.21之后的版本需要下载对应的音乐文件，下载链接：<a href="https://github.com/lrsand52m/tiny_project/tree/master/LRS_Tcs" target="_blank" rel="noopener">https://github.com/lrsand52m/tiny_project/tree/master/LRS_Tcs</a></p><p>下载里面的.wav文件放进你程序对应文件夹下就能正常工作了</p><pre><code>更新日志：  2018.6.10   增加障碍躲避模式   2018.6.18   增加关卡模式   2018.6.20   增加为所欲为模式  分数计算更加合理2018.6.21   增加操作优化及界面优化使其玩起来更像是游戏而不是程序</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我们实现一下用C语言编写一个能变色、能调速、能调整地图大小、有成就系统、并且能用文件保存分数和成就的贪吃蛇游戏··&lt;br&gt;工具：VS2013&lt;br&gt;语言：C&lt;br&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>创建动态通讯录</title>
    <link href="http://yoursite.com/2018/05/28/"/>
    <id>http://yoursite.com/2018/05/28/</id>
    <published>2018-05-28T09:56:35.000Z</published>
    <updated>2018-05-31T01:03:25.340Z</updated>
    
    <content type="html"><![CDATA[<p>今天我们用自定义类型和动态内存管理实现一个通讯录程序，能够实现以下要求:</p><ol><li>添加联系人信息</li><li>删除指定联系人信息</li><li>查找指定联系人信息</li><li>修改指定联系人信息</li><li>显示所有联系人信息</li><li>清空所有联系人</li><li>以名字排序所有联系人<a id="more"></a>  </li></ol><h1 id="头文件-Contact-h"><a href="#头文件-Contact-h" class="headerlink" title="头文件 Contact.h"></a>头文件 Contact.h</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __TEST_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __TEST_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once  </span></span><br><span class="line"><span class="comment">//2.实现一个通讯录；</span></span><br><span class="line"><span class="comment">//通讯录可以用来存储1000个人的信息，每个人的信息包括:</span></span><br><span class="line"><span class="comment">//姓名、性别、年龄、电话、住址</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//提供方法：</span></span><br><span class="line"><span class="comment">//1.添加联系人信息</span></span><br><span class="line"><span class="comment">//2.删除指定联系人信息</span></span><br><span class="line"><span class="comment">//3.查找指定联系人信息</span></span><br><span class="line"><span class="comment">//4.修改指定联系人信息</span></span><br><span class="line"><span class="comment">//5.显示所有联系人信息</span></span><br><span class="line"><span class="comment">//6.清空所有联系人</span></span><br><span class="line"><span class="comment">//7.以名字排序所有联系人</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;assert.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Filename <span class="meta-string">"Contact.txt"</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PERSON</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> Sex[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> Age;</span><br><span class="line"><span class="keyword">char</span> Tel[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> Address[<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line">&#125;Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BOOK</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> max;      <span class="comment">//当前上限</span></span><br><span class="line"><span class="keyword">int</span> count;    <span class="comment">//当前已存储人数</span></span><br><span class="line">Person* Data;</span><br><span class="line">&#125;Book;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initbook</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_person</span><span class="params">(Book * people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_person</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_person</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_person</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Change_person</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_person</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Req_mem</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Desbook</span><span class="params">(Book* people)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//__TEST_H__</span></span></span><br></pre></td></tr></table></figure><h1 id="源文件-Test-c"><a href="#源文件-Test-c" class="headerlink" title="源文件 Test.c"></a>源文件 Test.c</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"test.h"</span></span></span><br><span class="line"><span class="comment">//仅查找</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     输入姓名："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, name);</span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(people-&gt;Data[i].Name, name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf("没有找到该联系人！\n");</span></span><br><span class="line"><span class="comment">//system("pause");</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加载文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">load</span><span class="params">(Book*people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* op = fopen(Filename, <span class="string">"a+"</span>);</span><br><span class="line">FILE* load = fopen(Filename,<span class="string">"r"</span>);</span><br><span class="line">fclose(op);</span><br><span class="line"><span class="keyword">if</span> (load == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"load file,please try again"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (fread(&amp;(people-&gt;Data[people-&gt;count]), <span class="keyword">sizeof</span>(Person), <span class="number">1</span>, load))</span><br><span class="line">&#123;</span><br><span class="line">people-&gt;count++;</span><br><span class="line">Req_mem(people);</span><br><span class="line">&#125;</span><br><span class="line">fclose(load);</span><br><span class="line">load = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Book*people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">FILE* save = fopen(Filename,<span class="string">"w"</span>);</span><br><span class="line"><span class="keyword">if</span> (save == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"save file"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i&lt;people-&gt;count)</span><br><span class="line">&#123;</span><br><span class="line">fwrite(&amp;(people-&gt;Data[i]), <span class="keyword">sizeof</span>(Person), <span class="number">1</span>, save);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fwrite(people-&gt;Data, sizeof(Person), (size_t)people-&gt;count, save);</span></span><br><span class="line">fclose(save);</span><br><span class="line">save = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initbook</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">(people)-&gt;Data = (Person*)<span class="built_in">malloc</span>(<span class="number">2</span>*<span class="keyword">sizeof</span>(Person));</span><br><span class="line">(people)-&gt;count = <span class="number">0</span>;</span><br><span class="line">(people)-&gt;max = <span class="number">2</span>;</span><br><span class="line">load(people);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Desbook</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">free</span>(people-&gt;Data);</span><br><span class="line">people-&gt;Data = <span class="literal">NULL</span>;</span><br><span class="line">people-&gt;max = <span class="number">0</span>;</span><br><span class="line">people-&gt;count = <span class="number">0</span>;</span><br><span class="line">save(people);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     清空完毕！\n"</span>);</span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (people == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     |%-15s\t|%-5s\t|%-5s\t|%-15s\t|%-20s\n"</span>, <span class="string">"姓名"</span>, <span class="string">"性别"</span>, <span class="string">"年龄"</span>, <span class="string">"电话"</span>, <span class="string">"地址"</span>);</span><br><span class="line"><span class="keyword">for</span> (; i&lt;=people-&gt;count<span class="number">-1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     |%-15s\t"</span>, people-&gt;Data[i].Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-5s\t"</span>, people-&gt;Data[i].Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-5d\t"</span>, people-&gt;Data[i].Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-15s\t"</span>, people-&gt;Data[i].Tel);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|%-20s\n"</span>, people-&gt;Data[i].Address);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//申请内存</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Req_mem</span><span class="params">(Book *people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person* p;</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count &lt; people-&gt;max - <span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">p = (Person*)<span class="built_in">realloc</span>((people)-&gt;Data,((people)-&gt;max+=<span class="number">5</span>)*<span class="keyword">sizeof</span>(Person));</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">(people)-&gt;Data = p;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"realloc"</span>);</span><br><span class="line"><span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//增加成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_person</span><span class="params">(Book *people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="keyword">if</span> ((people)-&gt;count == <span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     通讯录已满！\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">Req_mem(people);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入姓名:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入性别:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入年龄:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;((people)-&gt;Data[(people)-&gt;count]).Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入联系方式:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Tel);</span><br><span class="line"><span class="keyword">for</span> (; i&lt;(people)-&gt;count; ++i)</span><br><span class="line">&#123;  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((people)-&gt;Data[i].Tel, (people)-&gt;Data[(people)-&gt;count].Tel) == <span class="number">0</span>)</span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\t\t     联系人已存在！\n\t\t     "</span>);  </span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请输入住址:&gt;"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ((people)-&gt;Data[(people)-&gt;count]).Address);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     增加成功！\n"</span>);</span><br><span class="line">Sleep(<span class="number">300</span>);</span><br><span class="line">(people)-&gt;count++;</span><br><span class="line"><span class="comment">//printf("count = %d\n", (*people)-&gt;count);</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ret = find_person(people);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i = ret;</span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count<span class="number">-1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">people-&gt;Data[i] = people-&gt;Data[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">people-&gt;count--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     没有该成员！\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">if</span> (people-&gt;count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     输入姓名："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(people-&gt;Data[i].Name, name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Name:%s\n\t\t     Sex:%s\n\t\t     Age:%d\n\t\t     Tel:%s\n\t\t     Add:%s\n\t\t     "</span>,</span><br><span class="line">people-&gt;Data[i].Name,</span><br><span class="line">people-&gt;Data[i].Sex,</span><br><span class="line">people-&gt;Data[i].Age,</span><br><span class="line">people-&gt;Data[i].Tel,</span><br><span class="line">people-&gt;Data[i].Address);</span><br><span class="line"><span class="comment">//printf("编号为 %d\n", i);</span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     没有找到该联系人！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改成员  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Change_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">assert(people);</span><br><span class="line"><span class="keyword">int</span> ret = find_person(people);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Name-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Sex-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Age-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;(people-&gt;Data[ret]).Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Tel-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Tel);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     Add-&gt;:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, people-&gt;Data[ret].Address);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     没有该成员！\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_person</span><span class="params">(Book* people)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (people == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     空通讯录！\n\t\t     "</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; i&lt;people-&gt;count - <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; j&lt;people-&gt;count - <span class="number">1</span> - i; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(people-&gt;Data[j].Name, people-&gt;Data[j + <span class="number">1</span>].Name) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Person tmp = people-&gt;Data[j];</span><br><span class="line">people-&gt;Data[j] = people-&gt;Data[j + <span class="number">1</span>];</span><br><span class="line">people-&gt;Data[j+<span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">show_person(people);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">()</span> <span class="comment">//自定义函根据参数改变颜色   </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//static int x = 9;</span></span><br><span class="line">SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), rand()%<span class="number">7</span>+<span class="number">9</span>);    <span class="comment">//只有一个参数，改变字体颜色</span></span><br><span class="line"><span class="comment">//if (x == 16)</span></span><br><span class="line"><span class="comment">//x = 9;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//static void change_color()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//static int i = 0;</span></span><br><span class="line"><span class="comment">//char *str[20];</span></span><br><span class="line"><span class="comment">//sprintf((char*)str, "color %x%x",0,15 - i);</span></span><br><span class="line"><span class="comment">//system((const char*)str);</span></span><br><span class="line"><span class="comment">//i++;</span></span><br><span class="line"><span class="comment">//if (15 == i)</span></span><br><span class="line"><span class="comment">//i = 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     ******************************通讯录管理系统*****************************\n\n"</span>);</span><br><span class="line">color();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************1.添加联系人**********************2.删除联系人*************\n\n"</span>);</span><br><span class="line">color();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************3.查找联系人**********************4.修改联系人*************\n\n"</span>);</span><br><span class="line">color();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************5.显示联系人**********************6.清空联系人*************\n\n"</span>);</span><br><span class="line">color();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     **************7.排序联系人**********************0.退出此程序*************\n\n"</span>);</span><br><span class="line">color();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     *************************************************************************\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand((<span class="keyword">size_t</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">Book people;</span><br><span class="line">Initbook(&amp;people);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//change_color();</span></span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     请选择:&gt; "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">switch</span> (n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">Add_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Del_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">Find_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">Change_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">show_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">Desbook(&amp;people);</span><br><span class="line">Initbook(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">BubbleSort_person(&amp;people);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">save(&amp;people);</span><br><span class="line"><span class="built_in">free</span>((&amp;people)-&gt;Data);</span><br><span class="line">color();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t     感谢您的使用，再见！"</span>);</span><br><span class="line">Sleep(<span class="number">800</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\t\t     input error!\n\t\t     "</span>);</span><br><span class="line">   system(<span class="string">"pause"</span>);</span><br><span class="line">   <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个通讯录我加入了一点花里胡哨的元素：每次操作完毕都会使背景变色，你可以试试哦~~<br>修订信息：于2018.5.31加入文件保存功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我们用自定义类型和动态内存管理实现一个通讯录程序，能够实现以下要求:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加联系人信息&lt;/li&gt;
&lt;li&gt;删除指定联系人信息&lt;/li&gt;
&lt;li&gt;查找指定联系人信息&lt;/li&gt;
&lt;li&gt;修改指定联系人信息&lt;/li&gt;
&lt;li&gt;显示所有联系人信息&lt;/li&gt;
&lt;li&gt;清空所有联系人&lt;/li&gt;
&lt;li&gt;以名字排序所有联系人
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="结构体" scheme="http://yoursite.com/tags/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>关于自定义类型</title>
    <link href="http://yoursite.com/2018/05/28/"/>
    <id>http://yoursite.com/2018/05/28/</id>
    <published>2018-05-28T07:52:01.000Z</published>
    <updated>2018-05-28T10:49:56.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、结构体类型的创建"><a href="#一、结构体类型的创建" class="headerlink" title="一、结构体类型的创建"></a>一、结构体类型的创建</h1><ul><li><p>1.结构体是一些值的集合，这些值称为成员变量。</p></li><li><p>2.结构体内的成员可以是不同类型的变量，也可以是标量，数组，指针甚至是其他的结构体。</p><a id="more"></a></li><li><p>3.结构体的创建：</p></li><li><p>例图：</p></li></ul><p><img src="/img/jiegouti.png" alt=""></p><ul><li><p>4.结构体内部成员的访问：（1）.结构体变量访问成员(结构变量的成员是通过点操作符(.)访问的.点操作符接受两个操作数.如果s是结构体的具体名称，age是其内部成员，则s.age就可以访问)。（2）结构体访问指向变量的成员（定义一个指向该结构体的结构体类型的指针ps，如果age是该结构体的内部成员，则(*s).age或者ps-&gt;age就可以访问）。</p></li><li><p>5.结构的自引用：在结构体中可以包含该结构体本身的成员，具体的自引用如下例：<br><img src="/img/yinyong.png" alt=""></p></li></ul><h1 id="二、结构体的初始化"><a href="#二、结构体的初始化" class="headerlink" title="二、结构体的初始化"></a>二、结构体的初始化</h1><ul><li><p>1.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">  <span class="keyword">char</span> name[<span class="number">10</span>];  </span><br><span class="line">  <span class="keyword">int</span> age;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s</span>=&#123;</span><span class="string">"lisi"</span>,<span class="number">22</span>&#125;;<span class="comment">//初始化</span></span><br></pre></td></tr></table></figure></li><li><p>2.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">  <span class="keyword">int</span> data;  </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">p</span>;</span>  </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span>  </span><br><span class="line">&#125;n=&#123;<span class="number">10</span>,&#123;<span class="string">"wangwu"</span>,<span class="number">21</span>&#125;,<span class="literal">NULL</span>&#125;;<span class="comment">//结构体嵌套初始化  </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">w</span>=&#123;</span><span class="number">20</span>,&#123;<span class="string">"liwu"</span>,<span class="number">23</span>&#125;,<span class="literal">NULL</span>&#125;;<span class="comment">//结构体嵌套初始化</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="三、结构体内存对齐"><a href="#三、结构体内存对齐" class="headerlink" title="三、结构体内存对齐"></a>三、结构体内存对齐</h1><ul><li>1.结构体的对齐原则：</li></ul><p>（1）第一个成员在与结构体变量偏移量为0的地址处。</p><p>（2）其他成员变量要对齐到某个数字（对齐数）的整数倍的地址处。对齐数=编译器默认的一个对齐数与该成员的大小的较小值。VS中默认的值为8， Linux中默认的值为4</p><p>（3）结构体总大小为最大对齐数（每个成员变量除了第一个成员都有一个对齐数）的整数倍。</p><p>（4）如果嵌套了结构体的情况，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体的整体大小就是所有最大对齐数的整数倍。</p><p>总体来说：结构体的内存对齐是拿空间换时间的做法，除此，对于结构体传参的问题，要传结构体的地址（函数传参的时候，参数是需要压栈的，如果传递一个结构体对象时候，结构体过大，参数压栈的系统开销比较大，所以会导致性能的下降）。</p><h1 id="四、位段"><a href="#四、位段" class="headerlink" title="四、位段"></a>四、位段</h1><ul><li><p>1.位段的声明和结构是相似的，有两个不同（一、位段的成员必须是int ,unsigned int，char.二，位段的成员名后边有一个冒号和一个数字）<br>如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      <span class="keyword">int</span> _a:<span class="number">2</span>;</span><br><span class="line">      <span class="keyword">int</span> _b:<span class="number">5</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>2.位段的内存分配</p></li></ul><p>（1）位段的空间上是按照需要以4个字节（int）或者1个字节（char）的方式来开辟的。</p><p>（2）位段涉及很多不确定因素，位段是不跨平台的，注重可移植的程序应该避免使用位段。</p><p>总体来说，跟结构相比，位段可以达到同样的效果，但是可以很好的节约空间，但是有跨平台的问题存在。</p><h1 id="五、枚举"><a href="#五、枚举" class="headerlink" title="五、枚举"></a>五、枚举</h1><p>枚举顾名思义就是一一列举。</p><ul><li>1.枚举类型的定义</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> Day  </span><br><span class="line">&#123;  </span><br><span class="line">  Mon,  </span><br><span class="line">  Tues,  </span><br><span class="line">Wed,  </span><br><span class="line">Thur,  </span><br><span class="line">Fri,  </span><br><span class="line">Sat,  </span><br><span class="line">Sun  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p> {}中的内容是枚举类型的可能取值，也叫枚举常量。这些可能取值都是有值的，默认从0开始，一次递增1，当然在定义的时候也可以赋初值的。如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">enum color  </span><br><span class="line">&#123;  </span><br><span class="line">  RED=1,  </span><br><span class="line">  GREEN=2,  </span><br><span class="line">  BLUE=4  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="六、联合"><a href="#六、联合" class="headerlink" title="六、联合"></a>六、联合</h1><ul><li>1.联合类型的定义</li></ul><p>联合类型定义的变量包含一系列的成员，特征是这些成员公用同一块空间（联合也称为共用体）。比如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//联合类型的声明  </span></span><br><span class="line"><span class="keyword">union</span> Un  </span><br><span class="line">&#123;  </span><br><span class="line">  <span class="keyword">char</span> c;  </span><br><span class="line">  <span class="keyword">int</span> i;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="comment">//联合变量的定义  </span></span><br><span class="line"><span class="keyword">union</span> Un un;</span><br></pre></td></tr></table></figure><ul><li><p>2.联合的特点<br>联合的成员是共用同一块内存空间的，这样一个联合变量的大小至少是最大成员的大小。</p></li><li><p>3.联合大小的计算</p></li></ul><p>（1）联合的大小至少是最大成员的大小。</p><p>（2）当最大成员大小不是最大对齐数的整数倍时，就要对齐到最大对齐数的整数倍。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、结构体类型的创建&quot;&gt;&lt;a href=&quot;#一、结构体类型的创建&quot; class=&quot;headerlink&quot; title=&quot;一、结构体类型的创建&quot;&gt;&lt;/a&gt;一、结构体类型的创建&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.结构体是一些值的集合，这些值称为成员变量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.结构体内的成员可以是不同类型的变量，也可以是标量，数组，指针甚至是其他的结构体。&lt;/p&gt;
    
    </summary>
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="自定义类型" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>hexo+next博客进阶攻略</title>
    <link href="http://yoursite.com/2018/05/22/"/>
    <id>http://yoursite.com/2018/05/22/</id>
    <published>2018-05-22T06:38:46.000Z</published>
    <updated>2018-05-22T09:29:36.173Z</updated>
    
    <content type="html"><![CDATA[<p>今天我将在Tim讲解完使用<strong>Github+hexo+next初步搭建自己的博客</strong>后继续讲解如何美化我们的博客，或者增加实用的（或者花里胡哨的）功能：</p><p>什么？你没看Tim的搭建攻略？没事，传送门在此：<strong><a href="https://zouchanglin.github.io/2018/05/08/2018050801/" target="_blank" rel="noopener">https://zouchanglin.github.io/2018/05/08/2018050801/</a></strong></p><a id="more"></a><h1 id="搭建前先说两句"><a href="#搭建前先说两句" class="headerlink" title="搭建前先说两句"></a>搭建前先说两句</h1><ul><li><p>再看这篇攻略之前确保你搭建好了自己的博客并且能正常使用</p></li><li><p>最好使用<strong>next</strong>主题，否则部分功能可能不能正常使用</p></li><li><p>不要作出改动后忘了保存</p></li><li><p>不要保存改动之后立即<strong>hexo d</strong>查看效果，Github服务器离我们远得很，会有延迟，建议使用<strong>hexo s</strong>在本地预览效果</p></li><li><p><strong>在进行攻略前最好备份自己的博客，因为代码中少一个符号都可能导致你的博客界面变成空白</strong>！！！！</p></li><li><h4 id="一定要看上面几句话！！！！"><a href="#一定要看上面几句话！！！！" class="headerlink" title="一定要看上面几句话！！！！"></a><strong>一定要看上面几句话！！！！</strong></h4></li></ul><h1 id="功能列表"><a href="#功能列表" class="headerlink" title="功能列表"></a>功能列表</h1><ul><li>增加用户<strong>头像</strong></li><li>增加文章<strong>字数统计</strong>与估计<strong>阅读时长</strong>和<strong>统计站点总字数</strong></li><li>实现<strong>分享功能</strong></li><li>实现博客内<strong>点击事件</strong></li><li>实现<strong>显示访客数量</strong></li><li>实现<strong>单篇文章统计访问数</strong></li><li>实现<strong>评论功能</strong></li><li>添加<strong>Github导航条</strong></li><li>实现<strong>统计站点运行时间</strong></li><li>预览前面所有的效果：<a href="http://lrsand52m.top" target="_blank" rel="noopener">http://lrsand52m.top</a></li></ul><h2 id="增加用户头像"><a href="#增加用户头像" class="headerlink" title="增加用户头像"></a>增加用户头像</h2><ul><li><p>在站点根目录下载配置文件中新增avatar，值设置为头像的链接地址。地址可以是网络地址，也可以是本地地址（放置在source/img/ 目录下）</p></li><li><p>比如我的头像图片文件名是：LRS.png      那么我把这个文件放进/img文件夹</p></li><li><p>然后在博客根目录下_config.yml里加上下面的代码：</p></li><li><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar: /img/LRS.png</span><br><span class="line">#上面是头像代码，把LRS.png改成你自己的头像文件名即可</span><br></pre></td></tr></table></figure></li><li><p>最后打开git bash，输入hexo g，然后hexo s在本地服务器查看效果吧~~~</p></li></ul><h2 id="增加文章字数统计与估计阅读时长和统计站点总字数"><a href="#增加文章字数统计与估计阅读时长和统计站点总字数" class="headerlink" title="增加文章字数统计与估计阅读时长和统计站点总字数"></a>增加文章<strong>字数统计</strong>与估计<strong>阅读时长和</strong>统计站点总字数</h2><ul><li><p>我们在实现这个功能前需要安装wordcount插件:</p></li><li><p>在git bash输入下面的代码即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure></li><li><p><strong>Node 版本 7.6.0 之前,请安装 2.x 版本 (Node.js v7.6.0 and previous) ，安装命令如下：</strong></p><p>（查看node版本：node -v）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure></li><li><p>NexT 主题默认已经集成了文章【字数统计】、【阅读时长】，【站点总字数】统计功能，如果我们需要使用，只需要在主题配置文件/next目录下的 _config.yml 中打开 wordcount 统计功能即可。如下所示：</p></li><li><p>你可以开启你自己想要开启的，下面表示全开 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true         # 单篇 字数统计，如不需要此功能就把前面的true改为false，下同理</span><br><span class="line">  min2read: true          # 单篇 阅读时长</span><br><span class="line">  totalcount: true        # 网站 字数统计</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure></li><li><p>改动之后我们还要加上说明否则站点的显示只有数字没有单位，所以我们要打开这个文件：/next/layout/_macro/post.swig ,找到下面的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>将它改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>同理，我们修改【阅读时长】，修改后如下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>总字数统计也同理—  —</p></li><li><p>修改完成后，重新执行启动服务预览就可以了。修改后，效果如下图所示：   </p></li><li><p><img src="/img/countzi.png" alt=""></p></li><li><p>感觉如何？</p></li></ul><p>​           </p><p><strong>增加分享功能</strong></p><ul><li><p>关于分享我首先是找到了使用shareSDK的分享功能，最后在实践的过程中发现它添加时步骤比较多，添加完成后效果比较丑（就是一个长条的浅蓝色按钮），而且点击后想要退出分享比较麻烦（它的取消按钮实在太难找了，它在页面最下方的位置，呈现浅灰色，这个设计太反人类了，决定放弃它了）。</p></li><li><p>在next主题的官方的文档中发现它自身集成了百度分享的功能，所以决定采用百度了。  </p></li><li><p>打开/next目录下的 _config.yml找到下面的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">#baidushare:</span><br><span class="line">  #type: button</span><br><span class="line">baidushare: true</span><br></pre></td></tr></table></figure><p>如果没找到也别慌，自己写这么一段就好</p></li><li><p>把它改成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#Share</span><br><span class="line">sharesdk: true</span><br><span class="line">shareSDKappkey: 25ec71ed74ff0</span><br><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">baidushare:</span><br><span class="line">  type: slide</span><br><span class="line">  baidushare: true</span><br></pre></td></tr></table></figure></li><li><p><strong>保存后</strong>再<strong>hexo g</strong>加<strong>hexo s</strong>在本地看看效果吧~~大概长这样：</p><p><img src="/img/baidushare.png" alt=""></p></li></ul><h2 id="实现博客内点击事件"><a href="#实现博客内点击事件" class="headerlink" title="实现博客内点击事件"></a>实现博客内<strong>点击事件</strong></h2><ul><li><p>这个功能很花里胡哨，具体看图：</p><p><img src="/img/dianjishijian.png" alt=""></p></li><li><p>实现之后在你的博客里每点击一次就会生成颜色各异的爱心</p></li><li><p>要实现点击出现桃心效果，需要在/themes/next/source/js/src里面新建一个love.js文件，在里面粘贴下面的代码：(代码有点乱，但是不影响)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></li><li><p>然后打开\themes\next\layout_layout.swig文件,在末尾（在前面引用会出现找不到的bug），引用love.js ，就是在文档末尾输入一行代码：（就是<strong>/body&gt;</strong>和<strong>/html&gt;</strong>的下面）</p><p><img src="/img/dianjidaima.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>大功告成！<strong>保存后</strong>再<strong>hexo g</strong>加<strong>hexo s</strong>在本地看看效果吧~~</p></li></ul><h2 id="实现显示访客数量"><a href="#实现显示访客数量" class="headerlink" title="实现显示访客数量"></a>实现<strong>显示访客数量</strong></h2><ul><li><p>打开\themes\next\layout_partials\footer.swig文件,在类copyright前加上红箭头指向的这句代码： </p><p><img src="/img/benzhanfangke.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="实现单篇文章统计访问数"><a href="#实现单篇文章统计访问数" class="headerlink" title="实现单篇文章统计访问数"></a>实现<strong>单篇文章统计访问数</strong></h2><ul><li><p>本段介绍如何实现通过leanCloud统计您网站的文章阅读量，并介绍一些基本实现方法。 值得庆幸的是Next主题默认就支持leanCloud的相关设置，你只需要进行几部操作就可以实现 ：</p></li><li><p><strong>注册LeanCloud</strong></p><ul><li><p>注册<a href="https://leancloud.cn/" target="_blank" rel="noopener">leanCloud</a>,操作过程略</p></li><li><p>创建应用：</p><p><img src="/img/chuangjianyingyong.png" alt=""></p><p>应用名称可随意</p></li></ul></li><li><p>点击应用名字进入应用</p><ul><li><p>创建一个叫Counter的class：</p><p><img src="/img/Counter.png" alt=""></p></li></ul></li><li><p>操作完成，在左边你会看到Counter的表 </p></li><li><h3 id="获取AppID和AppKey"><a href="#获取AppID和AppKey" class="headerlink" title="获取AppID和AppKey"></a>获取AppID和AppKey</h3></li><li><p>点击左边的设置    找到应用key选项</p><p><img src="/img/shezhi.png" alt=""></p><p>获取其中的你的AppID和你的AppKey</p></li><li><h3 id="设置主题配置文件"><a href="#设置主题配置文件" class="headerlink" title="设置主题配置文件"></a>设置主题配置文件</h3><p>设置主题配置文件<code>_config.yml</code>相关字段，实现阅读数量的统计<br>添加以下字段</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: #此处填你的app_id</span><br><span class="line">  app_key: #此处填你的的app_key</span><br></pre></td></tr></table></figure><p>完成配置并重新编译。到此已经成功设置了阅读量的统计。</p><p><strong>注意！！！！！！</strong></p></li><li><p>如果完成上述操作<strong>你已经正常显示</strong>了文章阅读统计那么下面的额外操作就不需要看了，你可以直接跳过。</p></li><li><p>但是<strong>如果你没有实现该功能</strong>，那么请仔细阅读下面的额外操作，尽量别把代码抄错了！</p></li><li><p><strong>额外操作部分</strong></p></li><li><p>按照next的代码组成和位置(当然你可以自定你的相关代码位置，本例将以next的位置方式存放对应的代码文件)</p></li><li><p>要实现leanCloud的相关功能你需要编辑或者新建以下部分代码:</p></li><li><p>_layout.swig -<code>themes\next\layout\_layout.swig</code>:主要是引用leanCloud的代码文件(此文件也是主题全局初始化引用接口)</p></li><li><p>post.swig -<code>themes\next\layout\_macro\post.swig</code>:主要是文章主题的代码文件(包含主题显示阅读数量的代码)</p></li><li><p>lean-analytics.swig -<code>themes\next\layout\_scripts\third-party\lean-analytics.swig</code>:包含leanCloud功能代码文件<br>以上为next的文件解析和位置介绍。你可以不需要按照以上位置设置，但相关文件的代码引用需要您自行修改。如果<br>文件存在请新建。以下贴出相关代码</p></li><li><p><strong>实现代码</strong></p></li><li><p><strong>_layout.swig代码</strong></p></li><li><p>你需要添加以下部分代码：通常如果next集成了leanCloud,你会发现以下代码</p><p>代码的作用是<code>引用leanCloud的功能代码</code>。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;_scripts/third-party/lean-analytics.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>post.swig代码</strong></p></li><li><p>你需要在合适的位置添加如下代码，同理如果你的NEXT集成了LeanCloud功能，你会发现以下代码</p><p>代码主要是在<code>文章显示阅读次数</code>等</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;# LeanCould PageView #&#125;</span><br><span class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</span><br><span class="line">   &lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</span><br><span class="line">     &amp;nbsp; | &amp;nbsp;</span><br><span class="line">     &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">       &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">     &lt;/span&gt;</span><br><span class="line">     &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125; &lt;/span&gt;</span><br><span class="line">     &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>lean-analytic.swig代码</strong></p></li><li><p>如果你的NEXT集成了leanCloud功能，你会在本文提到的位置看到此文件，若果没有请新建并填入</p><p>以下代码</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;# custom analytics part create by xiamo #&#125;</span><br><span class="line">  &lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    function showTime(Counter) &#123;</span><br><span class="line">      var query = new AV.Query(Counter);</span><br><span class="line">      var entries = [];</span><br><span class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</span><br><span class="line"></span><br><span class="line">      $visitors.each(function () &#123;</span><br><span class="line">        entries.push( $(this).attr(&quot;id&quot;).trim() );</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      query.containedIn(&apos;url&apos;, entries);</span><br><span class="line">      query.find()</span><br><span class="line">        .done(function (results) &#123;</span><br><span class="line">          var COUNT_CONTAINER_REF = &apos;.leancloud-visitors-count&apos;;</span><br><span class="line"></span><br><span class="line">          if (results.length === 0) &#123;</span><br><span class="line">            $visitors.find(COUNT_CONTAINER_REF).text(0);</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          for (var i = 0; i &lt; results.length; i++) &#123;</span><br><span class="line">            var item = results[i];</span><br><span class="line">            var url = item.get(&apos;url&apos;);</span><br><span class="line">            var time = item.get(&apos;time&apos;);</span><br><span class="line">            var element = document.getElementById(url);</span><br><span class="line"></span><br><span class="line">            $(element).find(COUNT_CONTAINER_REF).text(time);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(function (object, error) &#123;</span><br><span class="line">          console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function addCount(Counter) &#123;</span><br><span class="line">      var $visitors = $(&quot;.leancloud_visitors&quot;);</span><br><span class="line">      var url = $visitors.attr(&apos;id&apos;).trim();</span><br><span class="line">      var title = $visitors.attr(&apos;data-flag-title&apos;).trim();</span><br><span class="line">      var query = new AV.Query(Counter);</span><br><span class="line"></span><br><span class="line">      query.equalTo(&quot;url&quot;, url);</span><br><span class="line">      query.find(&#123;</span><br><span class="line">        success: function(results) &#123;</span><br><span class="line">          if (results.length &gt; 0) &#123;</span><br><span class="line">            var counter = results[0];</span><br><span class="line">            counter.fetchWhenSave(true);</span><br><span class="line">            counter.increment(&quot;time&quot;);</span><br><span class="line">            counter.save(null, &#123;</span><br><span class="line">              success: function(counter) &#123;</span><br><span class="line">                var $element = $(document.getElementById(url));</span><br><span class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.get(&apos;time&apos;));</span><br><span class="line">              &#125;,</span><br><span class="line">              error: function(counter, error) &#123;</span><br><span class="line">                console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            var newcounter = new Counter();</span><br><span class="line">            /* Set ACL */</span><br><span class="line">            var acl = new AV.ACL();</span><br><span class="line">            acl.setPublicReadAccess(true);</span><br><span class="line">            acl.setPublicWriteAccess(true);</span><br><span class="line">            newcounter.setACL(acl);</span><br><span class="line">            /* End Set ACL */</span><br><span class="line">            newcounter.set(&quot;title&quot;, title);</span><br><span class="line">            newcounter.set(&quot;url&quot;, url);</span><br><span class="line">            newcounter.set(&quot;time&quot;, 1);</span><br><span class="line">            newcounter.save(null, &#123;</span><br><span class="line">              success: function(newcounter) &#123;</span><br><span class="line">                var $element = $(document.getElementById(url));</span><br><span class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(newcounter.get(&apos;time&apos;));</span><br><span class="line">              &#125;,</span><br><span class="line">              error: function(newcounter, error) &#123;</span><br><span class="line">                console.log(&apos;Failed to create&apos;);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function(error) &#123;</span><br><span class="line">          console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $(function() &#123;</span><br><span class="line">      var Counter = AV.Object.extend(&quot;Counter&quot;);</span><br><span class="line">      if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123;</span><br><span class="line">        addCount(Counter);</span><br><span class="line">      &#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123;</span><br><span class="line">        showTime(Counter);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="修改语言配置文件"><a href="#修改语言配置文件" class="headerlink" title="修改语言配置文件"></a>修改语言配置文件</h4></li><li><p>主要是添加<code>visitors</code>字段<br><strong>英文网站：</strong>修改<code>themes\next\languages\en.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">  sticky: Sticky</span><br><span class="line">  posted: Posted on</span><br><span class="line">  visitors: Views // 增加的字段</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><strong>中文网站：</strong>修改<code>themes\next\languages\zh-Hans.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">  posted: 发表于</span><br><span class="line">  visitors: 阅读次数</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure></li><li><p><strong>WEB安全</strong></p></li><li><p>为了保证应用的统计计数功能仅应用于自己的博客系统，你可以在应用-&gt;<code>设置</code>-&gt;<code>安全中心的Web安全域名</code></p><p>中加入自己的博客域名，以保证数据的调用安全。</p><p><img src="/img/anquanyuming.png" alt=""></p></li><li><h3 id="设置完成"><a href="#设置完成" class="headerlink" title="设置完成"></a>设置完成</h3></li><li><p>以上部分设置完成，就可以正常使用leanCloudS实现文章阅读统计。</p></li></ul><h2 id="实现评论功能"><a href="#实现评论功能" class="headerlink" title="实现评论功能"></a>实现<strong>评论功能</strong></h2><ul><li><h3 id="评论功能概述"><a href="#评论功能概述" class="headerlink" title="评论功能概述"></a>评论功能概述</h3><ul><li>目前博客站点使用的评论功能，多说，网易云跟贴都已经下线。Disqus也被挡在墙外，友言貌似也不行。</li></ul><p>可用的评论系统大概有：</p><ul><li>HyperComments：<a href="https://link.zhihu.com/?target=https%3A//www.hypercomments.com" target="_blank" rel="noopener">https://www.hypercomments.com</a> （来自俄罗斯的评论系统，使用谷歌账号注册。可以访问，不会用，好气。）</li><li>来必力：<a href="https://link.zhihu.com/?target=https%3A//livere.com" target="_blank" rel="noopener">https://livere.com</a> （来自韩国，使用邮箱注册。）</li><li>畅言： <a href="https://link.zhihu.com/?target=http%3A//changyan.kuaizhan.com" target="_blank" rel="noopener">http://changyan.kuaizhan.com</a> （安装需要备案号。不太好用。）</li><li>Gitment： <a href="https://link.zhihu.com/?target=https%3A//github.com/imsun/gitment" target="_blank" rel="noopener">https://github.com/imsun/gitment</a> （有点小bug，比如说每次需要手动初始化，登录时会跳到主页。。）</li><li>Valine:  <a href="https://link.zhihu.com/?target=https%3A//github.com/xCss/Valine" target="_blank" rel="noopener">https://github.com/xCss/Valine</a> (基于Leancloud的极简风评论系统，用了下，没效果，是我Next主题的原因还是？）</li><li>综上，最终采用了来必力。</li></ul></li><li><p><strong>注册账号</strong></p><ul><li>打开来必力官网注册：<a href="https://link.zhihu.com/?target=https%3A//livere.com" target="_blank" rel="noopener">https://livere.com</a></li><li>（如注册不来请自行科学上网）</li></ul></li><li><p><strong>安装</strong></p><ul><li><p>点击上方的安装，选择免费的city版本。</p></li><li><p>并点击现在安装，出现如下界面。 </p><p><img src="/img/laibili.png" alt=""></p></li></ul></li><li><ul><li><p>复制其中的uid字段。</p><p>打开主题目录下的<code>blog/themes/next/_config.yml</code>配置文件，定位到<code>livere_uid</code>字段，粘贴上刚刚复制的UID。</p><p>至此，大功告成。</p></li></ul></li></ul><h2 id="添加Github导航条"><a href="#添加Github导航条" class="headerlink" title="添加Github导航条"></a>添加<strong>Github导航条</strong></h2><ul><li>在首页添加github导航条，点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>选择需要的样式，然后将代码复制到themes/next/layout/_layout.swig  </li></ul><p><img src="/img/daohangtiao.png" alt=""></p><ul><li><p>并将href后面的网址改为你的github地址，最终界面如图 ：</p><p><img src="/img/daohangtiao2.png" alt=""></p></li></ul><h2 id="实现统计站点运行时间"><a href="#实现统计站点运行时间" class="headerlink" title="实现统计站点运行时间"></a>实现<strong>统计站点运行时间</strong></h2><ul><li><p>实时展示你的博客已经运行了多长时间了，我还是蛮喜欢这个功能的，随着时间的增长，和你的博客访问量形成照样，成就感也会增添不少。 </p></li><li><p>在 <code>hexo/themes/[your theme]/layout</code> 文件夹下找到你的 <code>footer</code> 文件，即脚布局文件，在对应的位置添加一下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date(); </span><br><span class="line">    function createtime() &#123; </span><br><span class="line">        var grt= new Date(&quot;02/14/2018 12:49:00&quot;);//此处修改你的建站时间或者网站上线时间 </span><br><span class="line">        now.setTime(now.getTime()+250); </span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125; </span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125; </span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; </span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>下面是效果图：</li></ul><p><img src="/img/tongjishijian.png" alt=""></p></li></ul><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><ul><li>功能暂时只添加这么多，后面应该会持续更新些新奇的玩意，想查看所有效果的预览，请直接进：<a href="http://lrsand52m.top" target="_blank" rel="noopener">http://lrsand52m.top</a></li><li>感谢你的观看！</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我将在Tim讲解完使用&lt;strong&gt;Github+hexo+next初步搭建自己的博客&lt;/strong&gt;后继续讲解如何美化我们的博客，或者增加实用的（或者花里胡哨的）功能：&lt;/p&gt;
&lt;p&gt;什么？你没看Tim的搭建攻略？没事，传送门在此：&lt;strong&gt;&lt;a href=&quot;https://zouchanglin.github.io/2018/05/08/2018050801/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zouchanglin.github.io/2018/05/08/2018050801/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>主要元素求法及优化</title>
    <link href="http://yoursite.com/2018/05/21/"/>
    <id>http://yoursite.com/2018/05/21/</id>
    <published>2018-05-21T11:15:25.000Z</published>
    <updated>2018-05-21T11:36:01.597Z</updated>
    
    <content type="html"><![CDATA[<p>在一本书中，我看到这样一道题：<strong>已知一个数组中有一个元素的出现次数占所有元素个数一半以上，找出这个元素。</strong></p><a id="more"></a><p>我想：真简单！</p><p>是的，两个for循环能解决的问题，的确不能说难。</p><p>但是，两个for循环的确有些浪费，效率也奇低，有点儿“拿不出手”，所以我开始思索如何简化算法（日常思索）：</p><p>突然我心生一计：既然出现的频率这么高，那我对这个数组排完序，出现在中间的数不就是这个主要元素吗？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 假设数组为：5 4 3 3 3 2 3 1 3  </span><br><span class="line">2. 排完序后为：1 2 3 3 3 3 3 4 5</span><br></pre></td></tr></table></figure><p>这样这个算法的时间复杂度就完全取决于我排序算法的时间复杂度了</p><p>真是令人振奋呢：排序有三种不同时间复杂度的：</p><table><thead><tr><th style="text-align:center">排序方法</th><th style="text-align:center">复杂度</th><th style="text-align:center">推荐程度</th></tr></thead><tbody><tr><td style="text-align:center">冒泡排序</td><td style="text-align:center">O(N^2)</td><td style="text-align:center">**</td></tr><tr><td style="text-align:center">桶排序</td><td style="text-align:center">O(N)</td><td style="text-align:center">**</td></tr><tr><td style="text-align:center">快速排序</td><td style="text-align:center">O(NlogN)</td><td style="text-align:center">***</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">…</td></tr></tbody></table><p>当然这里只推荐快排，因为我们给出的数值范围不确定，这样桶排序极其容易浪费掉大量内存，也是“拿不出手”的。</p><p>但是快排的时间复杂度也不能说是很低，能不能更加简化呢？比如说O(N)或者O(logN)？</p><p>好吧，我们是理智人，O(logN)就有点逆天，毕竟读入数组就不止这个复杂度了。</p><p>所以我们重点讨论O(N)的情形：</p><p>消除法：因为占的”份额”实在是多，所以主要元素就是与其他元素一一消除，最终剩下的数也绝对是主元素，所以我们可以考虑用这个方法来“消”出这个主要元素。</p><p>这样我们就创造一个计数器k，当遇到相同元素+1，不同减一，很容易知道最终结果必为正数。不过中间过程中会遇到为0的情况，这样我们就初始化k的值，并且把他的指向保存到下一位就行了。</p><p>在指完整个数组后，最近保存的指向肯定就是主要元素啦！（想想为什么）</p><p>代码附上：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="keyword">int</span> book = <span class="number">1</span>;<span class="comment">//提供消除依据  </span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;<span class="comment">//记录当前比较的数  </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);  </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    i = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> == n);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">while</span>(i&lt;n)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">if</span>(a[i] == a[num])  </span><br><span class="line">            &#123;  </span><br><span class="line">                book++;<span class="comment">//相等book+1，数组元素向后寻找  </span></span><br><span class="line">                i++;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span>   </span><br><span class="line">            &#123;  </span><br><span class="line">                book--;<span class="comment">//不等-1  </span></span><br><span class="line">                <span class="keyword">if</span>(!book)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    i++;<span class="comment">//book=0时，标记数也之移动  </span></span><br><span class="line">                    num = i;  </span><br><span class="line">                &#125;  </span><br><span class="line">                <span class="keyword">else</span> i++;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"主元素为：%d\n"</span>,a[num]);<span class="comment">//主要元素肯定是标记的数，输出就行  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在一本书中，我看到这样一道题：&lt;strong&gt;已知一个数组中有一个元素的出现次数占所有元素个数一半以上，找出这个元素。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数组运算" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
</feed>
